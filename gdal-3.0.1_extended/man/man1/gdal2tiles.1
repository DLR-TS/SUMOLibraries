.TH "gdal2tiles" 1 "Fri Jun 28 2019" "GDAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gdal2tiles \- Generates directory with TMS tiles, KMLs and simple web viewers\&.
.SH "SYNOPSIS"
.PP
.PP
.nf
gdal2tiles.py [-p profile] [-r resampling] [-s srs] [-z zoom]
              [-e] [-a nodata] [-v] [-q] [-h] [-k] [-n] [-u url]
              [-w webviewer] [-t title] [-c copyright]
              [--processes=NB_PROCESSES]
              [-g googlekey] [-b bingkey] input_file [output_dir]
.fi
.PP
.SH "DESCRIPTION"
.PP
This utility generates a directory with small tiles and metadata, following the OSGeo Tile Map Service Specification\&. Simple web pages with viewers based on Google Maps, OpenLayers and Leaflet are generated as well - so anybody can comfortably explore your maps on-line and you do not need to install or configure any special software (like MapServer) and the map displays very fast in the web browser\&. You only need to upload the generated directory onto a web server\&.
.PP
GDAL2Tiles also creates the necessary metadata for Google Earth (KML SuperOverlay), in case the supplied map uses EPSG:4326 projection\&.
.PP
World files and embedded georeferencing is used during tile generation, but you can publish a picture without proper georeferencing too\&.
.PP
.IP "\fB\fB-p\fP \fIPROFILE\fP, --profile=\fIPROFILE\fP: \fP" 1c
Tile cutting profile (mercator,geodetic,raster) - default 'mercator' (Google Maps compatible)\&. 
.IP "\fB\fB-r\fP \fIRESAMPLING\fP, --resampling=\fIRESAMPLING\fP: \fP" 1c
Resampling method (average,near,bilinear,cubic,cubicspline,lanczos,antialias) - default 'average'\&. 
.IP "\fB\fB-s\fP \fISRS\fP, --s_srs=\fISRS\fP: \fP" 1c
The spatial reference system used for the source input data\&. 
.IP "\fB\fB-z\fP \fIZOOM\fP, --zoom=\fIZOOM\fP: \fP" 1c
Zoom levels to render (format:'2-5' or '10')\&. 
.IP "\fB\fB-e\fP, --resume: \fP" 1c
Resume mode\&. Generate only missing files\&. 
.IP "\fB\fB-a\fP \fINODATA\fP, --srcnodata=\fINODATA\fP: \fP" 1c
NODATA transparency value to assign to the input data\&. 
.IP "\fB\fB-v, --verbose\fP \fP" 1c
Generate verbose output of tile generation\&. 
.IP "\fB\fB-q, --quiet\fP \fP" 1c
Disable messages and status to stdout (GDAL >= 2\&.1)\&. 
.IP "\fB\fB--processes=\fP\fINB_PROCESSES\fP \fP" 1c
Number of processes to use for tiling (GDAL >= 2\&.3)\&. 
.IP "\fB\fB-h, --help\fP \fP" 1c
Show help message and exit\&. 
.IP "\fB\fB--version\fP \fP" 1c
Show program's version number and exit\&. 
.PP
.PP
\fBKML (Google Earth) options:\fP
.PP
Options for generated Google Earth SuperOverlay metadata 
.IP "\fB\fB-k, --force-kml\fP \fP" 1c
Generate KML for Google Earth - default for 'geodetic' profile and 'raster' in EPSG:4326\&. For a dataset with different projection use with caution! 
.IP "\fB\fB-n, --no-kml\fP: \fP" 1c
Avoid automatic generation of KML files for EPSG:4326\&. 
.IP "\fB\fB-u\fP \fIURL\fP, --url=\fIURL\fP: \fP" 1c
URL address where the generated tiles are going to be published\&. 
.PP
.PP
\fBWeb viewer options:\fP
.PP
Options for generated HTML viewers a la Google Maps 
.IP "\fB\fB-w\fP \fIWEBVIEWER\fP, --webviewer=\fIWEBVIEWER\fP: \fP" 1c
Web viewer to generate (all,google,openlayers,leaflet,none) - default 'all'\&. 
.IP "\fB\fB-t\fP \fITITLE\fP, --title=\fITITLE\fP: \fP" 1c
Title of the map\&. 
.IP "\fB\fB-c\fP \fICOPYRIGHT\fP, --copyright=\fICOPYRIGHT\fP: \fP" 1c
Copyright for the map\&. 
.IP "\fB\fB-g\fP \fIGOOGLEKEY\fP, --googlekey=\fIGOOGLEKEY\fP: \fP" 1c
Google Maps API key from http://code.google.com/apis/maps/signup.html\&. 
.IP "\fB\fB-b\fP \fIBINGKEY\fP, --bingkey=\fIBINGKEY\fP: \fP" 1c
Bing Maps API key from https://www.bingmapsportal.com/
.PP
.PP
.PP
NOTE: gdal2tiles\&.py is a Python script that needs to be run against 'new generation' Python GDAL binding\&.
.SH "AUTHORS"
.PP
Klokan Petr Pridal klokan@klokan.cz as a Google SoC 2007 Project\&. 
