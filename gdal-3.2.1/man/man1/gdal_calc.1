.\" Man page generated from reStructuredText.
.
.TH "GDAL_CALC" "1" "Dec 29, 2020" "" "GDAL"
.SH NAME
gdal_calc \- Command line raster calculator with numpy syntax.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
gdal_calc.py \-\-calc=expression \-\-outfile=out_filename [\-A filename]
             [\-\-A_band=n] [\-B...\-Z filename] [other_options]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
DESCRIPTION
.sp
Command line raster calculator with numpy syntax. Use any basic
arithmetic supported by numpy arrays such as \fB+\fP, \fB\-\fP, \fB*\fP, and
\fB\e\fP along with logical operators such as \fB>\fP\&. Note that all files
must have the same dimensions, but no projection checking is
performed.
.INDENT 0.0
.TP
.B \-\-help
Show this help message and exit
.UNINDENT
.INDENT 0.0
.TP
.B \-h
The same as \fI\%\-\-help\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-calc=expression
Calculation in gdalnumeric syntax using \fB+\fP, \fB\-\fP, \fB/\fP, \fB*\fP, or any numpy array functions (i.e. \fBlog10()\fP).
Multiple \fB\-\-calc\fP options can be listed to produce a multiband file (GDAL >= 3.2).
.UNINDENT
.INDENT 0.0
.TP
.B \-A <filename>
Input gdal raster file, you can use any letter (A\-Z).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-A_band=<n>
Number of raster band for file A (default 1).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-outfile=<filename>
Output file to generate or fill.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-NoDataValue=<value>
Output nodata value (default datatype specific value).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-type=<datatype>
Output datatype, must be one of [\fBInt32\fP, \fBInt16\fP, \fBFloat64\fP, \fBUInt16\fP, \fBByte\fP, \fBUInt32\fP, \fBFloat32\fP].
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Despite the datatype set using \fB\-\-type\fP, when doing intermediate aritmethic operations using operands of the
same type, the operation result will honor the original datatype. This may lead into unexpected results in the final result.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-format=<gdal_format>
GDAL format for output file.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-creation\-option=<option>
Passes a creation option to the output format driver.  Multiple
options may be listed. See format specific documentation for legal
creation options for each format.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-co=<option>
The same as \fI\%creation\-option\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-allBands=[A\-Z]
Process all bands of given raster (A\-Z). Requires a single calc for all bands.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-overwrite
Overwrite output file if it already exists.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-debug
Print debugging information.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-quiet
Suppress progress messages.
.UNINDENT
.SH EXAMPLE
.sp
Add two files together:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
gdal_calc.py \-A input1.tif \-B input2.tif \-\-outfile=result.tif \-\-calc="A+B"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Average of two layers:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
gdal_calc.py \-A input.tif \-B input2.tif \-\-outfile=result.tif \-\-calc="(A+B)/2"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
In the previous example, beware that if A and B inputs are of the same datatype, for example integers, you
may need to force the conversion of one of the operands before the division operation.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
gdal_calc.py \-A input.tif \-B input2.tif \-\-outfile=result.tif \-\-calc="(A.astype(numpy.float64) + B) / 2"
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Set values of zero and below to null:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
gdal_calc.py \-A input.tif \-\-outfile=result.tif \-\-calc="A*(A>0)" \-\-NoDataValue=0
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Using logical operator to keep a range of values from input:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
gdal_calc.py \-A input.tif \-\-outfile=result.tif \-\-calc="A*logical_and(A>100,A<150)"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Work with multiple bands:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
gdal_calc.py \-A input.tif \-\-A_band=1 \-B input.tif \-\-B_band=2 \-\-outfile=result.tif \-\-calc="(A+B)/2" \-\-calc="B*logical_and(A>100,A<150)"
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
Chris Yesson <chris dot yesson at ioz dot ac dot uk>, Etienne Tourigny <etourigny dot dev at gmail dot com>
.SH COPYRIGHT
1998-2020
.\" Generated by docutils manpage writer.
.
