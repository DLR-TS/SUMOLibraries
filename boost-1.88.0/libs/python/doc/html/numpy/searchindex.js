Search.setIndex({"docnames": ["index", "reference/binary_ufunc", "reference/dtype", "reference/index", "reference/multi_iter", "reference/ndarray", "reference/unary_ufunc", "tutorial/dtype", "tutorial/fromdata", "tutorial/index", "tutorial/ndarray", "tutorial/simple", "tutorial/ufunc"], "filenames": ["index.rst", "reference/binary_ufunc.rst", "reference/dtype.rst", "reference/index.rst", "reference/multi_iter.rst", "reference/ndarray.rst", "reference/unary_ufunc.rst", "tutorial/dtype.rst", "tutorial/fromdata.rst", "tutorial/index.rst", "tutorial/ndarray.rst", "tutorial/simple.rst", "tutorial/ufunc.rst"], "titles": ["Welcome to the documentation of the Boost.Python NumPy extension!", "binary_ufunc", "dtype", "Boost.Python NumPy extension Reference", "multi_iter", "ndarray", "unary_ufunc", "How to use dtypes", "How to access data using raw pointers", "Boost.Python NumPy extension Tutorial", "Creating ndarrays", "A simple tutorial on Arrays", "Ufuncs"], "terms": {"tutori": [0, 7, 10], "A": [0, 1, 2, 4, 5, 6, 9, 10], "simpl": [0, 9, 10], "arrai": [0, 4, 5, 7, 8, 9, 10, 12], "how": [0, 9, 10, 12], "us": [0, 1, 4, 5, 6, 9, 10, 11, 12], "dtype": [0, 3, 5, 8, 9, 10, 11, 12], "creat": [0, 1, 2, 5, 6, 7, 8, 9, 11, 12], "ndarrai": [0, 2, 3, 7, 8, 9, 11, 12], "ufunc": [0, 1, 4, 6, 9], "access": [0, 9], "data": [0, 2, 5, 7, 9, 10, 11], "raw": [0, 5, 9], "pointer": [0, 4, 5, 9], "refer": [0, 8], "unary_ufunc": [0, 3, 12], "binary_ufunc": [0, 3, 12], "multi_it": [0, 3], "i": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12], "struct": [1, 6, 12], "an": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12], "intermedi": [1, 6], "step": [1, 6], "broadcast": [1, 4, 6, 12], "two": [1, 4, 12], "argument": [1, 6, 7, 10], "so": [1, 5, 6, 7], "c": [1, 2, 5, 6, 7, 8, 10, 12], "function": [1, 6, 10, 12], "can": [1, 6, 7, 8, 10, 11, 12], "convert": [1, 2, 5, 6, 7, 11], "like": [1, 6, 7, 8, 11], "boost": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12], "python": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12], "numpi": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12], "hpp": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12], "contain": [1, 2, 4, 5, 6, 7, 10], "structur": [1, 5, 6], "definit": [1, 4, 6], "namespac": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12], "templat": [1, 2, 5, 6, 7], "typenam": [1, 2, 5, 6], "tbinaryfunctor": 1, "targument1": 1, "first_argument_typ": [1, 12], "targument2": 1, "second_argument_typ": [1, 12], "tresult": [1, 6], "result_typ": [1, 6, 12], "static": [1, 2, 6], "object": [1, 2, 4, 5, 6, 8, 10, 12], "call": [1, 2, 5, 6, 10, 11, 12], "self": [1, 6], "const": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12], "input1": 1, "input2": 1, "output": [1, 6, 12], "make": [1, 6, 8, 10, 12], "example_binary_ufunc": 1, "typedef": [1, 6, 12], "any_valid": [1, 6], "requir": [1, 2, 5, 6], "The": [1, 2, 5, 6, 7, 8, 10, 11, 12], "type": [1, 2, 5, 6, 7, 10, 11, 12], "must": [1, 2, 5, 6, 10, 12], "defin": [1, 2, 6], "valid": [1, 2, 6], "order": [1, 6], "method": [1, 2, 5, 6, 7, 8, 10, 12], "correctli": [1, 6], "note": [1, 5, 6], "expos": [1, 6, 10, 12], "class": [1, 2, 4, 5, 6, 12], "instanc": [1, 6, 12], "correspond": [1, 2, 6, 7, 10], "__call__": [1, 6, 12], "attribut": [1, 5, 6], "input": [1, 6, 12], "option": [1, 5, 6, 10], "result": [1, 6, 11, 12], "effect": [1, 2, 4, 6], "pass": [1, 6, 7, 8, 10], "underli": [1, 6], "functor": [1, 6], "after": [1, 6, 12], "its": [1, 4, 5, 6, 7], "return": [1, 2, 4, 5, 6, 10, 12], "overload": [1, 6, 12], "oper": [1, 5, 6, 12], "typic": [1, 6], "usag": [1, 6], "p": [1, 2, 5, 6, 7, 8, 10, 11, 12], "np": [1, 2, 5, 6, 7, 8, 10, 11, 12], "binarysquar": [1, 12], "doubl": [1, 2, 6, 7, 12], "b": [1, 5, 10, 11, 12], "ud": [1, 6, 12], "class_": [1, 6, 12], "shared_ptr": [1, 6, 12], "def": [1, 6, 12], "inst": [1, 6, 12], "result_arrai": [1, 12], "attr": [1, 6, 12], "demo_arrai": [1, 12], "std": [1, 5, 6, 7, 8, 10, 11, 12], "cout": [1, 6, 7, 8, 10, 11, 12], "squar": [1, 5, 6, 12], "list": [1, 5, 7, 10, 11, 12], "binari": [1, 12], "extract": [1, 6, 7, 8, 10, 11, 12], "char": [1, 4, 5, 6, 7, 8, 10, 11, 12], "str": [1, 6, 7, 8, 10, 11, 12], "endl": [1, 6, 7, 8, 10, 11, 12], "describ": 2, "element": [2, 4, 5, 8, 10, 12], "necessari": [2, 5, 7, 8, 10, 11, 12], "gener": [2, 4, 5, 10, 12], "equival": 2, "from": [2, 5, 7, 10], "builtin": [2, 7], "well": [2, 8, 10], "custom": [2, 7], "user": [2, 5], "public": [2, 4, 5], "detail": 2, "new_refer": 2, "object_cref": 2, "arg": 2, "bool": [2, 4], "align": [2, 5], "arbitrari": [2, 5, 10], "descriptor": [2, 5], "t": [2, 10], "explicit": 2, "fals": 2, "get": [2, 7, 8, 10, 11], "built": [2, 7, 10, 11], "associ": 2, "given": [2, 5], "scalar": [2, 5, 6, 12], "get_builtin": [2, 5, 7, 8, 10, 11, 12], "size": [2, 5, 7], "byte": [2, 10], "int": [2, 4, 5, 7, 8, 10, 11, 12], "get_items": 2, "either": 2, "construct": [2, 5, 10], "suppli": [2, 4, 5, 10], "throw": [2, 10], "noth": 2, "also": [2, 5, 7, 10, 11], "support": [2, 12], "tupl": [2, 5, 7, 10, 11], "for_custom_dtyp": [2, 7], "make_tupl": [2, 5, 7, 8, 10, 11, 12], "ha": [2, 5, 7], "custom_dtyp": [2, 7], "list_for_dtyp": [2, 7], "synopsi": 3, "constructor": [3, 7], "accessor": 3, "exampl": 3, "": [3, 10, 11], "intend": 4, "iter": 4, "It": 4, "should": [4, 7], "onli": [4, 5], "loop": 4, "void": [4, 5], "next": [4, 7, 8, 10], "not_don": 4, "get_data": [4, 5], "n": [4, 5, 7, 11], "get_nd": [4, 5], "py_intptr_t": [4, 5], "get_shap": [4, 5], "shape": [4, 5, 7, 10, 11], "make_multi_it": 4, "a1": 4, "a2": 4, "a3": 4, "over": 4, "one": [4, 5, 7], "three": 4, "sequenc": [4, 5, 10], "increment": 4, "boolean": 4, "valu": [4, 7, 8, 11, 12], "indic": 4, "whether": 4, "end": [4, 8], "nth": [4, 5], "number": [4, 5, 10], "dimens": [4, 5, 7], "express": 4, "integ": [4, 5, 10], "dimension": [5, 10, 11], "which": [5, 10, 11], "item": 5, "same": [5, 8, 10, 12], "where": 5, "specifi": [5, 7, 10], "form": 5, "mai": 5, "move": 5, "between": 5, "enum": 5, "bitflag": 5, "none": [5, 10], "0x0": 5, "c_contigu": 5, "0x1": 5, "f_contigu": 5, "0x2": 5, "v_contigu": 5, "0x4": 5, "writeabl": 5, "0x8": 5, "behav": 5, "carray_ro": 5, "carrai": 5, "carray_mi": 5, "farray_ro": 5, "farrai": 5, "farray_mi": 5, "update_al": 5, "varrai": 5, "all": 5, "view": 5, "dt": [5, 10], "astyp": 5, "copi": 5, "stride": [5, 10], "get_dtyp": [5, 7], "get_bas": 5, "set_bas": 5, "base": 5, "get_strid": 5, "get_flag": 5, "transpos": 5, "squeez": 5, "reshap": [5, 11], "zero": [5, 7, 10, 11], "nd": 5, "empti": [5, 10, 11], "obj": 5, "from_data": [5, 8, 10, 12], "owner": [5, 10], "from_object": 5, "nd_min": 5, "nd_max": 5, "flag": 5, "new": [5, 10], "old": 5, "cast": [5, 12], "row": [5, 10], "column": [5, 10], "interchang": 5, "unit": [5, 10], "remov": 5, "otherwis": [5, 12], "entir": 5, "follow": 5, "paramet": [5, 10, 11], "initi": [5, 7, 8, 10, 11, 12], "left": 5, "uniniti": 5, "each": [5, 10, 11], "inlin": 5, "case": 5, "itself": 5, "vector": 5, "minimum": 5, "maximum": 5, "x": 5, "supli": 5, "limit": 5, "need": [5, 10], "here": [5, 7, 10, 11], "th": 5, "thi": [5, 7, 8, 10, 11], "math": 5, "work": 5, "properli": 5, "have": [5, 10], "reinterpret_cast": 5, "own": [5, 10], "set": [5, 11], "exercis": 5, "caution": 5, "while": [5, 10], "logic": 5, "OR": 5, "ed": 5, "AND": 5, "tu": [5, 10], "example_tupl": [5, 10], "l": [5, 10], "example_list": [5, 10], "example_list1": [5, 10], "1": [5, 6, 8, 10, 12], "2": [5, 8, 10, 12], "3": [5, 7, 8, 10, 11, 12], "4": [5, 8, 10, 12], "data_ex": [5, 10], "uint8_t": [5, 10], "mul_data": [5, 10], "5": [5, 8, 10], "6": [5, 10], "7": [5, 10, 12], "8": [5, 8, 10], "dt1": [5, 10], "mul_data_ex": [5, 10], "singl": [6, 10], "tunaryfunctor": 6, "targument": 6, "argument_typ": [6, 12], "example_unary_ufunc": 6, "any_valid_typ": 6, "unarysquar": [6, 12], "r": [6, 12], "unari": [6, 12], "0": [6, 8, 12], "brief": 7, "show": 7, "member": 7, "variabl": 7, "befor": [7, 8, 10], "first": [7, 8, 10, 11], "header": [7, 8, 11], "setup": [7, 8], "runtim": [7, 8, 10, 11, 12], "modul": [7, 8, 11, 12], "includ": [7, 8, 10, 11, 12], "iostream": [7, 8, 10, 11, 12], "main": [7, 8, 10, 11, 12], "argc": [7, 8, 10, 11, 12], "argv": [7, 8, 10, 11, 12], "py_initi": [7, 8, 10, 11, 12], "we": [7, 8, 10, 12], "3x3": [7, 11], "final": 7, "print": [7, 8, 10, 11, 12], "string": [7, 11], "charact": 7, "origin": [7, 10, 11], "datatyp": [7, 10, 11], "build": 7, "take": [7, 10, 12], "more": [7, 10], "format": 7, "name": 7, "add": [7, 10], "Then": 7, "append": [7, 10, 12], "ar": [7, 8, 12], "now": [7, 8, 10, 12], "readi": 7, "new_arrai": 7, "One": 8, "advantag": 8, "wrapper": 8, "both": [8, 10, 12], "chang": 8, "made": [8, 12], "reflect": 8, "possibl": 8, "arr": [8, 12], "py_arrai": 8, "sizeof": [8, 10], "sourc": 8, "check": 8, "thei": 8, "j": 8, "correspondingli": 8, "see": [8, 12], "As": 8, "across": 8, "happen": 8, "becaus": [8, 10], "thu": 8, "locat": 8, "store": 8, "librari": 10, "quit": 10, "few": 10, "varieti": 10, "wai": 10, "fill": [10, 11], "introduc": 10, "you": [10, 11], "some": 10, "cover": 10, "non": 10, "initialis": [10, 11, 12], "namepac": 10, "let": [10, 11, 12], "try": [10, 12], "other": [10, 12], "travel": 10, "desir": 10, "keep": 10, "track": 10, "danger": 10, "data_ex1": 10, "littl": 10, "interest": 10, "3x2": 10, "multi": 10, "3x4": 10, "bit": 10, "pick": 10, "third": 10, "For": 10, "4x2": 10, "e": 10, "go": 10, "out": [10, 12], "notic": 10, "directli": 10, "last": 10, "part": 10, "done": 10, "don": 10, "ani": 10, "manipul": 10, "select": 10, "multidimension": 10, "error_already_set": 10, "dictat": 10, "match": 10, "start": 11, "modifi": 11, "compon": 11, "up": 11, "failur": 11, "segment": 11, "error": [11, 12], "float": 11, "1d": 11, "9": 11, "again": [11, 12], "univers": 12, "featur": 12, "neccessari": 12, "implement": 12, "demo": 12, "perform": 12, "assign": 12, "li": 12, "And": 12}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"welcom": 0, "document": 0, "boost": [0, 3, 9], "python": [0, 3, 9], "numpi": [0, 3, 9], "extens": [0, 3, 9], "binary_ufunc": 1, "tabl": [1, 2, 4, 5, 6], "content": [1, 2, 4, 5, 6], "synopsi": [1, 2, 4, 5, 6], "constructor": [1, 2, 4, 5, 6], "accessor": [1, 2, 4, 5, 6], "exampl": [1, 2, 5, 6], "": [1, 2, 5, 6], "dtype": [2, 7], "refer": 3, "multi_it": 4, "ndarrai": [5, 10], "unary_ufunc": 6, "how": [7, 8], "us": [7, 8], "access": 8, "data": 8, "raw": 8, "pointer": 8, "tutori": [9, 11], "creat": 10, "A": 11, "simpl": 11, "arrai": 11, "ufunc": 12}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to the documentation of the Boost.Python NumPy extension!": [[0, "welcome-to-the-documentation-of-the-boost-python-numpy-extension"]], "binary_ufunc": [[1, "binary-ufunc"]], "Table of Contents": [[1, "table-of-contents"], [2, "table-of-contents"], [4, "table-of-contents"], [5, "table-of-contents"], [6, "table-of-contents"]], "synopsis": [[1, "synopsis"], [2, "synopsis"], [4, "synopsis"], [5, "synopsis"], [6, "synopsis"]], "constructors": [[1, "constructors"], [2, "constructors"], [4, "constructors"], [5, "constructors"], [6, "constructors"]], "accessors": [[1, "accessors"], [2, "accessors"], [4, "accessors"], [5, "accessors"], [6, "accessors"]], "Example(s)": [[1, "example-s"], [2, "example-s"], [5, "example-s"], [6, "example-s"]], "dtype": [[2, "dtype"]], "Boost.Python NumPy extension Reference": [[3, "boost-python-numpy-extension-reference"]], "multi_iter": [[4, "multi-iter"]], "ndarray": [[5, "ndarray"]], "unary_ufunc": [[6, "unary-ufunc"]], "How to use dtypes": [[7, "how-to-use-dtypes"]], "How to access data using raw pointers": [[8, "how-to-access-data-using-raw-pointers"]], "Boost.Python NumPy extension Tutorial": [[9, "boost-python-numpy-extension-tutorial"]], "Creating ndarrays": [[10, "creating-ndarrays"]], "A simple tutorial on Arrays": [[11, "a-simple-tutorial-on-arrays"]], "Ufuncs": [[12, "ufuncs"]]}, "indexentries": {}})