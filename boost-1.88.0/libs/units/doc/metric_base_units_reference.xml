<?xml version="1.0" standalone="yes"?>
<library-reference id="metric_base_units_reference"><title>Metric Base Units Reference</title><header id="doxygen.metric_base_units_reference.angstrom_8hpp" name="boost/units/base_units/metric/angstrom.hpp">
<namespace name="boost">
<namespace name="units">
<struct-specialization id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1angstrom__base__unit_01_4" name="base_unit_info"><template>
    </template><specialization><template-arg>metric::angstrom_base_unit</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1angstrom__base__unit_01_4_1a1a102c24f188dc70cb2beebe7aced3b4" name="name" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1angstrom__base__unit_01_4_1a1bcb37e1cacb3ad3f372d6c276ae6cb5" name="symbol" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
</method-group>
</struct-specialization><namespace name="metric">
<typedef id="doxygen.metric_base_units_reference.namespaceboost_1_1units_1_1metric_1ac0a91ab25047bc34ee654014a26078a4" name="angstrom_base_unit"><type>scaled_base_unit&lt; boost::units::si::meter_base_unit, scale&lt; 10, static_rational&lt;-10 &gt; &gt; &gt;</type></typedef>
</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.are_8hpp" name="boost/units/base_units/metric/are.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="metric">
<struct id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1are__base__unit" name="are_base_unit"><inherit access="public">boost::units::base_unit&lt; are_base_unit, si::area ::dimension_type, 10 &gt;</inherit><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1are__base__unit_1aceffb3e1ace7c48f56b86aa6e605fbf2" name="name" specifiers="static"><type>const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1are__base__unit_1a15e16b34ab77ef6ab9c4c10d89ba78be" name="symbol" specifiers="static"><type>const char *</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.atmosphere_8hpp" name="boost/units/base_units/metric/atmosphere.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="metric">
<struct id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1atmosphere__base__unit" name="atmosphere_base_unit"><inherit access="public">boost::units::base_unit&lt; atmosphere_base_unit, si::pressure ::dimension_type, 33 &gt;</inherit><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1atmosphere__base__unit_1ac49b315b92605c46c721f980e393828a" name="name" specifiers="static"><type>const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1atmosphere__base__unit_1ad8e2fa5cef1f082d7eb7de27d89eb57c" name="symbol" specifiers="static"><type>const char *</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.bar_8hpp" name="boost/units/base_units/metric/bar.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="metric">
<struct id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1bar__base__unit" name="bar_base_unit"><inherit access="public">boost::units::base_unit&lt; bar_base_unit, si::pressure ::dimension_type, 14 &gt;</inherit><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1bar__base__unit_1adf107d75158ae5a55010c7ea2f06ec57" name="name" specifiers="static"><type>const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1bar__base__unit_1a19952a4a814d9f7aa7eea5cef097c3e5" name="symbol" specifiers="static"><type>const char *</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.barn_8hpp" name="boost/units/base_units/metric/barn.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="metric">
<struct id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1barn__base__unit" name="barn_base_unit"><inherit access="public">boost::units::base_unit&lt; barn_base_unit, si::area ::dimension_type, 11 &gt;</inherit><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1barn__base__unit_1a0ce7ff90d812e413f2b8a29253786515" name="name" specifiers="static"><type>const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1barn__base__unit_1ad7a74fe0ac2e799ef6787e78cd1625c4" name="symbol" specifiers="static"><type>const char *</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.day_8hpp" name="boost/units/base_units/metric/day.hpp">
<namespace name="boost">
<namespace name="units">
<struct-specialization id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1day__base__unit_01_4" name="base_unit_info"><template>
    </template><specialization><template-arg>metric::day_base_unit</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1day__base__unit_01_4_1a5aaacf3a1c78c8e3d7cb7b2c84f2da00" name="name" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1day__base__unit_01_4_1a1606574c55095da28a0b5d68cb2271d9" name="symbol" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
</method-group>
</struct-specialization><namespace name="metric">
<typedef id="doxygen.metric_base_units_reference.namespaceboost_1_1units_1_1metric_1ac6ba7d2a67d5b43a39f5a2bb5b701df1" name="day_base_unit"><type>scaled_base_unit&lt; boost::units::si::second_base_unit, scale&lt; 86400, static_rational&lt; 1 &gt; &gt; &gt;</type></typedef>
</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.fermi_8hpp" name="boost/units/base_units/metric/fermi.hpp">
<namespace name="boost">
<namespace name="units">
<struct-specialization id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1fermi__base__unit_01_4" name="base_unit_info"><template>
    </template><specialization><template-arg>metric::fermi_base_unit</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1fermi__base__unit_01_4_1aab893fa4fa504640855acc5cd9ffa5a7" name="name" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1fermi__base__unit_01_4_1ad7a3083056528226222ba1fc7e49d5ab" name="symbol" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
</method-group>
</struct-specialization><namespace name="metric">
<typedef id="doxygen.metric_base_units_reference.namespaceboost_1_1units_1_1metric_1af9916bbed1cf1f916e6f6b4308c47f6f" name="fermi_base_unit"><type>scaled_base_unit&lt; boost::units::si::meter_base_unit, scale&lt; 10, static_rational&lt;-15 &gt; &gt; &gt;</type></typedef>
</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.hectare_8hpp" name="boost/units/base_units/metric/hectare.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="metric">
<struct id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1hectare__base__unit" name="hectare_base_unit"><inherit access="public">boost::units::base_unit&lt; hectare_base_unit, si::area ::dimension_type, 12 &gt;</inherit><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1hectare__base__unit_1a02b76f283ad45698f2b4b7be1a100148" name="name" specifiers="static"><type>const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1hectare__base__unit_1a971aecfc20b78496a54751b3c0073258" name="symbol" specifiers="static"><type>const char *</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.hour_8hpp" name="boost/units/base_units/metric/hour.hpp">
<namespace name="boost">
<namespace name="units">
<struct-specialization id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1hour__base__unit_01_4" name="base_unit_info"><template>
    </template><specialization><template-arg>metric::hour_base_unit</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1hour__base__unit_01_4_1a3ac1b552daf2e935f8048fe466526a49" name="name" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1hour__base__unit_01_4_1acd1249c62deb6aa355d4a77064beb15e" name="symbol" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
</method-group>
</struct-specialization><namespace name="metric">
<typedef id="doxygen.metric_base_units_reference.namespaceboost_1_1units_1_1metric_1a86debbfabc82cd3d19edd2533400d912" name="hour_base_unit"><type>scaled_base_unit&lt; boost::units::si::second_base_unit, scale&lt; 60, static_rational&lt; 2 &gt; &gt; &gt;</type></typedef>
</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.knot_8hpp" name="boost/units/base_units/metric/knot.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="metric">
<struct id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1knot__base__unit" name="knot_base_unit"><inherit access="public">boost::units::base_unit&lt; knot_base_unit, boost::units::si::velocity ::dimension_type, -403 &gt;</inherit><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1knot__base__unit_1a7dec50eb1d9b2d0238b910cc8a48a5dd" name="name" specifiers="static"><type>const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1knot__base__unit_1ade0df8a883246e5feaa56762483dd6c5" name="symbol" specifiers="static"><type>const char *</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.liter_8hpp" name="boost/units/base_units/metric/liter.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="metric">
<struct id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1liter__base__unit" name="liter_base_unit"><inherit access="public">boost::units::base_unit&lt; liter_base_unit, si::volume ::dimension_type, 13 &gt;</inherit><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1liter__base__unit_1a963215f3885e4105ddbcef0dd75a3fa9" name="name" specifiers="static"><type>const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1liter__base__unit_1a5e1979c4e6010cbc8589c8513f04a2ce" name="symbol" specifiers="static"><type>const char *</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.micron_8hpp" name="boost/units/base_units/metric/micron.hpp">
<namespace name="boost">
<namespace name="units">
<struct-specialization id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1micron__base__unit_01_4" name="base_unit_info"><template>
    </template><specialization><template-arg>metric::micron_base_unit</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1micron__base__unit_01_4_1a58bcc5c630c5d0e91a5d1e2fdb4b7022" name="name" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1micron__base__unit_01_4_1aae2e572a945b59c70c1f49ca2283c812" name="symbol" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
</method-group>
</struct-specialization><namespace name="metric">
<typedef id="doxygen.metric_base_units_reference.namespaceboost_1_1units_1_1metric_1a2dfa4a231b67d143bbee92134793cce5" name="micron_base_unit"><type>scaled_base_unit&lt; boost::units::si::meter_base_unit, scale&lt; 10, static_rational&lt;-6 &gt; &gt; &gt;</type></typedef>
</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.minute_8hpp" name="boost/units/base_units/metric/minute.hpp">
<namespace name="boost">
<namespace name="units">
<struct-specialization id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1minute__base__unit_01_4" name="base_unit_info"><template>
    </template><specialization><template-arg>metric::minute_base_unit</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1minute__base__unit_01_4_1a70bffcfe16244b2bc49e96ddaf15f6d4" name="name" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1minute__base__unit_01_4_1ac14ac1b92353eb0b416d8c6de87dff1d" name="symbol" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
</method-group>
</struct-specialization><namespace name="metric">
<typedef id="doxygen.metric_base_units_reference.namespaceboost_1_1units_1_1metric_1a9ddcb2e3bae93ad1580ad1d9a491d7ef" name="minute_base_unit"><type>scaled_base_unit&lt; boost::units::si::second_base_unit, scale&lt; 60, static_rational&lt; 1 &gt; &gt; &gt;</type></typedef>
</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.mmHg_8hpp" name="boost/units/base_units/metric/mmHg.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="metric">
<struct id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1mmHg__base__unit" name="mmHg_base_unit"><inherit access="public">boost::units::base_unit&lt; mmHg_base_unit, si::pressure ::dimension_type, -404 &gt;</inherit><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1mmHg__base__unit_1a8b50b496ece14b9b7c3ba2dd19e63b02" name="name" specifiers="static"><type>const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1mmHg__base__unit_1a3dc74303ae1bce60e53e497b57103b5c" name="symbol" specifiers="static"><type>const char *</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.nautical__mile_8hpp" name="boost/units/base_units/metric/nautical_mile.hpp">
<namespace name="boost">
<namespace name="units">
<struct-specialization id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1nautical__mile__base__unit_01_4" name="base_unit_info"><template>
    </template><specialization><template-arg>metric::nautical_mile_base_unit</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1nautical__mile__base__unit_01_4_1a5d6e46d5ae6b8836df0affbae8d5cf72" name="name" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1nautical__mile__base__unit_01_4_1aea36c5523edaf8db8145cf58fcce7129" name="symbol" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
</method-group>
</struct-specialization><namespace name="metric">
<typedef id="doxygen.metric_base_units_reference.namespaceboost_1_1units_1_1metric_1a827d82f04c237b02a90db7f640b8de99" name="nautical_mile_base_unit"><type>scaled_base_unit&lt; boost::units::si::meter_base_unit, scale&lt; 1852, static_rational&lt; 1 &gt; &gt; &gt;</type></typedef>
</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.ton_8hpp" name="boost/units/base_units/metric/ton.hpp">
<namespace name="boost">
<namespace name="units">
<struct-specialization id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1ton__base__unit_01_4" name="base_unit_info"><template>
    </template><specialization><template-arg>metric::ton_base_unit</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1ton__base__unit_01_4_1a6e3fd879c16df08a20dbe8d08a600249" name="name" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1ton__base__unit_01_4_1a894942cd4d59dcc37c84b2e9a068c3f5" name="symbol" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
</method-group>
</struct-specialization><namespace name="metric">
<typedef id="doxygen.metric_base_units_reference.namespaceboost_1_1units_1_1metric_1af3da6cfd3eba42157aa1df41506c566e" name="ton_base_unit"><type>scaled_base_unit&lt; boost::units::si::kilogram_base_unit, scale&lt; 1000, static_rational&lt; 1 &gt; &gt; &gt;</type></typedef>
</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.torr_8hpp" name="boost/units/base_units/metric/torr.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="metric">
<struct id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1torr__base__unit" name="torr_base_unit"><inherit access="public">boost::units::base_unit&lt; torr_base_unit, si::pressure ::dimension_type, -401 &gt;</inherit><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1torr__base__unit_1a39bb4c060493502b3c52630bb4d905c5" name="name" specifiers="static"><type>const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1metric_1_1torr__base__unit_1a36d9b43685619f1548e7f694928511a5" name="symbol" specifiers="static"><type>const char *</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.metric_base_units_reference.year_8hpp" name="boost/units/base_units/metric/year.hpp">
<namespace name="boost">
<namespace name="units">
<struct-specialization id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1year__base__unit_01_4" name="base_unit_info"><template>
    </template><specialization><template-arg>metric::year_base_unit</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1year__base__unit_01_4_1af653e5352f83d0bde684d6dc77b60162" name="name" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
<method id="doxygen.metric_base_units_reference.structboost_1_1units_1_1base__unit__info_3_01metric_1_1year__base__unit_01_4_1a5718f9d78b9ea4772020b3be8dae46ad" name="symbol" specifiers="static"><type>BOOST_CONSTEXPR const char *</type></method>
</method-group>
</struct-specialization><namespace name="metric">
<typedef id="doxygen.metric_base_units_reference.namespaceboost_1_1units_1_1metric_1a8ca4af71adf5dcab9754f96daf28e00b" name="year_base_unit"><type>scaled_base_unit&lt; boost::units::si::second_base_unit, scale&lt; 31557600, static_rational&lt; 1 &gt; &gt; &gt;</type></typedef>
</namespace>
</namespace>
</namespace>
</header>
</library-reference>