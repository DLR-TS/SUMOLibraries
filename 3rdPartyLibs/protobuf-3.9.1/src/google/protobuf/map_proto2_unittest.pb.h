// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/map_proto2_unittest.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/protobuf/unittest_import.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[24]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto;
namespace protobuf_unittest {
class TestEnumMap;
class TestEnumMapDefaultTypeInternal;
extern TestEnumMapDefaultTypeInternal _TestEnumMap_default_instance_;
class TestEnumMapPlusExtra;
class TestEnumMapPlusExtraDefaultTypeInternal;
extern TestEnumMapPlusExtraDefaultTypeInternal _TestEnumMapPlusExtra_default_instance_;
class TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUse;
class TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUseDefaultTypeInternal;
extern TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUseDefaultTypeInternal _TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUse_default_instance_;
class TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUse;
class TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUseDefaultTypeInternal;
extern TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUseDefaultTypeInternal _TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUse_default_instance_;
class TestEnumMap_KnownMapFieldEntry_DoNotUse;
class TestEnumMap_KnownMapFieldEntry_DoNotUseDefaultTypeInternal;
extern TestEnumMap_KnownMapFieldEntry_DoNotUseDefaultTypeInternal _TestEnumMap_KnownMapFieldEntry_DoNotUse_default_instance_;
class TestEnumMap_UnknownMapFieldEntry_DoNotUse;
class TestEnumMap_UnknownMapFieldEntry_DoNotUseDefaultTypeInternal;
extern TestEnumMap_UnknownMapFieldEntry_DoNotUseDefaultTypeInternal _TestEnumMap_UnknownMapFieldEntry_DoNotUse_default_instance_;
class TestImportEnumMap;
class TestImportEnumMapDefaultTypeInternal;
extern TestImportEnumMapDefaultTypeInternal _TestImportEnumMap_default_instance_;
class TestImportEnumMap_ImportEnumAmpEntry_DoNotUse;
class TestImportEnumMap_ImportEnumAmpEntry_DoNotUseDefaultTypeInternal;
extern TestImportEnumMap_ImportEnumAmpEntry_DoNotUseDefaultTypeInternal _TestImportEnumMap_ImportEnumAmpEntry_DoNotUse_default_instance_;
class TestIntIntMap;
class TestIntIntMapDefaultTypeInternal;
extern TestIntIntMapDefaultTypeInternal _TestIntIntMap_default_instance_;
class TestIntIntMap_MEntry_DoNotUse;
class TestIntIntMap_MEntry_DoNotUseDefaultTypeInternal;
extern TestIntIntMap_MEntry_DoNotUseDefaultTypeInternal _TestIntIntMap_MEntry_DoNotUse_default_instance_;
class TestMaps;
class TestMapsDefaultTypeInternal;
extern TestMapsDefaultTypeInternal _TestMaps_default_instance_;
class TestMaps_MBoolEntry_DoNotUse;
class TestMaps_MBoolEntry_DoNotUseDefaultTypeInternal;
extern TestMaps_MBoolEntry_DoNotUseDefaultTypeInternal _TestMaps_MBoolEntry_DoNotUse_default_instance_;
class TestMaps_MFixed32Entry_DoNotUse;
class TestMaps_MFixed32Entry_DoNotUseDefaultTypeInternal;
extern TestMaps_MFixed32Entry_DoNotUseDefaultTypeInternal _TestMaps_MFixed32Entry_DoNotUse_default_instance_;
class TestMaps_MFixed64Entry_DoNotUse;
class TestMaps_MFixed64Entry_DoNotUseDefaultTypeInternal;
extern TestMaps_MFixed64Entry_DoNotUseDefaultTypeInternal _TestMaps_MFixed64Entry_DoNotUse_default_instance_;
class TestMaps_MInt32Entry_DoNotUse;
class TestMaps_MInt32Entry_DoNotUseDefaultTypeInternal;
extern TestMaps_MInt32Entry_DoNotUseDefaultTypeInternal _TestMaps_MInt32Entry_DoNotUse_default_instance_;
class TestMaps_MInt64Entry_DoNotUse;
class TestMaps_MInt64Entry_DoNotUseDefaultTypeInternal;
extern TestMaps_MInt64Entry_DoNotUseDefaultTypeInternal _TestMaps_MInt64Entry_DoNotUse_default_instance_;
class TestMaps_MSfixed32Entry_DoNotUse;
class TestMaps_MSfixed32Entry_DoNotUseDefaultTypeInternal;
extern TestMaps_MSfixed32Entry_DoNotUseDefaultTypeInternal _TestMaps_MSfixed32Entry_DoNotUse_default_instance_;
class TestMaps_MSfixed64Entry_DoNotUse;
class TestMaps_MSfixed64Entry_DoNotUseDefaultTypeInternal;
extern TestMaps_MSfixed64Entry_DoNotUseDefaultTypeInternal _TestMaps_MSfixed64Entry_DoNotUse_default_instance_;
class TestMaps_MSint32Entry_DoNotUse;
class TestMaps_MSint32Entry_DoNotUseDefaultTypeInternal;
extern TestMaps_MSint32Entry_DoNotUseDefaultTypeInternal _TestMaps_MSint32Entry_DoNotUse_default_instance_;
class TestMaps_MSint64Entry_DoNotUse;
class TestMaps_MSint64Entry_DoNotUseDefaultTypeInternal;
extern TestMaps_MSint64Entry_DoNotUseDefaultTypeInternal _TestMaps_MSint64Entry_DoNotUse_default_instance_;
class TestMaps_MStringEntry_DoNotUse;
class TestMaps_MStringEntry_DoNotUseDefaultTypeInternal;
extern TestMaps_MStringEntry_DoNotUseDefaultTypeInternal _TestMaps_MStringEntry_DoNotUse_default_instance_;
class TestMaps_MUint32Entry_DoNotUse;
class TestMaps_MUint32Entry_DoNotUseDefaultTypeInternal;
extern TestMaps_MUint32Entry_DoNotUseDefaultTypeInternal _TestMaps_MUint32Entry_DoNotUse_default_instance_;
class TestMaps_MUint64Entry_DoNotUse;
class TestMaps_MUint64Entry_DoNotUseDefaultTypeInternal;
extern TestMaps_MUint64Entry_DoNotUseDefaultTypeInternal _TestMaps_MUint64Entry_DoNotUse_default_instance_;
class TestSubmessageMaps;
class TestSubmessageMapsDefaultTypeInternal;
extern TestSubmessageMapsDefaultTypeInternal _TestSubmessageMaps_default_instance_;
}  // namespace protobuf_unittest
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf_unittest::TestEnumMap* Arena::CreateMaybeMessage<::protobuf_unittest::TestEnumMap>(Arena*);
template<> ::protobuf_unittest::TestEnumMapPlusExtra* Arena::CreateMaybeMessage<::protobuf_unittest::TestEnumMapPlusExtra>(Arena*);
template<> ::protobuf_unittest::TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestEnumMap_KnownMapFieldEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestEnumMap_KnownMapFieldEntry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestEnumMap_UnknownMapFieldEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestEnumMap_UnknownMapFieldEntry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestImportEnumMap* Arena::CreateMaybeMessage<::protobuf_unittest::TestImportEnumMap>(Arena*);
template<> ::protobuf_unittest::TestImportEnumMap_ImportEnumAmpEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestImportEnumMap_ImportEnumAmpEntry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestIntIntMap* Arena::CreateMaybeMessage<::protobuf_unittest::TestIntIntMap>(Arena*);
template<> ::protobuf_unittest::TestIntIntMap_MEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestIntIntMap_MEntry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestMaps* Arena::CreateMaybeMessage<::protobuf_unittest::TestMaps>(Arena*);
template<> ::protobuf_unittest::TestMaps_MBoolEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestMaps_MBoolEntry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestMaps_MFixed32Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestMaps_MFixed32Entry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestMaps_MFixed64Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestMaps_MFixed64Entry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestMaps_MInt32Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestMaps_MInt32Entry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestMaps_MInt64Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestMaps_MInt64Entry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestMaps_MSfixed32Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestMaps_MSfixed32Entry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestMaps_MSfixed64Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestMaps_MSfixed64Entry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestMaps_MSint32Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestMaps_MSint32Entry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestMaps_MSint64Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestMaps_MSint64Entry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestMaps_MStringEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestMaps_MStringEntry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestMaps_MUint32Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestMaps_MUint32Entry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestMaps_MUint64Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestMaps_MUint64Entry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestSubmessageMaps* Arena::CreateMaybeMessage<::protobuf_unittest::TestSubmessageMaps>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf_unittest {

enum Proto2MapEnum : int {
  PROTO2_MAP_ENUM_FOO = 0,
  PROTO2_MAP_ENUM_BAR = 1,
  PROTO2_MAP_ENUM_BAZ = 2
};
bool Proto2MapEnum_IsValid(int value);
constexpr Proto2MapEnum Proto2MapEnum_MIN = PROTO2_MAP_ENUM_FOO;
constexpr Proto2MapEnum Proto2MapEnum_MAX = PROTO2_MAP_ENUM_BAZ;
constexpr int Proto2MapEnum_ARRAYSIZE = Proto2MapEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Proto2MapEnum_descriptor();
template<typename T>
inline const std::string& Proto2MapEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Proto2MapEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Proto2MapEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Proto2MapEnum_descriptor(), enum_t_value);
}
inline bool Proto2MapEnum_Parse(
    const std::string& name, Proto2MapEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Proto2MapEnum>(
    Proto2MapEnum_descriptor(), name, value);
}
enum Proto2MapEnumPlusExtra : int {
  E_PROTO2_MAP_ENUM_FOO = 0,
  E_PROTO2_MAP_ENUM_BAR = 1,
  E_PROTO2_MAP_ENUM_BAZ = 2,
  E_PROTO2_MAP_ENUM_EXTRA = 3
};
bool Proto2MapEnumPlusExtra_IsValid(int value);
constexpr Proto2MapEnumPlusExtra Proto2MapEnumPlusExtra_MIN = E_PROTO2_MAP_ENUM_FOO;
constexpr Proto2MapEnumPlusExtra Proto2MapEnumPlusExtra_MAX = E_PROTO2_MAP_ENUM_EXTRA;
constexpr int Proto2MapEnumPlusExtra_ARRAYSIZE = Proto2MapEnumPlusExtra_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Proto2MapEnumPlusExtra_descriptor();
template<typename T>
inline const std::string& Proto2MapEnumPlusExtra_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Proto2MapEnumPlusExtra>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Proto2MapEnumPlusExtra_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Proto2MapEnumPlusExtra_descriptor(), enum_t_value);
}
inline bool Proto2MapEnumPlusExtra_Parse(
    const std::string& name, Proto2MapEnumPlusExtra* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Proto2MapEnumPlusExtra>(
    Proto2MapEnumPlusExtra_descriptor(), name, value);
}
// ===================================================================

class TestEnumMap_KnownMapFieldEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestEnumMap_KnownMapFieldEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnum,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestEnumMap_KnownMapFieldEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnum,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
    0 > SuperType;
  TestEnumMap_KnownMapFieldEntry_DoNotUse();
  TestEnumMap_KnownMapFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestEnumMap_KnownMapFieldEntry_DoNotUse& other);
  static const TestEnumMap_KnownMapFieldEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestEnumMap_KnownMapFieldEntry_DoNotUse*>(&_TestEnumMap_KnownMapFieldEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class TestEnumMap_UnknownMapFieldEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestEnumMap_UnknownMapFieldEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnum,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestEnumMap_UnknownMapFieldEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnum,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
    0 > SuperType;
  TestEnumMap_UnknownMapFieldEntry_DoNotUse();
  TestEnumMap_UnknownMapFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestEnumMap_UnknownMapFieldEntry_DoNotUse& other);
  static const TestEnumMap_UnknownMapFieldEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestEnumMap_UnknownMapFieldEntry_DoNotUse*>(&_TestEnumMap_UnknownMapFieldEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[1];
  }

  public:
};

// -------------------------------------------------------------------

class TestEnumMap :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestEnumMap) */ {
 public:
  TestEnumMap();
  virtual ~TestEnumMap();

  TestEnumMap(const TestEnumMap& from);
  TestEnumMap(TestEnumMap&& from) noexcept
    : TestEnumMap() {
    *this = ::std::move(from);
  }

  inline TestEnumMap& operator=(const TestEnumMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestEnumMap& operator=(TestEnumMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TestEnumMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestEnumMap* internal_default_instance() {
    return reinterpret_cast<const TestEnumMap*>(
               &_TestEnumMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TestEnumMap& a, TestEnumMap& b) {
    a.Swap(&b);
  }
  inline void Swap(TestEnumMap* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestEnumMap* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TestEnumMap* New() const final {
    return CreateMaybeMessage<TestEnumMap>(nullptr);
  }

  TestEnumMap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TestEnumMap>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TestEnumMap& from);
  void MergeFrom(const TestEnumMap& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestEnumMap* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.TestEnumMap";
  }
  protected:
  explicit TestEnumMap(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kKnownMapFieldFieldNumber = 101,
    kUnknownMapFieldFieldNumber = 102,
  };
  // map<int32, .protobuf_unittest.Proto2MapEnum> known_map_field = 101;
  int known_map_field_size() const;
  void clear_known_map_field();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnum >&
      known_map_field() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnum >*
      mutable_known_map_field();

  // map<int32, .protobuf_unittest.Proto2MapEnum> unknown_map_field = 102;
  int unknown_map_field_size() const;
  void clear_unknown_map_field();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnum >&
      unknown_map_field() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnum >*
      mutable_unknown_map_field();

  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestEnumMap)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestEnumMap_KnownMapFieldEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnum,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
      0 > known_map_field_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestEnumMap_UnknownMapFieldEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnum,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
      0 > unknown_map_field_;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
    0 > SuperType;
  TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUse();
  TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUse& other);
  static const TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUse*>(&_TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[3];
  }

  public:
};

// -------------------------------------------------------------------

class TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
    0 > SuperType;
  TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUse();
  TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUse& other);
  static const TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUse*>(&_TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[4];
  }

  public:
};

// -------------------------------------------------------------------

class TestEnumMapPlusExtra :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestEnumMapPlusExtra) */ {
 public:
  TestEnumMapPlusExtra();
  virtual ~TestEnumMapPlusExtra();

  TestEnumMapPlusExtra(const TestEnumMapPlusExtra& from);
  TestEnumMapPlusExtra(TestEnumMapPlusExtra&& from) noexcept
    : TestEnumMapPlusExtra() {
    *this = ::std::move(from);
  }

  inline TestEnumMapPlusExtra& operator=(const TestEnumMapPlusExtra& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestEnumMapPlusExtra& operator=(TestEnumMapPlusExtra&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TestEnumMapPlusExtra& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestEnumMapPlusExtra* internal_default_instance() {
    return reinterpret_cast<const TestEnumMapPlusExtra*>(
               &_TestEnumMapPlusExtra_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(TestEnumMapPlusExtra& a, TestEnumMapPlusExtra& b) {
    a.Swap(&b);
  }
  inline void Swap(TestEnumMapPlusExtra* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestEnumMapPlusExtra* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TestEnumMapPlusExtra* New() const final {
    return CreateMaybeMessage<TestEnumMapPlusExtra>(nullptr);
  }

  TestEnumMapPlusExtra* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TestEnumMapPlusExtra>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TestEnumMapPlusExtra& from);
  void MergeFrom(const TestEnumMapPlusExtra& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestEnumMapPlusExtra* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.TestEnumMapPlusExtra";
  }
  protected:
  explicit TestEnumMapPlusExtra(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kKnownMapFieldFieldNumber = 101,
    kUnknownMapFieldFieldNumber = 102,
  };
  // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtra> known_map_field = 101;
  int known_map_field_size() const;
  void clear_known_map_field();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >&
      known_map_field() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >*
      mutable_known_map_field();

  // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtra> unknown_map_field = 102;
  int unknown_map_field_size() const;
  void clear_unknown_map_field();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >&
      unknown_map_field() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >*
      mutable_unknown_map_field();

  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestEnumMapPlusExtra)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestEnumMapPlusExtra_KnownMapFieldEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
      0 > known_map_field_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestEnumMapPlusExtra_UnknownMapFieldEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
      0 > unknown_map_field_;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestImportEnumMap_ImportEnumAmpEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestImportEnumMap_ImportEnumAmpEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest_import::ImportEnumForMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestImportEnumMap_ImportEnumAmpEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest_import::ImportEnumForMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
    0 > SuperType;
  TestImportEnumMap_ImportEnumAmpEntry_DoNotUse();
  TestImportEnumMap_ImportEnumAmpEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestImportEnumMap_ImportEnumAmpEntry_DoNotUse& other);
  static const TestImportEnumMap_ImportEnumAmpEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestImportEnumMap_ImportEnumAmpEntry_DoNotUse*>(&_TestImportEnumMap_ImportEnumAmpEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[6];
  }

  public:
};

// -------------------------------------------------------------------

class TestImportEnumMap :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestImportEnumMap) */ {
 public:
  TestImportEnumMap();
  virtual ~TestImportEnumMap();

  TestImportEnumMap(const TestImportEnumMap& from);
  TestImportEnumMap(TestImportEnumMap&& from) noexcept
    : TestImportEnumMap() {
    *this = ::std::move(from);
  }

  inline TestImportEnumMap& operator=(const TestImportEnumMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestImportEnumMap& operator=(TestImportEnumMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TestImportEnumMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestImportEnumMap* internal_default_instance() {
    return reinterpret_cast<const TestImportEnumMap*>(
               &_TestImportEnumMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(TestImportEnumMap& a, TestImportEnumMap& b) {
    a.Swap(&b);
  }
  inline void Swap(TestImportEnumMap* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestImportEnumMap* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TestImportEnumMap* New() const final {
    return CreateMaybeMessage<TestImportEnumMap>(nullptr);
  }

  TestImportEnumMap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TestImportEnumMap>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TestImportEnumMap& from);
  void MergeFrom(const TestImportEnumMap& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestImportEnumMap* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.TestImportEnumMap";
  }
  protected:
  explicit TestImportEnumMap(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kImportEnumAmpFieldNumber = 1,
  };
  // map<int32, .protobuf_unittest_import.ImportEnumForMap> import_enum_amp = 1;
  int import_enum_amp_size() const;
  void clear_import_enum_amp();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest_import::ImportEnumForMap >&
      import_enum_amp() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest_import::ImportEnumForMap >*
      mutable_import_enum_amp();

  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestImportEnumMap)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestImportEnumMap_ImportEnumAmpEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest_import::ImportEnumForMap,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM,
      0 > import_enum_amp_;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestIntIntMap_MEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestIntIntMap_MEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestIntIntMap_MEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    0 > SuperType;
  TestIntIntMap_MEntry_DoNotUse();
  TestIntIntMap_MEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestIntIntMap_MEntry_DoNotUse& other);
  static const TestIntIntMap_MEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestIntIntMap_MEntry_DoNotUse*>(&_TestIntIntMap_MEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[8];
  }

  public:
};

// -------------------------------------------------------------------

class TestIntIntMap :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestIntIntMap) */ {
 public:
  TestIntIntMap();
  virtual ~TestIntIntMap();

  TestIntIntMap(const TestIntIntMap& from);
  TestIntIntMap(TestIntIntMap&& from) noexcept
    : TestIntIntMap() {
    *this = ::std::move(from);
  }

  inline TestIntIntMap& operator=(const TestIntIntMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestIntIntMap& operator=(TestIntIntMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TestIntIntMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestIntIntMap* internal_default_instance() {
    return reinterpret_cast<const TestIntIntMap*>(
               &_TestIntIntMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(TestIntIntMap& a, TestIntIntMap& b) {
    a.Swap(&b);
  }
  inline void Swap(TestIntIntMap* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestIntIntMap* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TestIntIntMap* New() const final {
    return CreateMaybeMessage<TestIntIntMap>(nullptr);
  }

  TestIntIntMap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TestIntIntMap>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TestIntIntMap& from);
  void MergeFrom(const TestIntIntMap& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestIntIntMap* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.TestIntIntMap";
  }
  protected:
  explicit TestIntIntMap(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMFieldNumber = 1,
  };
  // map<int32, int32> m = 1;
  int m_size() const;
  void clear_m();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      m() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_m();

  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestIntIntMap)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestIntIntMap_MEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      0 > m_;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMaps_MInt32Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MInt32Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MInt32Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TestMaps_MInt32Entry_DoNotUse();
  TestMaps_MInt32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestMaps_MInt32Entry_DoNotUse& other);
  static const TestMaps_MInt32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMaps_MInt32Entry_DoNotUse*>(&_TestMaps_MInt32Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[10];
  }

  public:
};

// -------------------------------------------------------------------

class TestMaps_MInt64Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MInt64Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MInt64Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TestMaps_MInt64Entry_DoNotUse();
  TestMaps_MInt64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestMaps_MInt64Entry_DoNotUse& other);
  static const TestMaps_MInt64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMaps_MInt64Entry_DoNotUse*>(&_TestMaps_MInt64Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[11];
  }

  public:
};

// -------------------------------------------------------------------

class TestMaps_MUint32Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MUint32Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MUint32Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TestMaps_MUint32Entry_DoNotUse();
  TestMaps_MUint32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestMaps_MUint32Entry_DoNotUse& other);
  static const TestMaps_MUint32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMaps_MUint32Entry_DoNotUse*>(&_TestMaps_MUint32Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[12];
  }

  public:
};

// -------------------------------------------------------------------

class TestMaps_MUint64Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MUint64Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MUint64Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TestMaps_MUint64Entry_DoNotUse();
  TestMaps_MUint64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestMaps_MUint64Entry_DoNotUse& other);
  static const TestMaps_MUint64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMaps_MUint64Entry_DoNotUse*>(&_TestMaps_MUint64Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[13];
  }

  public:
};

// -------------------------------------------------------------------

class TestMaps_MSint32Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MSint32Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MSint32Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TestMaps_MSint32Entry_DoNotUse();
  TestMaps_MSint32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestMaps_MSint32Entry_DoNotUse& other);
  static const TestMaps_MSint32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMaps_MSint32Entry_DoNotUse*>(&_TestMaps_MSint32Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[14];
  }

  public:
};

// -------------------------------------------------------------------

class TestMaps_MSint64Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MSint64Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MSint64Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TestMaps_MSint64Entry_DoNotUse();
  TestMaps_MSint64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestMaps_MSint64Entry_DoNotUse& other);
  static const TestMaps_MSint64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMaps_MSint64Entry_DoNotUse*>(&_TestMaps_MSint64Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[15];
  }

  public:
};

// -------------------------------------------------------------------

class TestMaps_MFixed32Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MFixed32Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MFixed32Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TestMaps_MFixed32Entry_DoNotUse();
  TestMaps_MFixed32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestMaps_MFixed32Entry_DoNotUse& other);
  static const TestMaps_MFixed32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMaps_MFixed32Entry_DoNotUse*>(&_TestMaps_MFixed32Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[16];
  }

  public:
};

// -------------------------------------------------------------------

class TestMaps_MFixed64Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MFixed64Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MFixed64Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TestMaps_MFixed64Entry_DoNotUse();
  TestMaps_MFixed64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestMaps_MFixed64Entry_DoNotUse& other);
  static const TestMaps_MFixed64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMaps_MFixed64Entry_DoNotUse*>(&_TestMaps_MFixed64Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[17];
  }

  public:
};

// -------------------------------------------------------------------

class TestMaps_MSfixed32Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MSfixed32Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MSfixed32Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TestMaps_MSfixed32Entry_DoNotUse();
  TestMaps_MSfixed32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestMaps_MSfixed32Entry_DoNotUse& other);
  static const TestMaps_MSfixed32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMaps_MSfixed32Entry_DoNotUse*>(&_TestMaps_MSfixed32Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[18];
  }

  public:
};

// -------------------------------------------------------------------

class TestMaps_MSfixed64Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MSfixed64Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MSfixed64Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TestMaps_MSfixed64Entry_DoNotUse();
  TestMaps_MSfixed64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestMaps_MSfixed64Entry_DoNotUse& other);
  static const TestMaps_MSfixed64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMaps_MSfixed64Entry_DoNotUse*>(&_TestMaps_MSfixed64Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[19];
  }

  public:
};

// -------------------------------------------------------------------

class TestMaps_MBoolEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MBoolEntry_DoNotUse, 
    bool, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MBoolEntry_DoNotUse, 
    bool, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TestMaps_MBoolEntry_DoNotUse();
  TestMaps_MBoolEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestMaps_MBoolEntry_DoNotUse& other);
  static const TestMaps_MBoolEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMaps_MBoolEntry_DoNotUse*>(&_TestMaps_MBoolEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[20];
  }

  public:
};

// -------------------------------------------------------------------

class TestMaps_MStringEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MStringEntry_DoNotUse, 
    std::string, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMaps_MStringEntry_DoNotUse, 
    std::string, ::protobuf_unittest::TestIntIntMap,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TestMaps_MStringEntry_DoNotUse();
  TestMaps_MStringEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestMaps_MStringEntry_DoNotUse& other);
  static const TestMaps_MStringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMaps_MStringEntry_DoNotUse*>(&_TestMaps_MStringEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), s->size(), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf_unittest.TestMaps.MStringEntry.key");
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[21];
  }

  public:
};

// -------------------------------------------------------------------

class TestMaps :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMaps) */ {
 public:
  TestMaps();
  virtual ~TestMaps();

  TestMaps(const TestMaps& from);
  TestMaps(TestMaps&& from) noexcept
    : TestMaps() {
    *this = ::std::move(from);
  }

  inline TestMaps& operator=(const TestMaps& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMaps& operator=(TestMaps&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TestMaps& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestMaps* internal_default_instance() {
    return reinterpret_cast<const TestMaps*>(
               &_TestMaps_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(TestMaps& a, TestMaps& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMaps* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMaps* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TestMaps* New() const final {
    return CreateMaybeMessage<TestMaps>(nullptr);
  }

  TestMaps* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TestMaps>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TestMaps& from);
  void MergeFrom(const TestMaps& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestMaps* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.TestMaps";
  }
  protected:
  explicit TestMaps(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMInt32FieldNumber = 1,
    kMInt64FieldNumber = 2,
    kMUint32FieldNumber = 3,
    kMUint64FieldNumber = 4,
    kMSint32FieldNumber = 5,
    kMSint64FieldNumber = 6,
    kMFixed32FieldNumber = 7,
    kMFixed64FieldNumber = 8,
    kMSfixed32FieldNumber = 9,
    kMSfixed64FieldNumber = 10,
    kMBoolFieldNumber = 11,
    kMStringFieldNumber = 12,
  };
  // map<int32, .protobuf_unittest.TestIntIntMap> m_int32 = 1;
  int m_int32_size() const;
  void clear_m_int32();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap >&
      m_int32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap >*
      mutable_m_int32();

  // map<int64, .protobuf_unittest.TestIntIntMap> m_int64 = 2;
  int m_int64_size() const;
  void clear_m_int64();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap >&
      m_int64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap >*
      mutable_m_int64();

  // map<uint32, .protobuf_unittest.TestIntIntMap> m_uint32 = 3;
  int m_uint32_size() const;
  void clear_m_uint32();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::protobuf_unittest::TestIntIntMap >&
      m_uint32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::protobuf_unittest::TestIntIntMap >*
      mutable_m_uint32();

  // map<uint64, .protobuf_unittest.TestIntIntMap> m_uint64 = 4;
  int m_uint64_size() const;
  void clear_m_uint64();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_unittest::TestIntIntMap >&
      m_uint64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_unittest::TestIntIntMap >*
      mutable_m_uint64();

  // map<sint32, .protobuf_unittest.TestIntIntMap> m_sint32 = 5;
  int m_sint32_size() const;
  void clear_m_sint32();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap >&
      m_sint32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap >*
      mutable_m_sint32();

  // map<sint64, .protobuf_unittest.TestIntIntMap> m_sint64 = 6;
  int m_sint64_size() const;
  void clear_m_sint64();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap >&
      m_sint64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap >*
      mutable_m_sint64();

  // map<fixed32, .protobuf_unittest.TestIntIntMap> m_fixed32 = 7;
  int m_fixed32_size() const;
  void clear_m_fixed32();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::protobuf_unittest::TestIntIntMap >&
      m_fixed32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::protobuf_unittest::TestIntIntMap >*
      mutable_m_fixed32();

  // map<fixed64, .protobuf_unittest.TestIntIntMap> m_fixed64 = 8;
  int m_fixed64_size() const;
  void clear_m_fixed64();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_unittest::TestIntIntMap >&
      m_fixed64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_unittest::TestIntIntMap >*
      mutable_m_fixed64();

  // map<sfixed32, .protobuf_unittest.TestIntIntMap> m_sfixed32 = 9;
  int m_sfixed32_size() const;
  void clear_m_sfixed32();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap >&
      m_sfixed32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap >*
      mutable_m_sfixed32();

  // map<sfixed64, .protobuf_unittest.TestIntIntMap> m_sfixed64 = 10;
  int m_sfixed64_size() const;
  void clear_m_sfixed64();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap >&
      m_sfixed64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap >*
      mutable_m_sfixed64();

  // map<bool, .protobuf_unittest.TestIntIntMap> m_bool = 11;
  int m_bool_size() const;
  void clear_m_bool();
  const ::PROTOBUF_NAMESPACE_ID::Map< bool, ::protobuf_unittest::TestIntIntMap >&
      m_bool() const;
  ::PROTOBUF_NAMESPACE_ID::Map< bool, ::protobuf_unittest::TestIntIntMap >*
      mutable_m_bool();

  // map<string, .protobuf_unittest.TestIntIntMap> m_string = 12;
  int m_string_size() const;
  void clear_m_string();
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_unittest::TestIntIntMap >&
      m_string() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_unittest::TestIntIntMap >*
      mutable_m_string();

  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMaps)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestMaps_MInt32Entry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > m_int32_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestMaps_MInt64Entry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > m_int64_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestMaps_MUint32Entry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint32, ::protobuf_unittest::TestIntIntMap,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > m_uint32_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestMaps_MUint64Entry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_unittest::TestIntIntMap,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > m_uint64_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestMaps_MSint32Entry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > m_sint32_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestMaps_MSint64Entry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > m_sint64_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestMaps_MFixed32Entry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint32, ::protobuf_unittest::TestIntIntMap,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > m_fixed32_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestMaps_MFixed64Entry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_unittest::TestIntIntMap,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > m_fixed64_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestMaps_MSfixed32Entry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > m_sfixed32_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestMaps_MSfixed64Entry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > m_sfixed64_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestMaps_MBoolEntry_DoNotUse,
      bool, ::protobuf_unittest::TestIntIntMap,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > m_bool_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestMaps_MStringEntry_DoNotUse,
      std::string, ::protobuf_unittest::TestIntIntMap,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > m_string_;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestSubmessageMaps :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestSubmessageMaps) */ {
 public:
  TestSubmessageMaps();
  virtual ~TestSubmessageMaps();

  TestSubmessageMaps(const TestSubmessageMaps& from);
  TestSubmessageMaps(TestSubmessageMaps&& from) noexcept
    : TestSubmessageMaps() {
    *this = ::std::move(from);
  }

  inline TestSubmessageMaps& operator=(const TestSubmessageMaps& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestSubmessageMaps& operator=(TestSubmessageMaps&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TestSubmessageMaps& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestSubmessageMaps* internal_default_instance() {
    return reinterpret_cast<const TestSubmessageMaps*>(
               &_TestSubmessageMaps_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(TestSubmessageMaps& a, TestSubmessageMaps& b) {
    a.Swap(&b);
  }
  inline void Swap(TestSubmessageMaps* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestSubmessageMaps* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TestSubmessageMaps* New() const final {
    return CreateMaybeMessage<TestSubmessageMaps>(nullptr);
  }

  TestSubmessageMaps* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TestSubmessageMaps>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TestSubmessageMaps& from);
  void MergeFrom(const TestSubmessageMaps& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestSubmessageMaps* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.TestSubmessageMaps";
  }
  protected:
  explicit TestSubmessageMaps(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
    return ::descriptor_table_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMFieldNumber = 1,
  };
  // optional .protobuf_unittest.TestMaps m = 1;
  bool has_m() const;
  void clear_m();
  const ::protobuf_unittest::TestMaps& m() const;
  ::protobuf_unittest::TestMaps* release_m();
  ::protobuf_unittest::TestMaps* mutable_m();
  void set_allocated_m(::protobuf_unittest::TestMaps* m);
  void unsafe_arena_set_allocated_m(
      ::protobuf_unittest::TestMaps* m);
  ::protobuf_unittest::TestMaps* unsafe_arena_release_m();

  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestSubmessageMaps)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::protobuf_unittest::TestMaps* m_;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestEnumMap

// map<int32, .protobuf_unittest.Proto2MapEnum> known_map_field = 101;
inline int TestEnumMap::known_map_field_size() const {
  return known_map_field_.size();
}
inline void TestEnumMap::clear_known_map_field() {
  known_map_field_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnum >&
TestEnumMap::known_map_field() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestEnumMap.known_map_field)
  return known_map_field_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnum >*
TestEnumMap::mutable_known_map_field() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestEnumMap.known_map_field)
  return known_map_field_.MutableMap();
}

// map<int32, .protobuf_unittest.Proto2MapEnum> unknown_map_field = 102;
inline int TestEnumMap::unknown_map_field_size() const {
  return unknown_map_field_.size();
}
inline void TestEnumMap::clear_unknown_map_field() {
  unknown_map_field_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnum >&
TestEnumMap::unknown_map_field() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestEnumMap.unknown_map_field)
  return unknown_map_field_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnum >*
TestEnumMap::mutable_unknown_map_field() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestEnumMap.unknown_map_field)
  return unknown_map_field_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestEnumMapPlusExtra

// map<int32, .protobuf_unittest.Proto2MapEnumPlusExtra> known_map_field = 101;
inline int TestEnumMapPlusExtra::known_map_field_size() const {
  return known_map_field_.size();
}
inline void TestEnumMapPlusExtra::clear_known_map_field() {
  known_map_field_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >&
TestEnumMapPlusExtra::known_map_field() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestEnumMapPlusExtra.known_map_field)
  return known_map_field_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >*
TestEnumMapPlusExtra::mutable_known_map_field() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestEnumMapPlusExtra.known_map_field)
  return known_map_field_.MutableMap();
}

// map<int32, .protobuf_unittest.Proto2MapEnumPlusExtra> unknown_map_field = 102;
inline int TestEnumMapPlusExtra::unknown_map_field_size() const {
  return unknown_map_field_.size();
}
inline void TestEnumMapPlusExtra::clear_unknown_map_field() {
  unknown_map_field_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >&
TestEnumMapPlusExtra::unknown_map_field() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestEnumMapPlusExtra.unknown_map_field)
  return unknown_map_field_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >*
TestEnumMapPlusExtra::mutable_unknown_map_field() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestEnumMapPlusExtra.unknown_map_field)
  return unknown_map_field_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestImportEnumMap

// map<int32, .protobuf_unittest_import.ImportEnumForMap> import_enum_amp = 1;
inline int TestImportEnumMap::import_enum_amp_size() const {
  return import_enum_amp_.size();
}
inline void TestImportEnumMap::clear_import_enum_amp() {
  import_enum_amp_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest_import::ImportEnumForMap >&
TestImportEnumMap::import_enum_amp() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestImportEnumMap.import_enum_amp)
  return import_enum_amp_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest_import::ImportEnumForMap >*
TestImportEnumMap::mutable_import_enum_amp() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestImportEnumMap.import_enum_amp)
  return import_enum_amp_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestIntIntMap

// map<int32, int32> m = 1;
inline int TestIntIntMap::m_size() const {
  return m_.size();
}
inline void TestIntIntMap::clear_m() {
  m_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
TestIntIntMap::m() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestIntIntMap.m)
  return m_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
TestIntIntMap::mutable_m() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestIntIntMap.m)
  return m_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestMaps

// map<int32, .protobuf_unittest.TestIntIntMap> m_int32 = 1;
inline int TestMaps::m_int32_size() const {
  return m_int32_.size();
}
inline void TestMaps::clear_m_int32() {
  m_int32_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap >&
TestMaps::m_int32() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMaps.m_int32)
  return m_int32_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap >*
TestMaps::mutable_m_int32() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMaps.m_int32)
  return m_int32_.MutableMap();
}

// map<int64, .protobuf_unittest.TestIntIntMap> m_int64 = 2;
inline int TestMaps::m_int64_size() const {
  return m_int64_.size();
}
inline void TestMaps::clear_m_int64() {
  m_int64_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap >&
TestMaps::m_int64() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMaps.m_int64)
  return m_int64_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap >*
TestMaps::mutable_m_int64() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMaps.m_int64)
  return m_int64_.MutableMap();
}

// map<uint32, .protobuf_unittest.TestIntIntMap> m_uint32 = 3;
inline int TestMaps::m_uint32_size() const {
  return m_uint32_.size();
}
inline void TestMaps::clear_m_uint32() {
  m_uint32_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::protobuf_unittest::TestIntIntMap >&
TestMaps::m_uint32() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMaps.m_uint32)
  return m_uint32_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::protobuf_unittest::TestIntIntMap >*
TestMaps::mutable_m_uint32() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMaps.m_uint32)
  return m_uint32_.MutableMap();
}

// map<uint64, .protobuf_unittest.TestIntIntMap> m_uint64 = 4;
inline int TestMaps::m_uint64_size() const {
  return m_uint64_.size();
}
inline void TestMaps::clear_m_uint64() {
  m_uint64_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_unittest::TestIntIntMap >&
TestMaps::m_uint64() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMaps.m_uint64)
  return m_uint64_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_unittest::TestIntIntMap >*
TestMaps::mutable_m_uint64() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMaps.m_uint64)
  return m_uint64_.MutableMap();
}

// map<sint32, .protobuf_unittest.TestIntIntMap> m_sint32 = 5;
inline int TestMaps::m_sint32_size() const {
  return m_sint32_.size();
}
inline void TestMaps::clear_m_sint32() {
  m_sint32_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap >&
TestMaps::m_sint32() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMaps.m_sint32)
  return m_sint32_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap >*
TestMaps::mutable_m_sint32() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMaps.m_sint32)
  return m_sint32_.MutableMap();
}

// map<sint64, .protobuf_unittest.TestIntIntMap> m_sint64 = 6;
inline int TestMaps::m_sint64_size() const {
  return m_sint64_.size();
}
inline void TestMaps::clear_m_sint64() {
  m_sint64_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap >&
TestMaps::m_sint64() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMaps.m_sint64)
  return m_sint64_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap >*
TestMaps::mutable_m_sint64() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMaps.m_sint64)
  return m_sint64_.MutableMap();
}

// map<fixed32, .protobuf_unittest.TestIntIntMap> m_fixed32 = 7;
inline int TestMaps::m_fixed32_size() const {
  return m_fixed32_.size();
}
inline void TestMaps::clear_m_fixed32() {
  m_fixed32_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::protobuf_unittest::TestIntIntMap >&
TestMaps::m_fixed32() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMaps.m_fixed32)
  return m_fixed32_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::protobuf_unittest::TestIntIntMap >*
TestMaps::mutable_m_fixed32() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMaps.m_fixed32)
  return m_fixed32_.MutableMap();
}

// map<fixed64, .protobuf_unittest.TestIntIntMap> m_fixed64 = 8;
inline int TestMaps::m_fixed64_size() const {
  return m_fixed64_.size();
}
inline void TestMaps::clear_m_fixed64() {
  m_fixed64_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_unittest::TestIntIntMap >&
TestMaps::m_fixed64() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMaps.m_fixed64)
  return m_fixed64_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_unittest::TestIntIntMap >*
TestMaps::mutable_m_fixed64() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMaps.m_fixed64)
  return m_fixed64_.MutableMap();
}

// map<sfixed32, .protobuf_unittest.TestIntIntMap> m_sfixed32 = 9;
inline int TestMaps::m_sfixed32_size() const {
  return m_sfixed32_.size();
}
inline void TestMaps::clear_m_sfixed32() {
  m_sfixed32_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap >&
TestMaps::m_sfixed32() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMaps.m_sfixed32)
  return m_sfixed32_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_unittest::TestIntIntMap >*
TestMaps::mutable_m_sfixed32() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMaps.m_sfixed32)
  return m_sfixed32_.MutableMap();
}

// map<sfixed64, .protobuf_unittest.TestIntIntMap> m_sfixed64 = 10;
inline int TestMaps::m_sfixed64_size() const {
  return m_sfixed64_.size();
}
inline void TestMaps::clear_m_sfixed64() {
  m_sfixed64_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap >&
TestMaps::m_sfixed64() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMaps.m_sfixed64)
  return m_sfixed64_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::protobuf_unittest::TestIntIntMap >*
TestMaps::mutable_m_sfixed64() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMaps.m_sfixed64)
  return m_sfixed64_.MutableMap();
}

// map<bool, .protobuf_unittest.TestIntIntMap> m_bool = 11;
inline int TestMaps::m_bool_size() const {
  return m_bool_.size();
}
inline void TestMaps::clear_m_bool() {
  m_bool_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< bool, ::protobuf_unittest::TestIntIntMap >&
TestMaps::m_bool() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMaps.m_bool)
  return m_bool_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< bool, ::protobuf_unittest::TestIntIntMap >*
TestMaps::mutable_m_bool() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMaps.m_bool)
  return m_bool_.MutableMap();
}

// map<string, .protobuf_unittest.TestIntIntMap> m_string = 12;
inline int TestMaps::m_string_size() const {
  return m_string_.size();
}
inline void TestMaps::clear_m_string() {
  m_string_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_unittest::TestIntIntMap >&
TestMaps::m_string() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMaps.m_string)
  return m_string_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_unittest::TestIntIntMap >*
TestMaps::mutable_m_string() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMaps.m_string)
  return m_string_.MutableMap();
}

// -------------------------------------------------------------------

// TestSubmessageMaps

// optional .protobuf_unittest.TestMaps m = 1;
inline bool TestSubmessageMaps::has_m() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestSubmessageMaps::clear_m() {
  if (m_ != nullptr) m_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::protobuf_unittest::TestMaps& TestSubmessageMaps::m() const {
  const ::protobuf_unittest::TestMaps* p = m_;
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestSubmessageMaps.m)
  return p != nullptr ? *p : *reinterpret_cast<const ::protobuf_unittest::TestMaps*>(
      &::protobuf_unittest::_TestMaps_default_instance_);
}
inline ::protobuf_unittest::TestMaps* TestSubmessageMaps::release_m() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestSubmessageMaps.m)
  _has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::TestMaps* temp = m_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  m_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::TestMaps* TestSubmessageMaps::unsafe_arena_release_m() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_unittest.TestSubmessageMaps.m)
  _has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::TestMaps* temp = m_;
  m_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::TestMaps* TestSubmessageMaps::mutable_m() {
  _has_bits_[0] |= 0x00000001u;
  if (m_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_unittest::TestMaps>(GetArenaNoVirtual());
    m_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestSubmessageMaps.m)
  return m_;
}
inline void TestSubmessageMaps::set_allocated_m(::protobuf_unittest::TestMaps* m) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete m_;
  }
  if (m) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(m);
    if (message_arena != submessage_arena) {
      m = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, m, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  m_ = m;
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestSubmessageMaps.m)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_unittest

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::protobuf_unittest::Proto2MapEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_unittest::Proto2MapEnum>() {
  return ::protobuf_unittest::Proto2MapEnum_descriptor();
}
template <> struct is_proto_enum< ::protobuf_unittest::Proto2MapEnumPlusExtra> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_unittest::Proto2MapEnumPlusExtra>() {
  return ::protobuf_unittest::Proto2MapEnumPlusExtra_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto
