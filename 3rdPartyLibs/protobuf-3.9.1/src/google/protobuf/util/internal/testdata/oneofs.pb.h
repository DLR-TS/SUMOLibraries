// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/util/internal/testdata/oneofs.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/struct.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto;
namespace proto_util_converter {
namespace testing {
namespace oneofs {
class Data;
class DataDefaultTypeInternal;
extern DataDefaultTypeInternal _Data_default_instance_;
class MoreData;
class MoreDataDefaultTypeInternal;
extern MoreDataDefaultTypeInternal _MoreData_default_instance_;
class OneOfsRequest;
class OneOfsRequestDefaultTypeInternal;
extern OneOfsRequestDefaultTypeInternal _OneOfsRequest_default_instance_;
class RequestWithSimpleOneof;
class RequestWithSimpleOneofDefaultTypeInternal;
extern RequestWithSimpleOneofDefaultTypeInternal _RequestWithSimpleOneof_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
}  // namespace oneofs
}  // namespace testing
}  // namespace proto_util_converter
PROTOBUF_NAMESPACE_OPEN
template<> ::proto_util_converter::testing::oneofs::Data* Arena::CreateMaybeMessage<::proto_util_converter::testing::oneofs::Data>(Arena*);
template<> ::proto_util_converter::testing::oneofs::MoreData* Arena::CreateMaybeMessage<::proto_util_converter::testing::oneofs::MoreData>(Arena*);
template<> ::proto_util_converter::testing::oneofs::OneOfsRequest* Arena::CreateMaybeMessage<::proto_util_converter::testing::oneofs::OneOfsRequest>(Arena*);
template<> ::proto_util_converter::testing::oneofs::RequestWithSimpleOneof* Arena::CreateMaybeMessage<::proto_util_converter::testing::oneofs::RequestWithSimpleOneof>(Arena*);
template<> ::proto_util_converter::testing::oneofs::Response* Arena::CreateMaybeMessage<::proto_util_converter::testing::oneofs::Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace proto_util_converter {
namespace testing {
namespace oneofs {

// ===================================================================

class OneOfsRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto_util_converter.testing.oneofs.OneOfsRequest) */ {
 public:
  OneOfsRequest();
  virtual ~OneOfsRequest();

  OneOfsRequest(const OneOfsRequest& from);
  OneOfsRequest(OneOfsRequest&& from) noexcept
    : OneOfsRequest() {
    *this = ::std::move(from);
  }

  inline OneOfsRequest& operator=(const OneOfsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline OneOfsRequest& operator=(OneOfsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OneOfsRequest& default_instance();

  enum DataCase {
    kStrData = 2,
    kIntData = 3,
    kMessageData = 4,
    kMoreData = 5,
    kStructData = 6,
    kValueData = 7,
    kListValueData = 8,
    kTsData = 9,
    DATA_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OneOfsRequest* internal_default_instance() {
    return reinterpret_cast<const OneOfsRequest*>(
               &_OneOfsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(OneOfsRequest& a, OneOfsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(OneOfsRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OneOfsRequest* New() const final {
    return CreateMaybeMessage<OneOfsRequest>(nullptr);
  }

  OneOfsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OneOfsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OneOfsRequest& from);
  void MergeFrom(const OneOfsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OneOfsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto_util_converter.testing.oneofs.OneOfsRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto);
    return ::descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
    kAnyDataFieldNumber = 19,
    kStrDataFieldNumber = 2,
    kIntDataFieldNumber = 3,
    kMessageDataFieldNumber = 4,
    kMoreDataFieldNumber = 5,
    kStructDataFieldNumber = 6,
    kValueDataFieldNumber = 7,
    kListValueDataFieldNumber = 8,
    kTsDataFieldNumber = 9,
  };
  // string value = 1;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);

  // .google.protobuf.Any any_data = 19;
  bool has_any_data() const;
  void clear_any_data();
  const PROTOBUF_NAMESPACE_ID::Any& any_data() const;
  PROTOBUF_NAMESPACE_ID::Any* release_any_data();
  PROTOBUF_NAMESPACE_ID::Any* mutable_any_data();
  void set_allocated_any_data(PROTOBUF_NAMESPACE_ID::Any* any_data);

  // string str_data = 2;
  private:
  bool has_str_data() const;
  public:
  void clear_str_data();
  const std::string& str_data() const;
  void set_str_data(const std::string& value);
  void set_str_data(std::string&& value);
  void set_str_data(const char* value);
  void set_str_data(const char* value, size_t size);
  std::string* mutable_str_data();
  std::string* release_str_data();
  void set_allocated_str_data(std::string* str_data);

  // int32 int_data = 3;
  private:
  bool has_int_data() const;
  public:
  void clear_int_data();
  ::PROTOBUF_NAMESPACE_ID::int32 int_data() const;
  void set_int_data(::PROTOBUF_NAMESPACE_ID::int32 value);

  // .proto_util_converter.testing.oneofs.Data message_data = 4;
  bool has_message_data() const;
  void clear_message_data();
  const ::proto_util_converter::testing::oneofs::Data& message_data() const;
  ::proto_util_converter::testing::oneofs::Data* release_message_data();
  ::proto_util_converter::testing::oneofs::Data* mutable_message_data();
  void set_allocated_message_data(::proto_util_converter::testing::oneofs::Data* message_data);

  // .proto_util_converter.testing.oneofs.MoreData more_data = 5;
  bool has_more_data() const;
  void clear_more_data();
  const ::proto_util_converter::testing::oneofs::MoreData& more_data() const;
  ::proto_util_converter::testing::oneofs::MoreData* release_more_data();
  ::proto_util_converter::testing::oneofs::MoreData* mutable_more_data();
  void set_allocated_more_data(::proto_util_converter::testing::oneofs::MoreData* more_data);

  // .google.protobuf.Struct struct_data = 6;
  bool has_struct_data() const;
  void clear_struct_data();
  const PROTOBUF_NAMESPACE_ID::Struct& struct_data() const;
  PROTOBUF_NAMESPACE_ID::Struct* release_struct_data();
  PROTOBUF_NAMESPACE_ID::Struct* mutable_struct_data();
  void set_allocated_struct_data(PROTOBUF_NAMESPACE_ID::Struct* struct_data);

  // .google.protobuf.Value value_data = 7;
  bool has_value_data() const;
  void clear_value_data();
  const PROTOBUF_NAMESPACE_ID::Value& value_data() const;
  PROTOBUF_NAMESPACE_ID::Value* release_value_data();
  PROTOBUF_NAMESPACE_ID::Value* mutable_value_data();
  void set_allocated_value_data(PROTOBUF_NAMESPACE_ID::Value* value_data);

  // .google.protobuf.ListValue list_value_data = 8;
  bool has_list_value_data() const;
  void clear_list_value_data();
  const PROTOBUF_NAMESPACE_ID::ListValue& list_value_data() const;
  PROTOBUF_NAMESPACE_ID::ListValue* release_list_value_data();
  PROTOBUF_NAMESPACE_ID::ListValue* mutable_list_value_data();
  void set_allocated_list_value_data(PROTOBUF_NAMESPACE_ID::ListValue* list_value_data);

  // .google.protobuf.Timestamp ts_data = 9;
  bool has_ts_data() const;
  void clear_ts_data();
  const PROTOBUF_NAMESPACE_ID::Timestamp& ts_data() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_ts_data();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_ts_data();
  void set_allocated_ts_data(PROTOBUF_NAMESPACE_ID::Timestamp* ts_data);

  void clear_data();
  DataCase data_case() const;
  // @@protoc_insertion_point(class_scope:proto_util_converter.testing.oneofs.OneOfsRequest)
 private:
  class _Internal;
  void set_has_str_data();
  void set_has_int_data();
  void set_has_message_data();
  void set_has_more_data();
  void set_has_struct_data();
  void set_has_value_data();
  void set_has_list_value_data();
  void set_has_ts_data();

  inline bool has_data() const;
  inline void clear_has_data();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  PROTOBUF_NAMESPACE_ID::Any* any_data_;
  union DataUnion {
    DataUnion() {}
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr str_data_;
    ::PROTOBUF_NAMESPACE_ID::int32 int_data_;
    ::proto_util_converter::testing::oneofs::Data* message_data_;
    ::proto_util_converter::testing::oneofs::MoreData* more_data_;
    PROTOBUF_NAMESPACE_ID::Struct* struct_data_;
    PROTOBUF_NAMESPACE_ID::Value* value_data_;
    PROTOBUF_NAMESPACE_ID::ListValue* list_value_data_;
    PROTOBUF_NAMESPACE_ID::Timestamp* ts_data_;
  } data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto;
};
// -------------------------------------------------------------------

class RequestWithSimpleOneof :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto_util_converter.testing.oneofs.RequestWithSimpleOneof) */ {
 public:
  RequestWithSimpleOneof();
  virtual ~RequestWithSimpleOneof();

  RequestWithSimpleOneof(const RequestWithSimpleOneof& from);
  RequestWithSimpleOneof(RequestWithSimpleOneof&& from) noexcept
    : RequestWithSimpleOneof() {
    *this = ::std::move(from);
  }

  inline RequestWithSimpleOneof& operator=(const RequestWithSimpleOneof& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestWithSimpleOneof& operator=(RequestWithSimpleOneof&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RequestWithSimpleOneof& default_instance();

  enum DataCase {
    kStrData = 2,
    kIntData = 3,
    kMessageData = 4,
    kMoreData = 5,
    DATA_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestWithSimpleOneof* internal_default_instance() {
    return reinterpret_cast<const RequestWithSimpleOneof*>(
               &_RequestWithSimpleOneof_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RequestWithSimpleOneof& a, RequestWithSimpleOneof& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestWithSimpleOneof* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RequestWithSimpleOneof* New() const final {
    return CreateMaybeMessage<RequestWithSimpleOneof>(nullptr);
  }

  RequestWithSimpleOneof* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RequestWithSimpleOneof>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RequestWithSimpleOneof& from);
  void MergeFrom(const RequestWithSimpleOneof& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestWithSimpleOneof* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto_util_converter.testing.oneofs.RequestWithSimpleOneof";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto);
    return ::descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
    kStrDataFieldNumber = 2,
    kIntDataFieldNumber = 3,
    kMessageDataFieldNumber = 4,
    kMoreDataFieldNumber = 5,
  };
  // string value = 1;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);

  // string str_data = 2;
  private:
  bool has_str_data() const;
  public:
  void clear_str_data();
  const std::string& str_data() const;
  void set_str_data(const std::string& value);
  void set_str_data(std::string&& value);
  void set_str_data(const char* value);
  void set_str_data(const char* value, size_t size);
  std::string* mutable_str_data();
  std::string* release_str_data();
  void set_allocated_str_data(std::string* str_data);

  // int32 int_data = 3;
  private:
  bool has_int_data() const;
  public:
  void clear_int_data();
  ::PROTOBUF_NAMESPACE_ID::int32 int_data() const;
  void set_int_data(::PROTOBUF_NAMESPACE_ID::int32 value);

  // .proto_util_converter.testing.oneofs.Data message_data = 4;
  bool has_message_data() const;
  void clear_message_data();
  const ::proto_util_converter::testing::oneofs::Data& message_data() const;
  ::proto_util_converter::testing::oneofs::Data* release_message_data();
  ::proto_util_converter::testing::oneofs::Data* mutable_message_data();
  void set_allocated_message_data(::proto_util_converter::testing::oneofs::Data* message_data);

  // .proto_util_converter.testing.oneofs.MoreData more_data = 5;
  bool has_more_data() const;
  void clear_more_data();
  const ::proto_util_converter::testing::oneofs::MoreData& more_data() const;
  ::proto_util_converter::testing::oneofs::MoreData* release_more_data();
  ::proto_util_converter::testing::oneofs::MoreData* mutable_more_data();
  void set_allocated_more_data(::proto_util_converter::testing::oneofs::MoreData* more_data);

  void clear_data();
  DataCase data_case() const;
  // @@protoc_insertion_point(class_scope:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
 private:
  class _Internal;
  void set_has_str_data();
  void set_has_int_data();
  void set_has_message_data();
  void set_has_more_data();

  inline bool has_data() const;
  inline void clear_has_data();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  union DataUnion {
    DataUnion() {}
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr str_data_;
    ::PROTOBUF_NAMESPACE_ID::int32 int_data_;
    ::proto_util_converter::testing::oneofs::Data* message_data_;
    ::proto_util_converter::testing::oneofs::MoreData* more_data_;
  } data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto;
};
// -------------------------------------------------------------------

class Data :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto_util_converter.testing.oneofs.Data) */ {
 public:
  Data();
  virtual ~Data();

  Data(const Data& from);
  Data(Data&& from) noexcept
    : Data() {
    *this = ::std::move(from);
  }

  inline Data& operator=(const Data& from) {
    CopyFrom(from);
    return *this;
  }
  inline Data& operator=(Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Data* internal_default_instance() {
    return reinterpret_cast<const Data*>(
               &_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Data& a, Data& b) {
    a.Swap(&b);
  }
  inline void Swap(Data* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Data* New() const final {
    return CreateMaybeMessage<Data>(nullptr);
  }

  Data* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Data>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Data& from);
  void MergeFrom(const Data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Data* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto_util_converter.testing.oneofs.Data";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto);
    return ::descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataValueFieldNumber = 1,
  };
  // int32 data_value = 1;
  void clear_data_value();
  ::PROTOBUF_NAMESPACE_ID::int32 data_value() const;
  void set_data_value(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:proto_util_converter.testing.oneofs.Data)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 data_value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto;
};
// -------------------------------------------------------------------

class MoreData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto_util_converter.testing.oneofs.MoreData) */ {
 public:
  MoreData();
  virtual ~MoreData();

  MoreData(const MoreData& from);
  MoreData(MoreData&& from) noexcept
    : MoreData() {
    *this = ::std::move(from);
  }

  inline MoreData& operator=(const MoreData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MoreData& operator=(MoreData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MoreData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MoreData* internal_default_instance() {
    return reinterpret_cast<const MoreData*>(
               &_MoreData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MoreData& a, MoreData& b) {
    a.Swap(&b);
  }
  inline void Swap(MoreData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MoreData* New() const final {
    return CreateMaybeMessage<MoreData>(nullptr);
  }

  MoreData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MoreData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MoreData& from);
  void MergeFrom(const MoreData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoreData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto_util_converter.testing.oneofs.MoreData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto);
    return ::descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrValueFieldNumber = 1,
  };
  // string str_value = 1;
  void clear_str_value();
  const std::string& str_value() const;
  void set_str_value(const std::string& value);
  void set_str_value(std::string&& value);
  void set_str_value(const char* value);
  void set_str_value(const char* value, size_t size);
  std::string* mutable_str_value();
  std::string* release_str_value();
  void set_allocated_str_value(std::string* str_value);

  // @@protoc_insertion_point(class_scope:proto_util_converter.testing.oneofs.MoreData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr str_value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto;
};
// -------------------------------------------------------------------

class Response :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto_util_converter.testing.oneofs.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }
  inline void Swap(Response* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const final {
    return CreateMaybeMessage<Response>(nullptr);
  }

  Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto_util_converter.testing.oneofs.Response";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto);
    return ::descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // string value = 1;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);

  // @@protoc_insertion_point(class_scope:proto_util_converter.testing.oneofs.Response)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OneOfsRequest

// string value = 1;
inline void OneOfsRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& OneOfsRequest::value() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.OneOfsRequest.value)
  return value_.GetNoArena();
}
inline void OneOfsRequest::set_value(const std::string& value) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_util_converter.testing.oneofs.OneOfsRequest.value)
}
inline void OneOfsRequest::set_value(std::string&& value) {
  
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_util_converter.testing.oneofs.OneOfsRequest.value)
}
inline void OneOfsRequest::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_util_converter.testing.oneofs.OneOfsRequest.value)
}
inline void OneOfsRequest::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_util_converter.testing.oneofs.OneOfsRequest.value)
}
inline std::string* OneOfsRequest::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.OneOfsRequest.value)
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* OneOfsRequest::release_value() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.OneOfsRequest.value)
  
  return value_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void OneOfsRequest::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.OneOfsRequest.value)
}

// string str_data = 2;
inline bool OneOfsRequest::has_str_data() const {
  return data_case() == kStrData;
}
inline void OneOfsRequest::set_has_str_data() {
  _oneof_case_[0] = kStrData;
}
inline void OneOfsRequest::clear_str_data() {
  if (has_str_data()) {
    data_.str_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    clear_has_data();
  }
}
inline const std::string& OneOfsRequest::str_data() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.OneOfsRequest.str_data)
  if (has_str_data()) {
    return data_.str_data_.GetNoArena();
  }
  return *&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void OneOfsRequest::set_str_data(const std::string& value) {
  // @@protoc_insertion_point(field_set:proto_util_converter.testing.oneofs.OneOfsRequest.str_data)
  if (!has_str_data()) {
    clear_data();
    set_has_str_data();
    data_.str_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  data_.str_data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_util_converter.testing.oneofs.OneOfsRequest.str_data)
}
inline void OneOfsRequest::set_str_data(std::string&& value) {
  // @@protoc_insertion_point(field_set:proto_util_converter.testing.oneofs.OneOfsRequest.str_data)
  if (!has_str_data()) {
    clear_data();
    set_has_str_data();
    data_.str_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  data_.str_data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_util_converter.testing.oneofs.OneOfsRequest.str_data)
}
inline void OneOfsRequest::set_str_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_str_data()) {
    clear_data();
    set_has_str_data();
    data_.str_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  data_.str_data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_util_converter.testing.oneofs.OneOfsRequest.str_data)
}
inline void OneOfsRequest::set_str_data(const char* value, size_t size) {
  if (!has_str_data()) {
    clear_data();
    set_has_str_data();
    data_.str_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  data_.str_data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_util_converter.testing.oneofs.OneOfsRequest.str_data)
}
inline std::string* OneOfsRequest::mutable_str_data() {
  if (!has_str_data()) {
    clear_data();
    set_has_str_data();
    data_.str_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.OneOfsRequest.str_data)
  return data_.str_data_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* OneOfsRequest::release_str_data() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.OneOfsRequest.str_data)
  if (has_str_data()) {
    clear_has_data();
    return data_.str_data_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void OneOfsRequest::set_allocated_str_data(std::string* str_data) {
  if (has_data()) {
    clear_data();
  }
  if (str_data != nullptr) {
    set_has_str_data();
    data_.str_data_.UnsafeSetDefault(str_data);
  }
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.OneOfsRequest.str_data)
}

// int32 int_data = 3;
inline bool OneOfsRequest::has_int_data() const {
  return data_case() == kIntData;
}
inline void OneOfsRequest::set_has_int_data() {
  _oneof_case_[0] = kIntData;
}
inline void OneOfsRequest::clear_int_data() {
  if (has_int_data()) {
    data_.int_data_ = 0;
    clear_has_data();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OneOfsRequest::int_data() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.OneOfsRequest.int_data)
  if (has_int_data()) {
    return data_.int_data_;
  }
  return 0;
}
inline void OneOfsRequest::set_int_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  if (!has_int_data()) {
    clear_data();
    set_has_int_data();
  }
  data_.int_data_ = value;
  // @@protoc_insertion_point(field_set:proto_util_converter.testing.oneofs.OneOfsRequest.int_data)
}

// .proto_util_converter.testing.oneofs.Data message_data = 4;
inline bool OneOfsRequest::has_message_data() const {
  return data_case() == kMessageData;
}
inline void OneOfsRequest::set_has_message_data() {
  _oneof_case_[0] = kMessageData;
}
inline void OneOfsRequest::clear_message_data() {
  if (has_message_data()) {
    delete data_.message_data_;
    clear_has_data();
  }
}
inline ::proto_util_converter::testing::oneofs::Data* OneOfsRequest::release_message_data() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.OneOfsRequest.message_data)
  if (has_message_data()) {
    clear_has_data();
      ::proto_util_converter::testing::oneofs::Data* temp = data_.message_data_;
    data_.message_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::proto_util_converter::testing::oneofs::Data& OneOfsRequest::message_data() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.OneOfsRequest.message_data)
  return has_message_data()
      ? *data_.message_data_
      : *reinterpret_cast< ::proto_util_converter::testing::oneofs::Data*>(&::proto_util_converter::testing::oneofs::_Data_default_instance_);
}
inline ::proto_util_converter::testing::oneofs::Data* OneOfsRequest::mutable_message_data() {
  if (!has_message_data()) {
    clear_data();
    set_has_message_data();
    data_.message_data_ = CreateMaybeMessage< ::proto_util_converter::testing::oneofs::Data >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.OneOfsRequest.message_data)
  return data_.message_data_;
}

// .proto_util_converter.testing.oneofs.MoreData more_data = 5;
inline bool OneOfsRequest::has_more_data() const {
  return data_case() == kMoreData;
}
inline void OneOfsRequest::set_has_more_data() {
  _oneof_case_[0] = kMoreData;
}
inline void OneOfsRequest::clear_more_data() {
  if (has_more_data()) {
    delete data_.more_data_;
    clear_has_data();
  }
}
inline ::proto_util_converter::testing::oneofs::MoreData* OneOfsRequest::release_more_data() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.OneOfsRequest.more_data)
  if (has_more_data()) {
    clear_has_data();
      ::proto_util_converter::testing::oneofs::MoreData* temp = data_.more_data_;
    data_.more_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::proto_util_converter::testing::oneofs::MoreData& OneOfsRequest::more_data() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.OneOfsRequest.more_data)
  return has_more_data()
      ? *data_.more_data_
      : *reinterpret_cast< ::proto_util_converter::testing::oneofs::MoreData*>(&::proto_util_converter::testing::oneofs::_MoreData_default_instance_);
}
inline ::proto_util_converter::testing::oneofs::MoreData* OneOfsRequest::mutable_more_data() {
  if (!has_more_data()) {
    clear_data();
    set_has_more_data();
    data_.more_data_ = CreateMaybeMessage< ::proto_util_converter::testing::oneofs::MoreData >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.OneOfsRequest.more_data)
  return data_.more_data_;
}

// .google.protobuf.Struct struct_data = 6;
inline bool OneOfsRequest::has_struct_data() const {
  return data_case() == kStructData;
}
inline void OneOfsRequest::set_has_struct_data() {
  _oneof_case_[0] = kStructData;
}
inline PROTOBUF_NAMESPACE_ID::Struct* OneOfsRequest::release_struct_data() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.OneOfsRequest.struct_data)
  if (has_struct_data()) {
    clear_has_data();
      PROTOBUF_NAMESPACE_ID::Struct* temp = data_.struct_data_;
    data_.struct_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const PROTOBUF_NAMESPACE_ID::Struct& OneOfsRequest::struct_data() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.OneOfsRequest.struct_data)
  return has_struct_data()
      ? *data_.struct_data_
      : *reinterpret_cast< PROTOBUF_NAMESPACE_ID::Struct*>(&PROTOBUF_NAMESPACE_ID::_Struct_default_instance_);
}
inline PROTOBUF_NAMESPACE_ID::Struct* OneOfsRequest::mutable_struct_data() {
  if (!has_struct_data()) {
    clear_data();
    set_has_struct_data();
    data_.struct_data_ = CreateMaybeMessage< PROTOBUF_NAMESPACE_ID::Struct >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.OneOfsRequest.struct_data)
  return data_.struct_data_;
}

// .google.protobuf.Value value_data = 7;
inline bool OneOfsRequest::has_value_data() const {
  return data_case() == kValueData;
}
inline void OneOfsRequest::set_has_value_data() {
  _oneof_case_[0] = kValueData;
}
inline PROTOBUF_NAMESPACE_ID::Value* OneOfsRequest::release_value_data() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.OneOfsRequest.value_data)
  if (has_value_data()) {
    clear_has_data();
      PROTOBUF_NAMESPACE_ID::Value* temp = data_.value_data_;
    data_.value_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const PROTOBUF_NAMESPACE_ID::Value& OneOfsRequest::value_data() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.OneOfsRequest.value_data)
  return has_value_data()
      ? *data_.value_data_
      : *reinterpret_cast< PROTOBUF_NAMESPACE_ID::Value*>(&PROTOBUF_NAMESPACE_ID::_Value_default_instance_);
}
inline PROTOBUF_NAMESPACE_ID::Value* OneOfsRequest::mutable_value_data() {
  if (!has_value_data()) {
    clear_data();
    set_has_value_data();
    data_.value_data_ = CreateMaybeMessage< PROTOBUF_NAMESPACE_ID::Value >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.OneOfsRequest.value_data)
  return data_.value_data_;
}

// .google.protobuf.ListValue list_value_data = 8;
inline bool OneOfsRequest::has_list_value_data() const {
  return data_case() == kListValueData;
}
inline void OneOfsRequest::set_has_list_value_data() {
  _oneof_case_[0] = kListValueData;
}
inline PROTOBUF_NAMESPACE_ID::ListValue* OneOfsRequest::release_list_value_data() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.OneOfsRequest.list_value_data)
  if (has_list_value_data()) {
    clear_has_data();
      PROTOBUF_NAMESPACE_ID::ListValue* temp = data_.list_value_data_;
    data_.list_value_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const PROTOBUF_NAMESPACE_ID::ListValue& OneOfsRequest::list_value_data() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.OneOfsRequest.list_value_data)
  return has_list_value_data()
      ? *data_.list_value_data_
      : *reinterpret_cast< PROTOBUF_NAMESPACE_ID::ListValue*>(&PROTOBUF_NAMESPACE_ID::_ListValue_default_instance_);
}
inline PROTOBUF_NAMESPACE_ID::ListValue* OneOfsRequest::mutable_list_value_data() {
  if (!has_list_value_data()) {
    clear_data();
    set_has_list_value_data();
    data_.list_value_data_ = CreateMaybeMessage< PROTOBUF_NAMESPACE_ID::ListValue >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.OneOfsRequest.list_value_data)
  return data_.list_value_data_;
}

// .google.protobuf.Timestamp ts_data = 9;
inline bool OneOfsRequest::has_ts_data() const {
  return data_case() == kTsData;
}
inline void OneOfsRequest::set_has_ts_data() {
  _oneof_case_[0] = kTsData;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* OneOfsRequest::release_ts_data() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.OneOfsRequest.ts_data)
  if (has_ts_data()) {
    clear_has_data();
      PROTOBUF_NAMESPACE_ID::Timestamp* temp = data_.ts_data_;
    data_.ts_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& OneOfsRequest::ts_data() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.OneOfsRequest.ts_data)
  return has_ts_data()
      ? *data_.ts_data_
      : *reinterpret_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(&PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* OneOfsRequest::mutable_ts_data() {
  if (!has_ts_data()) {
    clear_data();
    set_has_ts_data();
    data_.ts_data_ = CreateMaybeMessage< PROTOBUF_NAMESPACE_ID::Timestamp >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.OneOfsRequest.ts_data)
  return data_.ts_data_;
}

// .google.protobuf.Any any_data = 19;
inline bool OneOfsRequest::has_any_data() const {
  return this != internal_default_instance() && any_data_ != nullptr;
}
inline const PROTOBUF_NAMESPACE_ID::Any& OneOfsRequest::any_data() const {
  const PROTOBUF_NAMESPACE_ID::Any* p = any_data_;
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.OneOfsRequest.any_data)
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Any*>(
      &PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline PROTOBUF_NAMESPACE_ID::Any* OneOfsRequest::release_any_data() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.OneOfsRequest.any_data)
  
  PROTOBUF_NAMESPACE_ID::Any* temp = any_data_;
  any_data_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Any* OneOfsRequest::mutable_any_data() {
  
  if (any_data_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Any>(GetArenaNoVirtual());
    any_data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.OneOfsRequest.any_data)
  return any_data_;
}
inline void OneOfsRequest::set_allocated_any_data(PROTOBUF_NAMESPACE_ID::Any* any_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(any_data_);
  }
  if (any_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      any_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, any_data, submessage_arena);
    }
    
  } else {
    
  }
  any_data_ = any_data;
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.OneOfsRequest.any_data)
}

inline bool OneOfsRequest::has_data() const {
  return data_case() != DATA_NOT_SET;
}
inline void OneOfsRequest::clear_has_data() {
  _oneof_case_[0] = DATA_NOT_SET;
}
inline OneOfsRequest::DataCase OneOfsRequest::data_case() const {
  return OneOfsRequest::DataCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// RequestWithSimpleOneof

// string value = 1;
inline void RequestWithSimpleOneof::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& RequestWithSimpleOneof::value() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.value)
  return value_.GetNoArena();
}
inline void RequestWithSimpleOneof::set_value(const std::string& value) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.value)
}
inline void RequestWithSimpleOneof::set_value(std::string&& value) {
  
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.value)
}
inline void RequestWithSimpleOneof::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.value)
}
inline void RequestWithSimpleOneof::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.value)
}
inline std::string* RequestWithSimpleOneof::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.value)
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* RequestWithSimpleOneof::release_value() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.value)
  
  return value_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void RequestWithSimpleOneof::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.value)
}

// string str_data = 2;
inline bool RequestWithSimpleOneof::has_str_data() const {
  return data_case() == kStrData;
}
inline void RequestWithSimpleOneof::set_has_str_data() {
  _oneof_case_[0] = kStrData;
}
inline void RequestWithSimpleOneof::clear_str_data() {
  if (has_str_data()) {
    data_.str_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    clear_has_data();
  }
}
inline const std::string& RequestWithSimpleOneof::str_data() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.str_data)
  if (has_str_data()) {
    return data_.str_data_.GetNoArena();
  }
  return *&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void RequestWithSimpleOneof::set_str_data(const std::string& value) {
  // @@protoc_insertion_point(field_set:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.str_data)
  if (!has_str_data()) {
    clear_data();
    set_has_str_data();
    data_.str_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  data_.str_data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.str_data)
}
inline void RequestWithSimpleOneof::set_str_data(std::string&& value) {
  // @@protoc_insertion_point(field_set:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.str_data)
  if (!has_str_data()) {
    clear_data();
    set_has_str_data();
    data_.str_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  data_.str_data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.str_data)
}
inline void RequestWithSimpleOneof::set_str_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_str_data()) {
    clear_data();
    set_has_str_data();
    data_.str_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  data_.str_data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.str_data)
}
inline void RequestWithSimpleOneof::set_str_data(const char* value, size_t size) {
  if (!has_str_data()) {
    clear_data();
    set_has_str_data();
    data_.str_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  data_.str_data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.str_data)
}
inline std::string* RequestWithSimpleOneof::mutable_str_data() {
  if (!has_str_data()) {
    clear_data();
    set_has_str_data();
    data_.str_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.str_data)
  return data_.str_data_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* RequestWithSimpleOneof::release_str_data() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.str_data)
  if (has_str_data()) {
    clear_has_data();
    return data_.str_data_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void RequestWithSimpleOneof::set_allocated_str_data(std::string* str_data) {
  if (has_data()) {
    clear_data();
  }
  if (str_data != nullptr) {
    set_has_str_data();
    data_.str_data_.UnsafeSetDefault(str_data);
  }
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.str_data)
}

// int32 int_data = 3;
inline bool RequestWithSimpleOneof::has_int_data() const {
  return data_case() == kIntData;
}
inline void RequestWithSimpleOneof::set_has_int_data() {
  _oneof_case_[0] = kIntData;
}
inline void RequestWithSimpleOneof::clear_int_data() {
  if (has_int_data()) {
    data_.int_data_ = 0;
    clear_has_data();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RequestWithSimpleOneof::int_data() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.int_data)
  if (has_int_data()) {
    return data_.int_data_;
  }
  return 0;
}
inline void RequestWithSimpleOneof::set_int_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  if (!has_int_data()) {
    clear_data();
    set_has_int_data();
  }
  data_.int_data_ = value;
  // @@protoc_insertion_point(field_set:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.int_data)
}

// .proto_util_converter.testing.oneofs.Data message_data = 4;
inline bool RequestWithSimpleOneof::has_message_data() const {
  return data_case() == kMessageData;
}
inline void RequestWithSimpleOneof::set_has_message_data() {
  _oneof_case_[0] = kMessageData;
}
inline void RequestWithSimpleOneof::clear_message_data() {
  if (has_message_data()) {
    delete data_.message_data_;
    clear_has_data();
  }
}
inline ::proto_util_converter::testing::oneofs::Data* RequestWithSimpleOneof::release_message_data() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.message_data)
  if (has_message_data()) {
    clear_has_data();
      ::proto_util_converter::testing::oneofs::Data* temp = data_.message_data_;
    data_.message_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::proto_util_converter::testing::oneofs::Data& RequestWithSimpleOneof::message_data() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.message_data)
  return has_message_data()
      ? *data_.message_data_
      : *reinterpret_cast< ::proto_util_converter::testing::oneofs::Data*>(&::proto_util_converter::testing::oneofs::_Data_default_instance_);
}
inline ::proto_util_converter::testing::oneofs::Data* RequestWithSimpleOneof::mutable_message_data() {
  if (!has_message_data()) {
    clear_data();
    set_has_message_data();
    data_.message_data_ = CreateMaybeMessage< ::proto_util_converter::testing::oneofs::Data >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.message_data)
  return data_.message_data_;
}

// .proto_util_converter.testing.oneofs.MoreData more_data = 5;
inline bool RequestWithSimpleOneof::has_more_data() const {
  return data_case() == kMoreData;
}
inline void RequestWithSimpleOneof::set_has_more_data() {
  _oneof_case_[0] = kMoreData;
}
inline void RequestWithSimpleOneof::clear_more_data() {
  if (has_more_data()) {
    delete data_.more_data_;
    clear_has_data();
  }
}
inline ::proto_util_converter::testing::oneofs::MoreData* RequestWithSimpleOneof::release_more_data() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.more_data)
  if (has_more_data()) {
    clear_has_data();
      ::proto_util_converter::testing::oneofs::MoreData* temp = data_.more_data_;
    data_.more_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::proto_util_converter::testing::oneofs::MoreData& RequestWithSimpleOneof::more_data() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.more_data)
  return has_more_data()
      ? *data_.more_data_
      : *reinterpret_cast< ::proto_util_converter::testing::oneofs::MoreData*>(&::proto_util_converter::testing::oneofs::_MoreData_default_instance_);
}
inline ::proto_util_converter::testing::oneofs::MoreData* RequestWithSimpleOneof::mutable_more_data() {
  if (!has_more_data()) {
    clear_data();
    set_has_more_data();
    data_.more_data_ = CreateMaybeMessage< ::proto_util_converter::testing::oneofs::MoreData >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.more_data)
  return data_.more_data_;
}

inline bool RequestWithSimpleOneof::has_data() const {
  return data_case() != DATA_NOT_SET;
}
inline void RequestWithSimpleOneof::clear_has_data() {
  _oneof_case_[0] = DATA_NOT_SET;
}
inline RequestWithSimpleOneof::DataCase RequestWithSimpleOneof::data_case() const {
  return RequestWithSimpleOneof::DataCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Data

// int32 data_value = 1;
inline void Data::clear_data_value() {
  data_value_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Data::data_value() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.Data.data_value)
  return data_value_;
}
inline void Data::set_data_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  data_value_ = value;
  // @@protoc_insertion_point(field_set:proto_util_converter.testing.oneofs.Data.data_value)
}

// -------------------------------------------------------------------

// MoreData

// string str_value = 1;
inline void MoreData::clear_str_value() {
  str_value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MoreData::str_value() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.MoreData.str_value)
  return str_value_.GetNoArena();
}
inline void MoreData::set_str_value(const std::string& value) {
  
  str_value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_util_converter.testing.oneofs.MoreData.str_value)
}
inline void MoreData::set_str_value(std::string&& value) {
  
  str_value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_util_converter.testing.oneofs.MoreData.str_value)
}
inline void MoreData::set_str_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  str_value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_util_converter.testing.oneofs.MoreData.str_value)
}
inline void MoreData::set_str_value(const char* value, size_t size) {
  
  str_value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_util_converter.testing.oneofs.MoreData.str_value)
}
inline std::string* MoreData::mutable_str_value() {
  
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.MoreData.str_value)
  return str_value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MoreData::release_str_value() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.MoreData.str_value)
  
  return str_value_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MoreData::set_allocated_str_value(std::string* str_value) {
  if (str_value != nullptr) {
    
  } else {
    
  }
  str_value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), str_value);
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.MoreData.str_value)
}

// -------------------------------------------------------------------

// Response

// string value = 1;
inline void Response::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Response::value() const {
  // @@protoc_insertion_point(field_get:proto_util_converter.testing.oneofs.Response.value)
  return value_.GetNoArena();
}
inline void Response::set_value(const std::string& value) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_util_converter.testing.oneofs.Response.value)
}
inline void Response::set_value(std::string&& value) {
  
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_util_converter.testing.oneofs.Response.value)
}
inline void Response::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_util_converter.testing.oneofs.Response.value)
}
inline void Response::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_util_converter.testing.oneofs.Response.value)
}
inline std::string* Response::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:proto_util_converter.testing.oneofs.Response.value)
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Response::release_value() {
  // @@protoc_insertion_point(field_release:proto_util_converter.testing.oneofs.Response.value)
  
  return value_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.Response.value)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace oneofs
}  // namespace testing
}  // namespace proto_util_converter

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto
