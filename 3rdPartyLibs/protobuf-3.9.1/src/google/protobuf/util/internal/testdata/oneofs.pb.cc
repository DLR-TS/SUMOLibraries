// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/util/internal/testdata/oneofs.proto

#include "google/protobuf/util/internal/testdata/oneofs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fstruct_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Data_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MoreData_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto;
namespace proto_util_converter {
namespace testing {
namespace oneofs {
class OneOfsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OneOfsRequest> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr str_data_;
  ::PROTOBUF_NAMESPACE_ID::int32 int_data_;
  const ::proto_util_converter::testing::oneofs::Data* message_data_;
  const ::proto_util_converter::testing::oneofs::MoreData* more_data_;
  const PROTOBUF_NAMESPACE_ID::Struct* struct_data_;
  const PROTOBUF_NAMESPACE_ID::Value* value_data_;
  const PROTOBUF_NAMESPACE_ID::ListValue* list_value_data_;
  const PROTOBUF_NAMESPACE_ID::Timestamp* ts_data_;
} _OneOfsRequest_default_instance_;
class RequestWithSimpleOneofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestWithSimpleOneof> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr str_data_;
  ::PROTOBUF_NAMESPACE_ID::int32 int_data_;
  const ::proto_util_converter::testing::oneofs::Data* message_data_;
  const ::proto_util_converter::testing::oneofs::MoreData* more_data_;
} _RequestWithSimpleOneof_default_instance_;
class DataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Data> _instance;
} _Data_default_instance_;
class MoreDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MoreData> _instance;
} _MoreData_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Response> _instance;
} _Response_default_instance_;
}  // namespace oneofs
}  // namespace testing
}  // namespace proto_util_converter
static void InitDefaultsscc_info_Data_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto_util_converter::testing::oneofs::_Data_default_instance_;
    new (ptr) ::proto_util_converter::testing::oneofs::Data();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto_util_converter::testing::oneofs::Data::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Data_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_Data_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto}, {}};

static void InitDefaultsscc_info_MoreData_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto_util_converter::testing::oneofs::_MoreData_default_instance_;
    new (ptr) ::proto_util_converter::testing::oneofs::MoreData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto_util_converter::testing::oneofs::MoreData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MoreData_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_MoreData_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto}, {}};

static void InitDefaultsscc_info_OneOfsRequest_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto_util_converter::testing::oneofs::_OneOfsRequest_default_instance_;
    new (ptr) ::proto_util_converter::testing::oneofs::OneOfsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto_util_converter::testing::oneofs::OneOfsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_OneOfsRequest_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsscc_info_OneOfsRequest_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto}, {
      &scc_info_Data_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base,
      &scc_info_MoreData_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base,
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_RequestWithSimpleOneof_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto_util_converter::testing::oneofs::_RequestWithSimpleOneof_default_instance_;
    new (ptr) ::proto_util_converter::testing::oneofs::RequestWithSimpleOneof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto_util_converter::testing::oneofs::RequestWithSimpleOneof::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RequestWithSimpleOneof_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_RequestWithSimpleOneof_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto}, {
      &scc_info_Data_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base,
      &scc_info_MoreData_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base,}};

static void InitDefaultsscc_info_Response_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto_util_converter::testing::oneofs::_Response_default_instance_;
    new (ptr) ::proto_util_converter::testing::oneofs::Response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto_util_converter::testing::oneofs::Response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Response_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_Response_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::OneOfsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::OneOfsRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::OneOfsRequest, value_),
  offsetof(::proto_util_converter::testing::oneofs::OneOfsRequestDefaultTypeInternal, str_data_),
  offsetof(::proto_util_converter::testing::oneofs::OneOfsRequestDefaultTypeInternal, int_data_),
  offsetof(::proto_util_converter::testing::oneofs::OneOfsRequestDefaultTypeInternal, message_data_),
  offsetof(::proto_util_converter::testing::oneofs::OneOfsRequestDefaultTypeInternal, more_data_),
  offsetof(::proto_util_converter::testing::oneofs::OneOfsRequestDefaultTypeInternal, struct_data_),
  offsetof(::proto_util_converter::testing::oneofs::OneOfsRequestDefaultTypeInternal, value_data_),
  offsetof(::proto_util_converter::testing::oneofs::OneOfsRequestDefaultTypeInternal, list_value_data_),
  offsetof(::proto_util_converter::testing::oneofs::OneOfsRequestDefaultTypeInternal, ts_data_),
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::OneOfsRequest, any_data_),
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::OneOfsRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::RequestWithSimpleOneof, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::RequestWithSimpleOneof, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::RequestWithSimpleOneof, value_),
  offsetof(::proto_util_converter::testing::oneofs::RequestWithSimpleOneofDefaultTypeInternal, str_data_),
  offsetof(::proto_util_converter::testing::oneofs::RequestWithSimpleOneofDefaultTypeInternal, int_data_),
  offsetof(::proto_util_converter::testing::oneofs::RequestWithSimpleOneofDefaultTypeInternal, message_data_),
  offsetof(::proto_util_converter::testing::oneofs::RequestWithSimpleOneofDefaultTypeInternal, more_data_),
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::RequestWithSimpleOneof, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::Data, data_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::MoreData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::MoreData, str_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto_util_converter::testing::oneofs::Response, value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::proto_util_converter::testing::oneofs::OneOfsRequest)},
  { 16, -1, sizeof(::proto_util_converter::testing::oneofs::RequestWithSimpleOneof)},
  { 27, -1, sizeof(::proto_util_converter::testing::oneofs::Data)},
  { 33, -1, sizeof(::proto_util_converter::testing::oneofs::MoreData)},
  { 39, -1, sizeof(::proto_util_converter::testing::oneofs::Response)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto_util_converter::testing::oneofs::_OneOfsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto_util_converter::testing::oneofs::_RequestWithSimpleOneof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto_util_converter::testing::oneofs::_Data_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto_util_converter::testing::oneofs::_MoreData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto_util_converter::testing::oneofs::_Response_default_instance_),
};

const char descriptor_table_protodef_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n3google/protobuf/util/internal/testdata"
  "/oneofs.proto\022#proto_util_converter.test"
  "ing.oneofs\032\031google/protobuf/any.proto\032\034g"
  "oogle/protobuf/struct.proto\032\037google/prot"
  "obuf/timestamp.proto\"\301\003\n\rOneOfsRequest\022\r"
  "\n\005value\030\001 \001(\t\022\022\n\010str_data\030\002 \001(\tH\000\022\022\n\010int"
  "_data\030\003 \001(\005H\000\022A\n\014message_data\030\004 \001(\0132).pr"
  "oto_util_converter.testing.oneofs.DataH\000"
  "\022B\n\tmore_data\030\005 \001(\0132-.proto_util_convert"
  "er.testing.oneofs.MoreDataH\000\022.\n\013struct_d"
  "ata\030\006 \001(\0132\027.google.protobuf.StructH\000\022,\n\n"
  "value_data\030\007 \001(\0132\026.google.protobuf.Value"
  "H\000\0225\n\017list_value_data\030\010 \001(\0132\032.google.pro"
  "tobuf.ListValueH\000\022-\n\007ts_data\030\t \001(\0132\032.goo"
  "gle.protobuf.TimestampH\000\022&\n\010any_data\030\023 \001"
  "(\0132\024.google.protobuf.AnyB\006\n\004data\"\336\001\n\026Req"
  "uestWithSimpleOneof\022\r\n\005value\030\001 \001(\t\022\022\n\010st"
  "r_data\030\002 \001(\tH\000\022\022\n\010int_data\030\003 \001(\005H\000\022A\n\014me"
  "ssage_data\030\004 \001(\0132).proto_util_converter."
  "testing.oneofs.DataH\000\022B\n\tmore_data\030\005 \001(\013"
  "2-.proto_util_converter.testing.oneofs.M"
  "oreDataH\000B\006\n\004data\"\032\n\004Data\022\022\n\ndata_value\030"
  "\001 \001(\005\"\035\n\010MoreData\022\021\n\tstr_value\030\001 \001(\t\"\031\n\010"
  "Response\022\r\n\005value\030\001 \001(\tb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto_sccs[5] = {
  &scc_info_Data_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base,
  &scc_info_MoreData_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base,
  &scc_info_OneOfsRequest_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base,
  &scc_info_RequestWithSimpleOneof_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base,
  &scc_info_Response_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto_once;
static bool descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto = {
  &descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto_initialized, descriptor_table_protodef_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto, "google/protobuf/util/internal/testdata/oneofs.proto", 951,
  &descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto_once, descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto_sccs, descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto_deps, 5, 3,
  schemas, file_default_instances, TableStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto::offsets,
  file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto, 5, file_level_enum_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto, file_level_service_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto), true);
namespace proto_util_converter {
namespace testing {
namespace oneofs {

// ===================================================================

void OneOfsRequest::InitAsDefaultInstance() {
  ::proto_util_converter::testing::oneofs::_OneOfsRequest_default_instance_.str_data_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::proto_util_converter::testing::oneofs::_OneOfsRequest_default_instance_.int_data_ = 0;
  ::proto_util_converter::testing::oneofs::_OneOfsRequest_default_instance_.message_data_ = const_cast< ::proto_util_converter::testing::oneofs::Data*>(
      ::proto_util_converter::testing::oneofs::Data::internal_default_instance());
  ::proto_util_converter::testing::oneofs::_OneOfsRequest_default_instance_.more_data_ = const_cast< ::proto_util_converter::testing::oneofs::MoreData*>(
      ::proto_util_converter::testing::oneofs::MoreData::internal_default_instance());
  ::proto_util_converter::testing::oneofs::_OneOfsRequest_default_instance_.struct_data_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
  ::proto_util_converter::testing::oneofs::_OneOfsRequest_default_instance_.value_data_ = const_cast< PROTOBUF_NAMESPACE_ID::Value*>(
      PROTOBUF_NAMESPACE_ID::Value::internal_default_instance());
  ::proto_util_converter::testing::oneofs::_OneOfsRequest_default_instance_.list_value_data_ = const_cast< PROTOBUF_NAMESPACE_ID::ListValue*>(
      PROTOBUF_NAMESPACE_ID::ListValue::internal_default_instance());
  ::proto_util_converter::testing::oneofs::_OneOfsRequest_default_instance_.ts_data_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::proto_util_converter::testing::oneofs::_OneOfsRequest_default_instance_._instance.get_mutable()->any_data_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class OneOfsRequest::_Internal {
 public:
  static const ::proto_util_converter::testing::oneofs::Data& message_data(const OneOfsRequest* msg);
  static const ::proto_util_converter::testing::oneofs::MoreData& more_data(const OneOfsRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Struct& struct_data(const OneOfsRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Value& value_data(const OneOfsRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::ListValue& list_value_data(const OneOfsRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& ts_data(const OneOfsRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Any& any_data(const OneOfsRequest* msg);
};

const ::proto_util_converter::testing::oneofs::Data&
OneOfsRequest::_Internal::message_data(const OneOfsRequest* msg) {
  return *msg->data_.message_data_;
}
const ::proto_util_converter::testing::oneofs::MoreData&
OneOfsRequest::_Internal::more_data(const OneOfsRequest* msg) {
  return *msg->data_.more_data_;
}
const PROTOBUF_NAMESPACE_ID::Struct&
OneOfsRequest::_Internal::struct_data(const OneOfsRequest* msg) {
  return *msg->data_.struct_data_;
}
const PROTOBUF_NAMESPACE_ID::Value&
OneOfsRequest::_Internal::value_data(const OneOfsRequest* msg) {
  return *msg->data_.value_data_;
}
const PROTOBUF_NAMESPACE_ID::ListValue&
OneOfsRequest::_Internal::list_value_data(const OneOfsRequest* msg) {
  return *msg->data_.list_value_data_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
OneOfsRequest::_Internal::ts_data(const OneOfsRequest* msg) {
  return *msg->data_.ts_data_;
}
const PROTOBUF_NAMESPACE_ID::Any&
OneOfsRequest::_Internal::any_data(const OneOfsRequest* msg) {
  return *msg->any_data_;
}
void OneOfsRequest::set_allocated_message_data(::proto_util_converter::testing::oneofs::Data* message_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (message_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      message_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, message_data, submessage_arena);
    }
    set_has_message_data();
    data_.message_data_ = message_data;
  }
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.OneOfsRequest.message_data)
}
void OneOfsRequest::set_allocated_more_data(::proto_util_converter::testing::oneofs::MoreData* more_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (more_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      more_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, more_data, submessage_arena);
    }
    set_has_more_data();
    data_.more_data_ = more_data;
  }
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.OneOfsRequest.more_data)
}
void OneOfsRequest::set_allocated_struct_data(PROTOBUF_NAMESPACE_ID::Struct* struct_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (struct_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(struct_data)->GetArena();
    if (message_arena != submessage_arena) {
      struct_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, struct_data, submessage_arena);
    }
    set_has_struct_data();
    data_.struct_data_ = struct_data;
  }
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.OneOfsRequest.struct_data)
}
void OneOfsRequest::clear_struct_data() {
  if (has_struct_data()) {
    delete data_.struct_data_;
    clear_has_data();
  }
}
void OneOfsRequest::set_allocated_value_data(PROTOBUF_NAMESPACE_ID::Value* value_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (value_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_data)->GetArena();
    if (message_arena != submessage_arena) {
      value_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value_data, submessage_arena);
    }
    set_has_value_data();
    data_.value_data_ = value_data;
  }
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.OneOfsRequest.value_data)
}
void OneOfsRequest::clear_value_data() {
  if (has_value_data()) {
    delete data_.value_data_;
    clear_has_data();
  }
}
void OneOfsRequest::set_allocated_list_value_data(PROTOBUF_NAMESPACE_ID::ListValue* list_value_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (list_value_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(list_value_data)->GetArena();
    if (message_arena != submessage_arena) {
      list_value_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_value_data, submessage_arena);
    }
    set_has_list_value_data();
    data_.list_value_data_ = list_value_data;
  }
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.OneOfsRequest.list_value_data)
}
void OneOfsRequest::clear_list_value_data() {
  if (has_list_value_data()) {
    delete data_.list_value_data_;
    clear_has_data();
  }
}
void OneOfsRequest::set_allocated_ts_data(PROTOBUF_NAMESPACE_ID::Timestamp* ts_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (ts_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ts_data)->GetArena();
    if (message_arena != submessage_arena) {
      ts_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ts_data, submessage_arena);
    }
    set_has_ts_data();
    data_.ts_data_ = ts_data;
  }
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.OneOfsRequest.ts_data)
}
void OneOfsRequest::clear_ts_data() {
  if (has_ts_data()) {
    delete data_.ts_data_;
    clear_has_data();
  }
}
void OneOfsRequest::clear_any_data() {
  if (GetArenaNoVirtual() == nullptr && any_data_ != nullptr) {
    delete any_data_;
  }
  any_data_ = nullptr;
}
OneOfsRequest::OneOfsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_util_converter.testing.oneofs.OneOfsRequest)
}
OneOfsRequest::OneOfsRequest(const OneOfsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_any_data()) {
    any_data_ = new PROTOBUF_NAMESPACE_ID::Any(*from.any_data_);
  } else {
    any_data_ = nullptr;
  }
  clear_has_data();
  switch (from.data_case()) {
    case kStrData: {
      set_str_data(from.str_data());
      break;
    }
    case kIntData: {
      set_int_data(from.int_data());
      break;
    }
    case kMessageData: {
      mutable_message_data()->::proto_util_converter::testing::oneofs::Data::MergeFrom(from.message_data());
      break;
    }
    case kMoreData: {
      mutable_more_data()->::proto_util_converter::testing::oneofs::MoreData::MergeFrom(from.more_data());
      break;
    }
    case kStructData: {
      mutable_struct_data()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from.struct_data());
      break;
    }
    case kValueData: {
      mutable_value_data()->PROTOBUF_NAMESPACE_ID::Value::MergeFrom(from.value_data());
      break;
    }
    case kListValueData: {
      mutable_list_value_data()->PROTOBUF_NAMESPACE_ID::ListValue::MergeFrom(from.list_value_data());
      break;
    }
    case kTsData: {
      mutable_ts_data()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from.ts_data());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto_util_converter.testing.oneofs.OneOfsRequest)
}

void OneOfsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OneOfsRequest_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  any_data_ = nullptr;
  clear_has_data();
}

OneOfsRequest::~OneOfsRequest() {
  // @@protoc_insertion_point(destructor:proto_util_converter.testing.oneofs.OneOfsRequest)
  SharedDtor();
}

void OneOfsRequest::SharedDtor() {
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete any_data_;
  if (has_data()) {
    clear_data();
  }
}

void OneOfsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OneOfsRequest& OneOfsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OneOfsRequest_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base);
  return *internal_default_instance();
}


void OneOfsRequest::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:proto_util_converter.testing.oneofs.OneOfsRequest)
  switch (data_case()) {
    case kStrData: {
      data_.str_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kIntData: {
      // No need to clear
      break;
    }
    case kMessageData: {
      delete data_.message_data_;
      break;
    }
    case kMoreData: {
      delete data_.more_data_;
      break;
    }
    case kStructData: {
      delete data_.struct_data_;
      break;
    }
    case kValueData: {
      delete data_.value_data_;
      break;
    }
    case kListValueData: {
      delete data_.list_value_data_;
      break;
    }
    case kTsData: {
      delete data_.ts_data_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void OneOfsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_util_converter.testing.oneofs.OneOfsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && any_data_ != nullptr) {
    delete any_data_;
  }
  any_data_ = nullptr;
  clear_data();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OneOfsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_value(), ptr, ctx, "proto_util_converter.testing.oneofs.OneOfsRequest.value");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string str_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_str_data(), ptr, ctx, "proto_util_converter.testing.oneofs.OneOfsRequest.str_data");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 int_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          set_int_data(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .proto_util_converter.testing.oneofs.Data message_data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_message_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .proto_util_converter.testing.oneofs.MoreData more_data = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_more_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct struct_data = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_struct_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Value value_data = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_value_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.ListValue list_value_data = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(mutable_list_value_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp ts_data = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_ts_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any any_data = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(mutable_any_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OneOfsRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_util_converter.testing.oneofs.OneOfsRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "proto_util_converter.testing.oneofs.OneOfsRequest.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str_data = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_str_data()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->str_data().data(), static_cast<int>(this->str_data().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "proto_util_converter.testing.oneofs.OneOfsRequest.str_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 int_data = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          clear_data();
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_.int_data_)));
          set_has_int_data();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto_util_converter.testing.oneofs.Data message_data = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_message_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto_util_converter.testing.oneofs.MoreData more_data = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_more_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct struct_data = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value value_data = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_value_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.ListValue list_value_data = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_list_value_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp ts_data = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_ts_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any any_data = 19;
      case 19: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (154 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_any_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_util_converter.testing.oneofs.OneOfsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_util_converter.testing.oneofs.OneOfsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OneOfsRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_util_converter.testing.oneofs.OneOfsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto_util_converter.testing.oneofs.OneOfsRequest.value");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // string str_data = 2;
  if (has_str_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->str_data().data(), static_cast<int>(this->str_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto_util_converter.testing.oneofs.OneOfsRequest.str_data");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str_data(), output);
  }

  // int32 int_data = 3;
  if (has_int_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->int_data(), output);
  }

  // .proto_util_converter.testing.oneofs.Data message_data = 4;
  if (has_message_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::message_data(this), output);
  }

  // .proto_util_converter.testing.oneofs.MoreData more_data = 5;
  if (has_more_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::more_data(this), output);
  }

  // .google.protobuf.Struct struct_data = 6;
  if (has_struct_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::struct_data(this), output);
  }

  // .google.protobuf.Value value_data = 7;
  if (has_value_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::value_data(this), output);
  }

  // .google.protobuf.ListValue list_value_data = 8;
  if (has_list_value_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, _Internal::list_value_data(this), output);
  }

  // .google.protobuf.Timestamp ts_data = 9;
  if (has_ts_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, _Internal::ts_data(this), output);
  }

  // .google.protobuf.Any any_data = 19;
  if (this->has_any_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, _Internal::any_data(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_util_converter.testing.oneofs.OneOfsRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* OneOfsRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto_util_converter.testing.oneofs.OneOfsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto_util_converter.testing.oneofs.OneOfsRequest.value");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // string str_data = 2;
  if (has_str_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->str_data().data(), static_cast<int>(this->str_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto_util_converter.testing.oneofs.OneOfsRequest.str_data");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->str_data(), target);
  }

  // int32 int_data = 3;
  if (has_int_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->int_data(), target);
  }

  // .proto_util_converter.testing.oneofs.Data message_data = 4;
  if (has_message_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::message_data(this), target);
  }

  // .proto_util_converter.testing.oneofs.MoreData more_data = 5;
  if (has_more_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::more_data(this), target);
  }

  // .google.protobuf.Struct struct_data = 6;
  if (has_struct_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::struct_data(this), target);
  }

  // .google.protobuf.Value value_data = 7;
  if (has_value_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::value_data(this), target);
  }

  // .google.protobuf.ListValue list_value_data = 8;
  if (has_list_value_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::list_value_data(this), target);
  }

  // .google.protobuf.Timestamp ts_data = 9;
  if (has_ts_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::ts_data(this), target);
  }

  // .google.protobuf.Any any_data = 19;
  if (this->has_any_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, _Internal::any_data(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_util_converter.testing.oneofs.OneOfsRequest)
  return target;
}

size_t OneOfsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_util_converter.testing.oneofs.OneOfsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.protobuf.Any any_data = 19;
  if (this->has_any_data()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *any_data_);
  }

  switch (data_case()) {
    // string str_data = 2;
    case kStrData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->str_data());
      break;
    }
    // int32 int_data = 3;
    case kIntData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->int_data());
      break;
    }
    // .proto_util_converter.testing.oneofs.Data message_data = 4;
    case kMessageData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.message_data_);
      break;
    }
    // .proto_util_converter.testing.oneofs.MoreData more_data = 5;
    case kMoreData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.more_data_);
      break;
    }
    // .google.protobuf.Struct struct_data = 6;
    case kStructData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.struct_data_);
      break;
    }
    // .google.protobuf.Value value_data = 7;
    case kValueData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.value_data_);
      break;
    }
    // .google.protobuf.ListValue list_value_data = 8;
    case kListValueData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.list_value_data_);
      break;
    }
    // .google.protobuf.Timestamp ts_data = 9;
    case kTsData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.ts_data_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OneOfsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_util_converter.testing.oneofs.OneOfsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OneOfsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OneOfsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_util_converter.testing.oneofs.OneOfsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_util_converter.testing.oneofs.OneOfsRequest)
    MergeFrom(*source);
  }
}

void OneOfsRequest::MergeFrom(const OneOfsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_util_converter.testing.oneofs.OneOfsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_any_data()) {
    mutable_any_data()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from.any_data());
  }
  switch (from.data_case()) {
    case kStrData: {
      set_str_data(from.str_data());
      break;
    }
    case kIntData: {
      set_int_data(from.int_data());
      break;
    }
    case kMessageData: {
      mutable_message_data()->::proto_util_converter::testing::oneofs::Data::MergeFrom(from.message_data());
      break;
    }
    case kMoreData: {
      mutable_more_data()->::proto_util_converter::testing::oneofs::MoreData::MergeFrom(from.more_data());
      break;
    }
    case kStructData: {
      mutable_struct_data()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from.struct_data());
      break;
    }
    case kValueData: {
      mutable_value_data()->PROTOBUF_NAMESPACE_ID::Value::MergeFrom(from.value_data());
      break;
    }
    case kListValueData: {
      mutable_list_value_data()->PROTOBUF_NAMESPACE_ID::ListValue::MergeFrom(from.list_value_data());
      break;
    }
    case kTsData: {
      mutable_ts_data()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from.ts_data());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void OneOfsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_util_converter.testing.oneofs.OneOfsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneOfsRequest::CopyFrom(const OneOfsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_util_converter.testing.oneofs.OneOfsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneOfsRequest::IsInitialized() const {
  return true;
}

void OneOfsRequest::InternalSwap(OneOfsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(any_data_, other->any_data_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata OneOfsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestWithSimpleOneof::InitAsDefaultInstance() {
  ::proto_util_converter::testing::oneofs::_RequestWithSimpleOneof_default_instance_.str_data_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::proto_util_converter::testing::oneofs::_RequestWithSimpleOneof_default_instance_.int_data_ = 0;
  ::proto_util_converter::testing::oneofs::_RequestWithSimpleOneof_default_instance_.message_data_ = const_cast< ::proto_util_converter::testing::oneofs::Data*>(
      ::proto_util_converter::testing::oneofs::Data::internal_default_instance());
  ::proto_util_converter::testing::oneofs::_RequestWithSimpleOneof_default_instance_.more_data_ = const_cast< ::proto_util_converter::testing::oneofs::MoreData*>(
      ::proto_util_converter::testing::oneofs::MoreData::internal_default_instance());
}
class RequestWithSimpleOneof::_Internal {
 public:
  static const ::proto_util_converter::testing::oneofs::Data& message_data(const RequestWithSimpleOneof* msg);
  static const ::proto_util_converter::testing::oneofs::MoreData& more_data(const RequestWithSimpleOneof* msg);
};

const ::proto_util_converter::testing::oneofs::Data&
RequestWithSimpleOneof::_Internal::message_data(const RequestWithSimpleOneof* msg) {
  return *msg->data_.message_data_;
}
const ::proto_util_converter::testing::oneofs::MoreData&
RequestWithSimpleOneof::_Internal::more_data(const RequestWithSimpleOneof* msg) {
  return *msg->data_.more_data_;
}
void RequestWithSimpleOneof::set_allocated_message_data(::proto_util_converter::testing::oneofs::Data* message_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (message_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      message_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, message_data, submessage_arena);
    }
    set_has_message_data();
    data_.message_data_ = message_data;
  }
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.message_data)
}
void RequestWithSimpleOneof::set_allocated_more_data(::proto_util_converter::testing::oneofs::MoreData* more_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (more_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      more_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, more_data, submessage_arena);
    }
    set_has_more_data();
    data_.more_data_ = more_data;
  }
  // @@protoc_insertion_point(field_set_allocated:proto_util_converter.testing.oneofs.RequestWithSimpleOneof.more_data)
}
RequestWithSimpleOneof::RequestWithSimpleOneof()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
}
RequestWithSimpleOneof::RequestWithSimpleOneof(const RequestWithSimpleOneof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  clear_has_data();
  switch (from.data_case()) {
    case kStrData: {
      set_str_data(from.str_data());
      break;
    }
    case kIntData: {
      set_int_data(from.int_data());
      break;
    }
    case kMessageData: {
      mutable_message_data()->::proto_util_converter::testing::oneofs::Data::MergeFrom(from.message_data());
      break;
    }
    case kMoreData: {
      mutable_more_data()->::proto_util_converter::testing::oneofs::MoreData::MergeFrom(from.more_data());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
}

void RequestWithSimpleOneof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestWithSimpleOneof_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}

RequestWithSimpleOneof::~RequestWithSimpleOneof() {
  // @@protoc_insertion_point(destructor:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
  SharedDtor();
}

void RequestWithSimpleOneof::SharedDtor() {
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_data()) {
    clear_data();
  }
}

void RequestWithSimpleOneof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestWithSimpleOneof& RequestWithSimpleOneof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestWithSimpleOneof_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base);
  return *internal_default_instance();
}


void RequestWithSimpleOneof::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
  switch (data_case()) {
    case kStrData: {
      data_.str_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kIntData: {
      // No need to clear
      break;
    }
    case kMessageData: {
      delete data_.message_data_;
      break;
    }
    case kMoreData: {
      delete data_.more_data_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void RequestWithSimpleOneof::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_data();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RequestWithSimpleOneof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_value(), ptr, ctx, "proto_util_converter.testing.oneofs.RequestWithSimpleOneof.value");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string str_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_str_data(), ptr, ctx, "proto_util_converter.testing.oneofs.RequestWithSimpleOneof.str_data");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 int_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          set_int_data(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .proto_util_converter.testing.oneofs.Data message_data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_message_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .proto_util_converter.testing.oneofs.MoreData more_data = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_more_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RequestWithSimpleOneof::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "proto_util_converter.testing.oneofs.RequestWithSimpleOneof.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str_data = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_str_data()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->str_data().data(), static_cast<int>(this->str_data().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "proto_util_converter.testing.oneofs.RequestWithSimpleOneof.str_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 int_data = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          clear_data();
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_.int_data_)));
          set_has_int_data();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto_util_converter.testing.oneofs.Data message_data = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_message_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto_util_converter.testing.oneofs.MoreData more_data = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_more_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RequestWithSimpleOneof::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto_util_converter.testing.oneofs.RequestWithSimpleOneof.value");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // string str_data = 2;
  if (has_str_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->str_data().data(), static_cast<int>(this->str_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto_util_converter.testing.oneofs.RequestWithSimpleOneof.str_data");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str_data(), output);
  }

  // int32 int_data = 3;
  if (has_int_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->int_data(), output);
  }

  // .proto_util_converter.testing.oneofs.Data message_data = 4;
  if (has_message_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::message_data(this), output);
  }

  // .proto_util_converter.testing.oneofs.MoreData more_data = 5;
  if (has_more_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::more_data(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestWithSimpleOneof::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto_util_converter.testing.oneofs.RequestWithSimpleOneof.value");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // string str_data = 2;
  if (has_str_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->str_data().data(), static_cast<int>(this->str_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto_util_converter.testing.oneofs.RequestWithSimpleOneof.str_data");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->str_data(), target);
  }

  // int32 int_data = 3;
  if (has_int_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->int_data(), target);
  }

  // .proto_util_converter.testing.oneofs.Data message_data = 4;
  if (has_message_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::message_data(this), target);
  }

  // .proto_util_converter.testing.oneofs.MoreData more_data = 5;
  if (has_more_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::more_data(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
  return target;
}

size_t RequestWithSimpleOneof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->value());
  }

  switch (data_case()) {
    // string str_data = 2;
    case kStrData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->str_data());
      break;
    }
    // int32 int_data = 3;
    case kIntData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->int_data());
      break;
    }
    // .proto_util_converter.testing.oneofs.Data message_data = 4;
    case kMessageData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.message_data_);
      break;
    }
    // .proto_util_converter.testing.oneofs.MoreData more_data = 5;
    case kMoreData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.more_data_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestWithSimpleOneof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestWithSimpleOneof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestWithSimpleOneof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
    MergeFrom(*source);
  }
}

void RequestWithSimpleOneof::MergeFrom(const RequestWithSimpleOneof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  switch (from.data_case()) {
    case kStrData: {
      set_str_data(from.str_data());
      break;
    }
    case kIntData: {
      set_int_data(from.int_data());
      break;
    }
    case kMessageData: {
      mutable_message_data()->::proto_util_converter::testing::oneofs::Data::MergeFrom(from.message_data());
      break;
    }
    case kMoreData: {
      mutable_more_data()->::proto_util_converter::testing::oneofs::MoreData::MergeFrom(from.more_data());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void RequestWithSimpleOneof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestWithSimpleOneof::CopyFrom(const RequestWithSimpleOneof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_util_converter.testing.oneofs.RequestWithSimpleOneof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestWithSimpleOneof::IsInitialized() const {
  return true;
}

void RequestWithSimpleOneof::InternalSwap(RequestWithSimpleOneof* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestWithSimpleOneof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Data::InitAsDefaultInstance() {
}
class Data::_Internal {
 public:
};

Data::Data()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_util_converter.testing.oneofs.Data)
}
Data::Data(const Data& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_value_ = from.data_value_;
  // @@protoc_insertion_point(copy_constructor:proto_util_converter.testing.oneofs.Data)
}

void Data::SharedCtor() {
  data_value_ = 0;
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:proto_util_converter.testing.oneofs.Data)
  SharedDtor();
}

void Data::SharedDtor() {
}

void Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Data& Data::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Data_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base);
  return *internal_default_instance();
}


void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_util_converter.testing.oneofs.Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Data::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 data_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          data_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Data::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_util_converter.testing.oneofs.Data)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 data_value = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_util_converter.testing.oneofs.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_util_converter.testing.oneofs.Data)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Data::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_util_converter.testing.oneofs.Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 data_value = 1;
  if (this->data_value() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->data_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_util_converter.testing.oneofs.Data)
}

::PROTOBUF_NAMESPACE_ID::uint8* Data::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto_util_converter.testing.oneofs.Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 data_value = 1;
  if (this->data_value() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->data_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_util_converter.testing.oneofs.Data)
  return target;
}

size_t Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_util_converter.testing.oneofs.Data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 data_value = 1;
  if (this->data_value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->data_value());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Data::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_util_converter.testing.oneofs.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Data* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Data>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_util_converter.testing.oneofs.Data)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_util_converter.testing.oneofs.Data)
    MergeFrom(*source);
  }
}

void Data::MergeFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_util_converter.testing.oneofs.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data_value() != 0) {
    set_data_value(from.data_value());
  }
}

void Data::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_util_converter.testing.oneofs.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_util_converter.testing.oneofs.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data::IsInitialized() const {
  return true;
}

void Data::InternalSwap(Data* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(data_value_, other->data_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Data::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MoreData::InitAsDefaultInstance() {
}
class MoreData::_Internal {
 public:
};

MoreData::MoreData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_util_converter.testing.oneofs.MoreData)
}
MoreData::MoreData(const MoreData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.str_value().empty()) {
    str_value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.str_value_);
  }
  // @@protoc_insertion_point(copy_constructor:proto_util_converter.testing.oneofs.MoreData)
}

void MoreData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MoreData_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base);
  str_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MoreData::~MoreData() {
  // @@protoc_insertion_point(destructor:proto_util_converter.testing.oneofs.MoreData)
  SharedDtor();
}

void MoreData::SharedDtor() {
  str_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MoreData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoreData& MoreData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MoreData_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base);
  return *internal_default_instance();
}


void MoreData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_util_converter.testing.oneofs.MoreData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  str_value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoreData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string str_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_str_value(), ptr, ctx, "proto_util_converter.testing.oneofs.MoreData.str_value");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoreData::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_util_converter.testing.oneofs.MoreData)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string str_value = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_str_value()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->str_value().data(), static_cast<int>(this->str_value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "proto_util_converter.testing.oneofs.MoreData.str_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_util_converter.testing.oneofs.MoreData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_util_converter.testing.oneofs.MoreData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoreData::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_util_converter.testing.oneofs.MoreData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string str_value = 1;
  if (this->str_value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->str_value().data(), static_cast<int>(this->str_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto_util_converter.testing.oneofs.MoreData.str_value");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->str_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_util_converter.testing.oneofs.MoreData)
}

::PROTOBUF_NAMESPACE_ID::uint8* MoreData::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto_util_converter.testing.oneofs.MoreData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string str_value = 1;
  if (this->str_value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->str_value().data(), static_cast<int>(this->str_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto_util_converter.testing.oneofs.MoreData.str_value");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->str_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_util_converter.testing.oneofs.MoreData)
  return target;
}

size_t MoreData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_util_converter.testing.oneofs.MoreData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string str_value = 1;
  if (this->str_value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->str_value());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoreData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_util_converter.testing.oneofs.MoreData)
  GOOGLE_DCHECK_NE(&from, this);
  const MoreData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MoreData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_util_converter.testing.oneofs.MoreData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_util_converter.testing.oneofs.MoreData)
    MergeFrom(*source);
  }
}

void MoreData::MergeFrom(const MoreData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_util_converter.testing.oneofs.MoreData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.str_value().size() > 0) {

    str_value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.str_value_);
  }
}

void MoreData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_util_converter.testing.oneofs.MoreData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoreData::CopyFrom(const MoreData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_util_converter.testing.oneofs.MoreData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoreData::IsInitialized() const {
  return true;
}

void MoreData::InternalSwap(MoreData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  str_value_.Swap(&other->str_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata MoreData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Response::InitAsDefaultInstance() {
}
class Response::_Internal {
 public:
};

Response::Response()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_util_converter.testing.oneofs.Response)
}
Response::Response(const Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:proto_util_converter.testing.oneofs.Response)
}

void Response::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Response_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:proto_util_converter.testing.oneofs.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Response& Response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Response_google_2fprotobuf_2futil_2finternal_2ftestdata_2foneofs_2eproto.base);
  return *internal_default_instance();
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_util_converter.testing.oneofs.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_value(), ptr, ctx, "proto_util_converter.testing.oneofs.Response.value");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Response::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_util_converter.testing.oneofs.Response)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "proto_util_converter.testing.oneofs.Response.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_util_converter.testing.oneofs.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_util_converter.testing.oneofs.Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Response::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_util_converter.testing.oneofs.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto_util_converter.testing.oneofs.Response.value");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_util_converter.testing.oneofs.Response)
}

::PROTOBUF_NAMESPACE_ID::uint8* Response::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto_util_converter.testing.oneofs.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto_util_converter.testing.oneofs.Response.value");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_util_converter.testing.oneofs.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_util_converter.testing.oneofs.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_util_converter.testing.oneofs.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_util_converter.testing.oneofs.Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_util_converter.testing.oneofs.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_util_converter.testing.oneofs.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_util_converter.testing.oneofs.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_util_converter.testing.oneofs.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::InternalSwap(Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Response::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace oneofs
}  // namespace testing
}  // namespace proto_util_converter
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto_util_converter::testing::oneofs::OneOfsRequest* Arena::CreateMaybeMessage< ::proto_util_converter::testing::oneofs::OneOfsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto_util_converter::testing::oneofs::OneOfsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto_util_converter::testing::oneofs::RequestWithSimpleOneof* Arena::CreateMaybeMessage< ::proto_util_converter::testing::oneofs::RequestWithSimpleOneof >(Arena* arena) {
  return Arena::CreateInternal< ::proto_util_converter::testing::oneofs::RequestWithSimpleOneof >(arena);
}
template<> PROTOBUF_NOINLINE ::proto_util_converter::testing::oneofs::Data* Arena::CreateMaybeMessage< ::proto_util_converter::testing::oneofs::Data >(Arena* arena) {
  return Arena::CreateInternal< ::proto_util_converter::testing::oneofs::Data >(arena);
}
template<> PROTOBUF_NOINLINE ::proto_util_converter::testing::oneofs::MoreData* Arena::CreateMaybeMessage< ::proto_util_converter::testing::oneofs::MoreData >(Arena* arena) {
  return Arena::CreateInternal< ::proto_util_converter::testing::oneofs::MoreData >(arena);
}
template<> PROTOBUF_NOINLINE ::proto_util_converter::testing::oneofs::Response* Arena::CreateMaybeMessage< ::proto_util_converter::testing::oneofs::Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto_util_converter::testing::oneofs::Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
