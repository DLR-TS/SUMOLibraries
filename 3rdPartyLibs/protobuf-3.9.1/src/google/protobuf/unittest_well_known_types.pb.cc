// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_well_known_types.proto

#include "google/protobuf/unittest_well_known_types.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fapi_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Api_google_2fprotobuf_2fapi_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BytesValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DoubleValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fempty_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_google_2fprotobuf_2fempty_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ffield_5fmask_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FloatValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Int64Value_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fstruct_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fsource_5fcontext_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceContext_google_2fprotobuf_2fsource_5fcontext_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftype_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Type_google_2fprotobuf_2ftype_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UInt32Value_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UInt64Value_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_AnyFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_ApiFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_BoolFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_BytesFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_DoubleFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_DurationFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_EmptyFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_FloatFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_Int32FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_Int64FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_SourceContextFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_StringFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_StructFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_TimestampFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_TypeFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_Uint32FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_Uint64FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto;
namespace protobuf_unittest {
class TestWellKnownTypesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestWellKnownTypes> _instance;
} _TestWellKnownTypes_default_instance_;
class RepeatedWellKnownTypesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RepeatedWellKnownTypes> _instance;
} _RepeatedWellKnownTypes_default_instance_;
class OneofWellKnownTypesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OneofWellKnownTypes> _instance;
  const PROTOBUF_NAMESPACE_ID::Any* any_field_;
  const PROTOBUF_NAMESPACE_ID::Api* api_field_;
  const PROTOBUF_NAMESPACE_ID::Duration* duration_field_;
  const PROTOBUF_NAMESPACE_ID::Empty* empty_field_;
  const PROTOBUF_NAMESPACE_ID::FieldMask* field_mask_field_;
  const PROTOBUF_NAMESPACE_ID::SourceContext* source_context_field_;
  const PROTOBUF_NAMESPACE_ID::Struct* struct_field_;
  const PROTOBUF_NAMESPACE_ID::Timestamp* timestamp_field_;
  const PROTOBUF_NAMESPACE_ID::Type* type_field_;
  const PROTOBUF_NAMESPACE_ID::DoubleValue* double_field_;
  const PROTOBUF_NAMESPACE_ID::FloatValue* float_field_;
  const PROTOBUF_NAMESPACE_ID::Int64Value* int64_field_;
  const PROTOBUF_NAMESPACE_ID::UInt64Value* uint64_field_;
  const PROTOBUF_NAMESPACE_ID::Int32Value* int32_field_;
  const PROTOBUF_NAMESPACE_ID::UInt32Value* uint32_field_;
  const PROTOBUF_NAMESPACE_ID::BoolValue* bool_field_;
  const PROTOBUF_NAMESPACE_ID::StringValue* string_field_;
  const PROTOBUF_NAMESPACE_ID::BytesValue* bytes_field_;
} _OneofWellKnownTypes_default_instance_;
class MapWellKnownTypes_AnyFieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_AnyFieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_AnyFieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_ApiFieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_ApiFieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_ApiFieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_DurationFieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_DurationFieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_DurationFieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_EmptyFieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_EmptyFieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_EmptyFieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_FieldMaskFieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_SourceContextFieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_SourceContextFieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_SourceContextFieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_StructFieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_StructFieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_StructFieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_TimestampFieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_TimestampFieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_TimestampFieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_TypeFieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_TypeFieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_TypeFieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_DoubleFieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_DoubleFieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_DoubleFieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_FloatFieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_FloatFieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_FloatFieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_Int64FieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_Int64FieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_Int64FieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_Uint64FieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_Uint64FieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_Uint64FieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_Int32FieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_Int32FieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_Int32FieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_Uint32FieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_Uint32FieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_Uint32FieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_BoolFieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_BoolFieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_BoolFieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_StringFieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_StringFieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_StringFieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypes_BytesFieldEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes_BytesFieldEntry_DoNotUse> _instance;
} _MapWellKnownTypes_BytesFieldEntry_DoNotUse_default_instance_;
class MapWellKnownTypesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapWellKnownTypes> _instance;
} _MapWellKnownTypes_default_instance_;
}  // namespace protobuf_unittest
static void InitDefaultsscc_info_MapWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_unittest::MapWellKnownTypes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<18> scc_info_MapWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 18, InitDefaultsscc_info_MapWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_MapWellKnownTypes_AnyFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_ApiFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_DurationFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_EmptyFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_SourceContextFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_StructFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_TimestampFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_TypeFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_DoubleFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_FloatFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_Int64FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_Uint64FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_Int32FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_Uint32FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_BoolFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_StringFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
      &scc_info_MapWellKnownTypes_BytesFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_AnyFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_AnyFieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_AnyFieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_AnyFieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_AnyFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_AnyFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_ApiFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_ApiFieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_ApiFieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_ApiFieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_ApiFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_ApiFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_Api_google_2fprotobuf_2fapi_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_BoolFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_BoolFieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_BoolFieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_BoolFieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_BoolFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_BoolFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_BytesFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_BytesFieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_BytesFieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_BytesFieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_BytesFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_BytesFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_BytesValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_DoubleFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_DoubleFieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_DoubleFieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_DoubleFieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_DoubleFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_DoubleFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_DoubleValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_DurationFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_DurationFieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_DurationFieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_DurationFieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_DurationFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_DurationFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_EmptyFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_EmptyFieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_EmptyFieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_EmptyFieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_EmptyFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_EmptyFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_Empty_google_2fprotobuf_2fempty_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_FloatFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_FloatFieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_FloatFieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_FloatFieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_FloatFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_FloatFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_FloatValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_Int32FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_Int32FieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_Int32FieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_Int32FieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_Int32FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_Int32FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_Int64FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_Int64FieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_Int64FieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_Int64FieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_Int64FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_Int64FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_Int64Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_SourceContextFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_SourceContextFieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_SourceContextFieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_SourceContextFieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_SourceContextFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_SourceContextFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_SourceContext_google_2fprotobuf_2fsource_5fcontext_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_StringFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_StringFieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_StringFieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_StringFieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_StringFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_StringFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_StructFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_StructFieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_StructFieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_StructFieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_StructFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_StructFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_TimestampFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_TimestampFieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_TimestampFieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_TimestampFieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_TimestampFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_TimestampFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_TypeFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_TypeFieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_TypeFieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_TypeFieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_TypeFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_TypeFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_Type_google_2fprotobuf_2ftype_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_Uint32FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_Uint32FieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_Uint32FieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_Uint32FieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_Uint32FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_Uint32FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_UInt32Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_MapWellKnownTypes_Uint64FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_MapWellKnownTypes_Uint64FieldEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_unittest::MapWellKnownTypes_Uint64FieldEntry_DoNotUse();
  }
  ::protobuf_unittest::MapWellKnownTypes_Uint64FieldEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MapWellKnownTypes_Uint64FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MapWellKnownTypes_Uint64FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_UInt64Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_OneofWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_OneofWellKnownTypes_default_instance_;
    new (ptr) ::protobuf_unittest::OneofWellKnownTypes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_unittest::OneofWellKnownTypes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<18> scc_info_OneofWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 18, InitDefaultsscc_info_OneofWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,
      &scc_info_Api_google_2fprotobuf_2fapi_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,
      &scc_info_Empty_google_2fprotobuf_2fempty_2eproto.base,
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,
      &scc_info_SourceContext_google_2fprotobuf_2fsource_5fcontext_2eproto.base,
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Type_google_2fprotobuf_2ftype_2eproto.base,
      &scc_info_DoubleValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_FloatValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Int64Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_UInt64Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_UInt32Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_BytesValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_RepeatedWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_RepeatedWellKnownTypes_default_instance_;
    new (ptr) ::protobuf_unittest::RepeatedWellKnownTypes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_unittest::RepeatedWellKnownTypes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<18> scc_info_RepeatedWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 18, InitDefaultsscc_info_RepeatedWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,
      &scc_info_Api_google_2fprotobuf_2fapi_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,
      &scc_info_Empty_google_2fprotobuf_2fempty_2eproto.base,
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,
      &scc_info_SourceContext_google_2fprotobuf_2fsource_5fcontext_2eproto.base,
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Type_google_2fprotobuf_2ftype_2eproto.base,
      &scc_info_DoubleValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_FloatValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Int64Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_UInt64Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_UInt32Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_BytesValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_TestWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_TestWellKnownTypes_default_instance_;
    new (ptr) ::protobuf_unittest::TestWellKnownTypes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_unittest::TestWellKnownTypes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<18> scc_info_TestWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 18, InitDefaultsscc_info_TestWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,
      &scc_info_Api_google_2fprotobuf_2fapi_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,
      &scc_info_Empty_google_2fprotobuf_2fempty_2eproto.base,
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,
      &scc_info_SourceContext_google_2fprotobuf_2fsource_5fcontext_2eproto.base,
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Type_google_2fprotobuf_2ftype_2eproto.base,
      &scc_info_DoubleValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_FloatValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Int64Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_UInt64Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_UInt32Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_BytesValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto[22];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, any_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, api_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, duration_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, empty_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, field_mask_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, source_context_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, struct_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, timestamp_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, type_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, double_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, float_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, int64_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, uint64_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, int32_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, uint32_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, bool_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, string_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, bytes_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestWellKnownTypes, value_field_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, any_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, api_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, duration_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, empty_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, field_mask_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, source_context_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, struct_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, timestamp_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, type_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, double_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, float_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, int64_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, uint64_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, int32_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, uint32_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, bool_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, string_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedWellKnownTypes, bytes_field_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::OneofWellKnownTypes, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::OneofWellKnownTypes, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, any_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, api_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, duration_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, empty_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, field_mask_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, source_context_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, struct_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, timestamp_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, type_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, double_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, float_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, int64_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, uint64_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, int32_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, uint32_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, bool_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, string_field_),
  offsetof(::protobuf_unittest::OneofWellKnownTypesDefaultTypeInternal, bytes_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::OneofWellKnownTypes, oneof_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_AnyFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_AnyFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_AnyFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_AnyFieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_ApiFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_ApiFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_ApiFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_ApiFieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_DurationFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_DurationFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_DurationFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_DurationFieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_EmptyFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_EmptyFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_EmptyFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_EmptyFieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_SourceContextFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_SourceContextFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_SourceContextFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_SourceContextFieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_StructFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_StructFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_StructFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_StructFieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_TimestampFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_TimestampFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_TimestampFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_TimestampFieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_TypeFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_TypeFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_TypeFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_TypeFieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_DoubleFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_DoubleFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_DoubleFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_DoubleFieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_FloatFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_FloatFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_FloatFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_FloatFieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Int64FieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Int64FieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Int64FieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Int64FieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Uint64FieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Uint64FieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Uint64FieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Uint64FieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Int32FieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Int32FieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Int32FieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Int32FieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Uint32FieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Uint32FieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Uint32FieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_Uint32FieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_BoolFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_BoolFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_BoolFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_BoolFieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_StringFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_StringFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_StringFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_StringFieldEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_BytesFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_BytesFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_BytesFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes_BytesFieldEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, any_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, api_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, duration_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, empty_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, field_mask_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, source_context_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, struct_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, timestamp_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, type_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, double_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, float_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, int64_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, uint64_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, int32_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, uint32_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, bool_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, string_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MapWellKnownTypes, bytes_field_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protobuf_unittest::TestWellKnownTypes)},
  { 24, -1, sizeof(::protobuf_unittest::RepeatedWellKnownTypes)},
  { 47, -1, sizeof(::protobuf_unittest::OneofWellKnownTypes)},
  { 71, 78, sizeof(::protobuf_unittest::MapWellKnownTypes_AnyFieldEntry_DoNotUse)},
  { 80, 87, sizeof(::protobuf_unittest::MapWellKnownTypes_ApiFieldEntry_DoNotUse)},
  { 89, 96, sizeof(::protobuf_unittest::MapWellKnownTypes_DurationFieldEntry_DoNotUse)},
  { 98, 105, sizeof(::protobuf_unittest::MapWellKnownTypes_EmptyFieldEntry_DoNotUse)},
  { 107, 114, sizeof(::protobuf_unittest::MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse)},
  { 116, 123, sizeof(::protobuf_unittest::MapWellKnownTypes_SourceContextFieldEntry_DoNotUse)},
  { 125, 132, sizeof(::protobuf_unittest::MapWellKnownTypes_StructFieldEntry_DoNotUse)},
  { 134, 141, sizeof(::protobuf_unittest::MapWellKnownTypes_TimestampFieldEntry_DoNotUse)},
  { 143, 150, sizeof(::protobuf_unittest::MapWellKnownTypes_TypeFieldEntry_DoNotUse)},
  { 152, 159, sizeof(::protobuf_unittest::MapWellKnownTypes_DoubleFieldEntry_DoNotUse)},
  { 161, 168, sizeof(::protobuf_unittest::MapWellKnownTypes_FloatFieldEntry_DoNotUse)},
  { 170, 177, sizeof(::protobuf_unittest::MapWellKnownTypes_Int64FieldEntry_DoNotUse)},
  { 179, 186, sizeof(::protobuf_unittest::MapWellKnownTypes_Uint64FieldEntry_DoNotUse)},
  { 188, 195, sizeof(::protobuf_unittest::MapWellKnownTypes_Int32FieldEntry_DoNotUse)},
  { 197, 204, sizeof(::protobuf_unittest::MapWellKnownTypes_Uint32FieldEntry_DoNotUse)},
  { 206, 213, sizeof(::protobuf_unittest::MapWellKnownTypes_BoolFieldEntry_DoNotUse)},
  { 215, 222, sizeof(::protobuf_unittest::MapWellKnownTypes_StringFieldEntry_DoNotUse)},
  { 224, 231, sizeof(::protobuf_unittest::MapWellKnownTypes_BytesFieldEntry_DoNotUse)},
  { 233, -1, sizeof(::protobuf_unittest::MapWellKnownTypes)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_TestWellKnownTypes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_RepeatedWellKnownTypes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_OneofWellKnownTypes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_AnyFieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_ApiFieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_DurationFieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_EmptyFieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_SourceContextFieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_StructFieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_TimestampFieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_TypeFieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_DoubleFieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_FloatFieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_Int64FieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_Uint64FieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_Int32FieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_Uint32FieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_BoolFieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_StringFieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_BytesFieldEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_MapWellKnownTypes_default_instance_),
};

const char descriptor_table_protodef_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/google/protobuf/unittest_well_known_ty"
  "pes.proto\022\021protobuf_unittest\032\031google/pro"
  "tobuf/any.proto\032\031google/protobuf/api.pro"
  "to\032\036google/protobuf/duration.proto\032\033goog"
  "le/protobuf/empty.proto\032 google/protobuf"
  "/field_mask.proto\032$google/protobuf/sourc"
  "e_context.proto\032\034google/protobuf/struct."
  "proto\032\037google/protobuf/timestamp.proto\032\032"
  "google/protobuf/type.proto\032\036google/proto"
  "buf/wrappers.proto\"\276\007\n\022TestWellKnownType"
  "s\022\'\n\tany_field\030\001 \001(\0132\024.google.protobuf.A"
  "ny\022\'\n\tapi_field\030\002 \001(\0132\024.google.protobuf."
  "Api\0221\n\016duration_field\030\003 \001(\0132\031.google.pro"
  "tobuf.Duration\022+\n\013empty_field\030\004 \001(\0132\026.go"
  "ogle.protobuf.Empty\0224\n\020field_mask_field\030"
  "\005 \001(\0132\032.google.protobuf.FieldMask\022<\n\024sou"
  "rce_context_field\030\006 \001(\0132\036.google.protobu"
  "f.SourceContext\022-\n\014struct_field\030\007 \001(\0132\027."
  "google.protobuf.Struct\0223\n\017timestamp_fiel"
  "d\030\010 \001(\0132\032.google.protobuf.Timestamp\022)\n\nt"
  "ype_field\030\t \001(\0132\025.google.protobuf.Type\0222"
  "\n\014double_field\030\n \001(\0132\034.google.protobuf.D"
  "oubleValue\0220\n\013float_field\030\013 \001(\0132\033.google"
  ".protobuf.FloatValue\0220\n\013int64_field\030\014 \001("
  "\0132\033.google.protobuf.Int64Value\0222\n\014uint64"
  "_field\030\r \001(\0132\034.google.protobuf.UInt64Val"
  "ue\0220\n\013int32_field\030\016 \001(\0132\033.google.protobu"
  "f.Int32Value\0222\n\014uint32_field\030\017 \001(\0132\034.goo"
  "gle.protobuf.UInt32Value\022.\n\nbool_field\030\020"
  " \001(\0132\032.google.protobuf.BoolValue\0222\n\014stri"
  "ng_field\030\021 \001(\0132\034.google.protobuf.StringV"
  "alue\0220\n\013bytes_field\030\022 \001(\0132\033.google.proto"
  "buf.BytesValue\022+\n\013value_field\030\023 \001(\0132\026.go"
  "ogle.protobuf.Value\"\225\007\n\026RepeatedWellKnow"
  "nTypes\022\'\n\tany_field\030\001 \003(\0132\024.google.proto"
  "buf.Any\022\'\n\tapi_field\030\002 \003(\0132\024.google.prot"
  "obuf.Api\0221\n\016duration_field\030\003 \003(\0132\031.googl"
  "e.protobuf.Duration\022+\n\013empty_field\030\004 \003(\013"
  "2\026.google.protobuf.Empty\0224\n\020field_mask_f"
  "ield\030\005 \003(\0132\032.google.protobuf.FieldMask\022<"
  "\n\024source_context_field\030\006 \003(\0132\036.google.pr"
  "otobuf.SourceContext\022-\n\014struct_field\030\007 \003"
  "(\0132\027.google.protobuf.Struct\0223\n\017timestamp"
  "_field\030\010 \003(\0132\032.google.protobuf.Timestamp"
  "\022)\n\ntype_field\030\t \003(\0132\025.google.protobuf.T"
  "ype\0222\n\014double_field\030\n \003(\0132\034.google.proto"
  "buf.DoubleValue\0220\n\013float_field\030\013 \003(\0132\033.g"
  "oogle.protobuf.FloatValue\0220\n\013int64_field"
  "\030\014 \003(\0132\033.google.protobuf.Int64Value\0222\n\014u"
  "int64_field\030\r \003(\0132\034.google.protobuf.UInt"
  "64Value\0220\n\013int32_field\030\016 \003(\0132\033.google.pr"
  "otobuf.Int32Value\0222\n\014uint32_field\030\017 \003(\0132"
  "\034.google.protobuf.UInt32Value\022.\n\nbool_fi"
  "eld\030\020 \003(\0132\032.google.protobuf.BoolValue\0222\n"
  "\014string_field\030\021 \003(\0132\034.google.protobuf.St"
  "ringValue\0220\n\013bytes_field\030\022 \003(\0132\033.google."
  "protobuf.BytesValue\"\305\007\n\023OneofWellKnownTy"
  "pes\022)\n\tany_field\030\001 \001(\0132\024.google.protobuf"
  ".AnyH\000\022)\n\tapi_field\030\002 \001(\0132\024.google.proto"
  "buf.ApiH\000\0223\n\016duration_field\030\003 \001(\0132\031.goog"
  "le.protobuf.DurationH\000\022-\n\013empty_field\030\004 "
  "\001(\0132\026.google.protobuf.EmptyH\000\0226\n\020field_m"
  "ask_field\030\005 \001(\0132\032.google.protobuf.FieldM"
  "askH\000\022>\n\024source_context_field\030\006 \001(\0132\036.go"
  "ogle.protobuf.SourceContextH\000\022/\n\014struct_"
  "field\030\007 \001(\0132\027.google.protobuf.StructH\000\0225"
  "\n\017timestamp_field\030\010 \001(\0132\032.google.protobu"
  "f.TimestampH\000\022+\n\ntype_field\030\t \001(\0132\025.goog"
  "le.protobuf.TypeH\000\0224\n\014double_field\030\n \001(\013"
  "2\034.google.protobuf.DoubleValueH\000\0222\n\013floa"
  "t_field\030\013 \001(\0132\033.google.protobuf.FloatVal"
  "ueH\000\0222\n\013int64_field\030\014 \001(\0132\033.google.proto"
  "buf.Int64ValueH\000\0224\n\014uint64_field\030\r \001(\0132\034"
  ".google.protobuf.UInt64ValueH\000\0222\n\013int32_"
  "field\030\016 \001(\0132\033.google.protobuf.Int32Value"
  "H\000\0224\n\014uint32_field\030\017 \001(\0132\034.google.protob"
  "uf.UInt32ValueH\000\0220\n\nbool_field\030\020 \001(\0132\032.g"
  "oogle.protobuf.BoolValueH\000\0224\n\014string_fie"
  "ld\030\021 \001(\0132\034.google.protobuf.StringValueH\000"
  "\0222\n\013bytes_field\030\022 \001(\0132\033.google.protobuf."
  "BytesValueH\000B\r\n\013oneof_field\"\226\026\n\021MapWellK"
  "nownTypes\022E\n\tany_field\030\001 \003(\01322.protobuf_"
  "unittest.MapWellKnownTypes.AnyFieldEntry"
  "\022E\n\tapi_field\030\002 \003(\01322.protobuf_unittest."
  "MapWellKnownTypes.ApiFieldEntry\022O\n\016durat"
  "ion_field\030\003 \003(\01327.protobuf_unittest.MapW"
  "ellKnownTypes.DurationFieldEntry\022I\n\013empt"
  "y_field\030\004 \003(\01324.protobuf_unittest.MapWel"
  "lKnownTypes.EmptyFieldEntry\022R\n\020field_mas"
  "k_field\030\005 \003(\01328.protobuf_unittest.MapWel"
  "lKnownTypes.FieldMaskFieldEntry\022Z\n\024sourc"
  "e_context_field\030\006 \003(\0132<.protobuf_unittes"
  "t.MapWellKnownTypes.SourceContextFieldEn"
  "try\022K\n\014struct_field\030\007 \003(\01325.protobuf_uni"
  "ttest.MapWellKnownTypes.StructFieldEntry"
  "\022Q\n\017timestamp_field\030\010 \003(\01328.protobuf_uni"
  "ttest.MapWellKnownTypes.TimestampFieldEn"
  "try\022G\n\ntype_field\030\t \003(\01323.protobuf_unitt"
  "est.MapWellKnownTypes.TypeFieldEntry\022K\n\014"
  "double_field\030\n \003(\01325.protobuf_unittest.M"
  "apWellKnownTypes.DoubleFieldEntry\022I\n\013flo"
  "at_field\030\013 \003(\01324.protobuf_unittest.MapWe"
  "llKnownTypes.FloatFieldEntry\022I\n\013int64_fi"
  "eld\030\014 \003(\01324.protobuf_unittest.MapWellKno"
  "wnTypes.Int64FieldEntry\022K\n\014uint64_field\030"
  "\r \003(\01325.protobuf_unittest.MapWellKnownTy"
  "pes.Uint64FieldEntry\022I\n\013int32_field\030\016 \003("
  "\01324.protobuf_unittest.MapWellKnownTypes."
  "Int32FieldEntry\022K\n\014uint32_field\030\017 \003(\01325."
  "protobuf_unittest.MapWellKnownTypes.Uint"
  "32FieldEntry\022G\n\nbool_field\030\020 \003(\01323.proto"
  "buf_unittest.MapWellKnownTypes.BoolField"
  "Entry\022K\n\014string_field\030\021 \003(\01325.protobuf_u"
  "nittest.MapWellKnownTypes.StringFieldEnt"
  "ry\022I\n\013bytes_field\030\022 \003(\01324.protobuf_unitt"
  "est.MapWellKnownTypes.BytesFieldEntry\032E\n"
  "\rAnyFieldEntry\022\013\n\003key\030\001 \001(\005\022#\n\005value\030\002 \001"
  "(\0132\024.google.protobuf.Any:\0028\001\032E\n\rApiField"
  "Entry\022\013\n\003key\030\001 \001(\005\022#\n\005value\030\002 \001(\0132\024.goog"
  "le.protobuf.Api:\0028\001\032O\n\022DurationFieldEntr"
  "y\022\013\n\003key\030\001 \001(\005\022(\n\005value\030\002 \001(\0132\031.google.p"
  "rotobuf.Duration:\0028\001\032I\n\017EmptyFieldEntry\022"
  "\013\n\003key\030\001 \001(\005\022%\n\005value\030\002 \001(\0132\026.google.pro"
  "tobuf.Empty:\0028\001\032Q\n\023FieldMaskFieldEntry\022\013"
  "\n\003key\030\001 \001(\005\022)\n\005value\030\002 \001(\0132\032.google.prot"
  "obuf.FieldMask:\0028\001\032Y\n\027SourceContextField"
  "Entry\022\013\n\003key\030\001 \001(\005\022-\n\005value\030\002 \001(\0132\036.goog"
  "le.protobuf.SourceContext:\0028\001\032K\n\020StructF"
  "ieldEntry\022\013\n\003key\030\001 \001(\005\022&\n\005value\030\002 \001(\0132\027."
  "google.protobuf.Struct:\0028\001\032Q\n\023TimestampF"
  "ieldEntry\022\013\n\003key\030\001 \001(\005\022)\n\005value\030\002 \001(\0132\032."
  "google.protobuf.Timestamp:\0028\001\032G\n\016TypeFie"
  "ldEntry\022\013\n\003key\030\001 \001(\005\022$\n\005value\030\002 \001(\0132\025.go"
  "ogle.protobuf.Type:\0028\001\032P\n\020DoubleFieldEnt"
  "ry\022\013\n\003key\030\001 \001(\005\022+\n\005value\030\002 \001(\0132\034.google."
  "protobuf.DoubleValue:\0028\001\032N\n\017FloatFieldEn"
  "try\022\013\n\003key\030\001 \001(\005\022*\n\005value\030\002 \001(\0132\033.google"
  ".protobuf.FloatValue:\0028\001\032N\n\017Int64FieldEn"
  "try\022\013\n\003key\030\001 \001(\005\022*\n\005value\030\002 \001(\0132\033.google"
  ".protobuf.Int64Value:\0028\001\032P\n\020Uint64FieldE"
  "ntry\022\013\n\003key\030\001 \001(\005\022+\n\005value\030\002 \001(\0132\034.googl"
  "e.protobuf.UInt64Value:\0028\001\032N\n\017Int32Field"
  "Entry\022\013\n\003key\030\001 \001(\005\022*\n\005value\030\002 \001(\0132\033.goog"
  "le.protobuf.Int32Value:\0028\001\032P\n\020Uint32Fiel"
  "dEntry\022\013\n\003key\030\001 \001(\005\022+\n\005value\030\002 \001(\0132\034.goo"
  "gle.protobuf.UInt32Value:\0028\001\032L\n\016BoolFiel"
  "dEntry\022\013\n\003key\030\001 \001(\005\022)\n\005value\030\002 \001(\0132\032.goo"
  "gle.protobuf.BoolValue:\0028\001\032P\n\020StringFiel"
  "dEntry\022\013\n\003key\030\001 \001(\005\022+\n\005value\030\002 \001(\0132\034.goo"
  "gle.protobuf.StringValue:\0028\001\032N\n\017BytesFie"
  "ldEntry\022\013\n\003key\030\001 \001(\005\022*\n\005value\030\002 \001(\0132\033.go"
  "ogle.protobuf.BytesValue:\0028\001B9\n\030com.goog"
  "le.protobuf.testP\001\252\002\032Google.Protobuf.Tes"
  "tProtosb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto_deps[10] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fapi_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  &::descriptor_table_google_2fprotobuf_2fsource_5fcontext_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftype_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto_sccs[22] = {
  &scc_info_MapWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_AnyFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_ApiFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_BoolFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_BytesFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_DoubleFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_DurationFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_EmptyFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_FloatFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_Int32FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_Int64FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_SourceContextFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_StringFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_StructFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_TimestampFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_TypeFieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_Uint32FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_MapWellKnownTypes_Uint64FieldEntry_DoNotUse_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_OneofWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_RepeatedWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
  &scc_info_TestWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto_once;
static bool descriptor_table_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto = {
  &descriptor_table_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto_initialized, descriptor_table_protodef_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto, "google/protobuf/unittest_well_known_types.proto", 6135,
  &descriptor_table_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto_once, descriptor_table_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto_sccs, descriptor_table_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto_deps, 22, 10,
  schemas, file_default_instances, TableStruct_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto::offsets,
  file_level_metadata_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto, 22, file_level_enum_descriptors_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto, file_level_service_descriptors_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto), true);
namespace protobuf_unittest {

// ===================================================================

void TestWellKnownTypes::InitAsDefaultInstance() {
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->any_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->api_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Api*>(
      PROTOBUF_NAMESPACE_ID::Api::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->duration_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Duration*>(
      PROTOBUF_NAMESPACE_ID::Duration::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->empty_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Empty*>(
      PROTOBUF_NAMESPACE_ID::Empty::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->field_mask_field_ = const_cast< PROTOBUF_NAMESPACE_ID::FieldMask*>(
      PROTOBUF_NAMESPACE_ID::FieldMask::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->source_context_field_ = const_cast< PROTOBUF_NAMESPACE_ID::SourceContext*>(
      PROTOBUF_NAMESPACE_ID::SourceContext::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->struct_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->timestamp_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->type_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Type*>(
      PROTOBUF_NAMESPACE_ID::Type::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->double_field_ = const_cast< PROTOBUF_NAMESPACE_ID::DoubleValue*>(
      PROTOBUF_NAMESPACE_ID::DoubleValue::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->float_field_ = const_cast< PROTOBUF_NAMESPACE_ID::FloatValue*>(
      PROTOBUF_NAMESPACE_ID::FloatValue::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->int64_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Int64Value*>(
      PROTOBUF_NAMESPACE_ID::Int64Value::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->uint64_field_ = const_cast< PROTOBUF_NAMESPACE_ID::UInt64Value*>(
      PROTOBUF_NAMESPACE_ID::UInt64Value::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->int32_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Int32Value*>(
      PROTOBUF_NAMESPACE_ID::Int32Value::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->uint32_field_ = const_cast< PROTOBUF_NAMESPACE_ID::UInt32Value*>(
      PROTOBUF_NAMESPACE_ID::UInt32Value::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->bool_field_ = const_cast< PROTOBUF_NAMESPACE_ID::BoolValue*>(
      PROTOBUF_NAMESPACE_ID::BoolValue::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->string_field_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->bytes_field_ = const_cast< PROTOBUF_NAMESPACE_ID::BytesValue*>(
      PROTOBUF_NAMESPACE_ID::BytesValue::internal_default_instance());
  ::protobuf_unittest::_TestWellKnownTypes_default_instance_._instance.get_mutable()->value_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Value*>(
      PROTOBUF_NAMESPACE_ID::Value::internal_default_instance());
}
class TestWellKnownTypes::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& any_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Api& api_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& duration_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Empty& empty_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::FieldMask& field_mask_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::SourceContext& source_context_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Struct& struct_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& timestamp_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Type& type_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::DoubleValue& double_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::FloatValue& float_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Int64Value& int64_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::UInt64Value& uint64_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Int32Value& int32_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::UInt32Value& uint32_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::BoolValue& bool_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& string_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::BytesValue& bytes_field(const TestWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Value& value_field(const TestWellKnownTypes* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
TestWellKnownTypes::_Internal::any_field(const TestWellKnownTypes* msg) {
  return *msg->any_field_;
}
const PROTOBUF_NAMESPACE_ID::Api&
TestWellKnownTypes::_Internal::api_field(const TestWellKnownTypes* msg) {
  return *msg->api_field_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
TestWellKnownTypes::_Internal::duration_field(const TestWellKnownTypes* msg) {
  return *msg->duration_field_;
}
const PROTOBUF_NAMESPACE_ID::Empty&
TestWellKnownTypes::_Internal::empty_field(const TestWellKnownTypes* msg) {
  return *msg->empty_field_;
}
const PROTOBUF_NAMESPACE_ID::FieldMask&
TestWellKnownTypes::_Internal::field_mask_field(const TestWellKnownTypes* msg) {
  return *msg->field_mask_field_;
}
const PROTOBUF_NAMESPACE_ID::SourceContext&
TestWellKnownTypes::_Internal::source_context_field(const TestWellKnownTypes* msg) {
  return *msg->source_context_field_;
}
const PROTOBUF_NAMESPACE_ID::Struct&
TestWellKnownTypes::_Internal::struct_field(const TestWellKnownTypes* msg) {
  return *msg->struct_field_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
TestWellKnownTypes::_Internal::timestamp_field(const TestWellKnownTypes* msg) {
  return *msg->timestamp_field_;
}
const PROTOBUF_NAMESPACE_ID::Type&
TestWellKnownTypes::_Internal::type_field(const TestWellKnownTypes* msg) {
  return *msg->type_field_;
}
const PROTOBUF_NAMESPACE_ID::DoubleValue&
TestWellKnownTypes::_Internal::double_field(const TestWellKnownTypes* msg) {
  return *msg->double_field_;
}
const PROTOBUF_NAMESPACE_ID::FloatValue&
TestWellKnownTypes::_Internal::float_field(const TestWellKnownTypes* msg) {
  return *msg->float_field_;
}
const PROTOBUF_NAMESPACE_ID::Int64Value&
TestWellKnownTypes::_Internal::int64_field(const TestWellKnownTypes* msg) {
  return *msg->int64_field_;
}
const PROTOBUF_NAMESPACE_ID::UInt64Value&
TestWellKnownTypes::_Internal::uint64_field(const TestWellKnownTypes* msg) {
  return *msg->uint64_field_;
}
const PROTOBUF_NAMESPACE_ID::Int32Value&
TestWellKnownTypes::_Internal::int32_field(const TestWellKnownTypes* msg) {
  return *msg->int32_field_;
}
const PROTOBUF_NAMESPACE_ID::UInt32Value&
TestWellKnownTypes::_Internal::uint32_field(const TestWellKnownTypes* msg) {
  return *msg->uint32_field_;
}
const PROTOBUF_NAMESPACE_ID::BoolValue&
TestWellKnownTypes::_Internal::bool_field(const TestWellKnownTypes* msg) {
  return *msg->bool_field_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
TestWellKnownTypes::_Internal::string_field(const TestWellKnownTypes* msg) {
  return *msg->string_field_;
}
const PROTOBUF_NAMESPACE_ID::BytesValue&
TestWellKnownTypes::_Internal::bytes_field(const TestWellKnownTypes* msg) {
  return *msg->bytes_field_;
}
const PROTOBUF_NAMESPACE_ID::Value&
TestWellKnownTypes::_Internal::value_field(const TestWellKnownTypes* msg) {
  return *msg->value_field_;
}
void TestWellKnownTypes::clear_any_field() {
  if (GetArenaNoVirtual() == nullptr && any_field_ != nullptr) {
    delete any_field_;
  }
  any_field_ = nullptr;
}
void TestWellKnownTypes::clear_api_field() {
  if (GetArenaNoVirtual() == nullptr && api_field_ != nullptr) {
    delete api_field_;
  }
  api_field_ = nullptr;
}
void TestWellKnownTypes::clear_duration_field() {
  if (GetArenaNoVirtual() == nullptr && duration_field_ != nullptr) {
    delete duration_field_;
  }
  duration_field_ = nullptr;
}
void TestWellKnownTypes::clear_empty_field() {
  if (GetArenaNoVirtual() == nullptr && empty_field_ != nullptr) {
    delete empty_field_;
  }
  empty_field_ = nullptr;
}
void TestWellKnownTypes::clear_field_mask_field() {
  if (GetArenaNoVirtual() == nullptr && field_mask_field_ != nullptr) {
    delete field_mask_field_;
  }
  field_mask_field_ = nullptr;
}
void TestWellKnownTypes::clear_source_context_field() {
  if (GetArenaNoVirtual() == nullptr && source_context_field_ != nullptr) {
    delete source_context_field_;
  }
  source_context_field_ = nullptr;
}
void TestWellKnownTypes::clear_struct_field() {
  if (GetArenaNoVirtual() == nullptr && struct_field_ != nullptr) {
    delete struct_field_;
  }
  struct_field_ = nullptr;
}
void TestWellKnownTypes::clear_timestamp_field() {
  if (GetArenaNoVirtual() == nullptr && timestamp_field_ != nullptr) {
    delete timestamp_field_;
  }
  timestamp_field_ = nullptr;
}
void TestWellKnownTypes::clear_type_field() {
  if (GetArenaNoVirtual() == nullptr && type_field_ != nullptr) {
    delete type_field_;
  }
  type_field_ = nullptr;
}
void TestWellKnownTypes::clear_double_field() {
  if (GetArenaNoVirtual() == nullptr && double_field_ != nullptr) {
    delete double_field_;
  }
  double_field_ = nullptr;
}
void TestWellKnownTypes::clear_float_field() {
  if (GetArenaNoVirtual() == nullptr && float_field_ != nullptr) {
    delete float_field_;
  }
  float_field_ = nullptr;
}
void TestWellKnownTypes::clear_int64_field() {
  if (GetArenaNoVirtual() == nullptr && int64_field_ != nullptr) {
    delete int64_field_;
  }
  int64_field_ = nullptr;
}
void TestWellKnownTypes::clear_uint64_field() {
  if (GetArenaNoVirtual() == nullptr && uint64_field_ != nullptr) {
    delete uint64_field_;
  }
  uint64_field_ = nullptr;
}
void TestWellKnownTypes::clear_int32_field() {
  if (GetArenaNoVirtual() == nullptr && int32_field_ != nullptr) {
    delete int32_field_;
  }
  int32_field_ = nullptr;
}
void TestWellKnownTypes::clear_uint32_field() {
  if (GetArenaNoVirtual() == nullptr && uint32_field_ != nullptr) {
    delete uint32_field_;
  }
  uint32_field_ = nullptr;
}
void TestWellKnownTypes::clear_bool_field() {
  if (GetArenaNoVirtual() == nullptr && bool_field_ != nullptr) {
    delete bool_field_;
  }
  bool_field_ = nullptr;
}
void TestWellKnownTypes::clear_string_field() {
  if (GetArenaNoVirtual() == nullptr && string_field_ != nullptr) {
    delete string_field_;
  }
  string_field_ = nullptr;
}
void TestWellKnownTypes::clear_bytes_field() {
  if (GetArenaNoVirtual() == nullptr && bytes_field_ != nullptr) {
    delete bytes_field_;
  }
  bytes_field_ = nullptr;
}
void TestWellKnownTypes::clear_value_field() {
  if (GetArenaNoVirtual() == nullptr && value_field_ != nullptr) {
    delete value_field_;
  }
  value_field_ = nullptr;
}
TestWellKnownTypes::TestWellKnownTypes()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestWellKnownTypes)
}
TestWellKnownTypes::TestWellKnownTypes(const TestWellKnownTypes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_any_field()) {
    any_field_ = new PROTOBUF_NAMESPACE_ID::Any(*from.any_field_);
  } else {
    any_field_ = nullptr;
  }
  if (from.has_api_field()) {
    api_field_ = new PROTOBUF_NAMESPACE_ID::Api(*from.api_field_);
  } else {
    api_field_ = nullptr;
  }
  if (from.has_duration_field()) {
    duration_field_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.duration_field_);
  } else {
    duration_field_ = nullptr;
  }
  if (from.has_empty_field()) {
    empty_field_ = new PROTOBUF_NAMESPACE_ID::Empty(*from.empty_field_);
  } else {
    empty_field_ = nullptr;
  }
  if (from.has_field_mask_field()) {
    field_mask_field_ = new PROTOBUF_NAMESPACE_ID::FieldMask(*from.field_mask_field_);
  } else {
    field_mask_field_ = nullptr;
  }
  if (from.has_source_context_field()) {
    source_context_field_ = new PROTOBUF_NAMESPACE_ID::SourceContext(*from.source_context_field_);
  } else {
    source_context_field_ = nullptr;
  }
  if (from.has_struct_field()) {
    struct_field_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.struct_field_);
  } else {
    struct_field_ = nullptr;
  }
  if (from.has_timestamp_field()) {
    timestamp_field_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.timestamp_field_);
  } else {
    timestamp_field_ = nullptr;
  }
  if (from.has_type_field()) {
    type_field_ = new PROTOBUF_NAMESPACE_ID::Type(*from.type_field_);
  } else {
    type_field_ = nullptr;
  }
  if (from.has_double_field()) {
    double_field_ = new PROTOBUF_NAMESPACE_ID::DoubleValue(*from.double_field_);
  } else {
    double_field_ = nullptr;
  }
  if (from.has_float_field()) {
    float_field_ = new PROTOBUF_NAMESPACE_ID::FloatValue(*from.float_field_);
  } else {
    float_field_ = nullptr;
  }
  if (from.has_int64_field()) {
    int64_field_ = new PROTOBUF_NAMESPACE_ID::Int64Value(*from.int64_field_);
  } else {
    int64_field_ = nullptr;
  }
  if (from.has_uint64_field()) {
    uint64_field_ = new PROTOBUF_NAMESPACE_ID::UInt64Value(*from.uint64_field_);
  } else {
    uint64_field_ = nullptr;
  }
  if (from.has_int32_field()) {
    int32_field_ = new PROTOBUF_NAMESPACE_ID::Int32Value(*from.int32_field_);
  } else {
    int32_field_ = nullptr;
  }
  if (from.has_uint32_field()) {
    uint32_field_ = new PROTOBUF_NAMESPACE_ID::UInt32Value(*from.uint32_field_);
  } else {
    uint32_field_ = nullptr;
  }
  if (from.has_bool_field()) {
    bool_field_ = new PROTOBUF_NAMESPACE_ID::BoolValue(*from.bool_field_);
  } else {
    bool_field_ = nullptr;
  }
  if (from.has_string_field()) {
    string_field_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.string_field_);
  } else {
    string_field_ = nullptr;
  }
  if (from.has_bytes_field()) {
    bytes_field_ = new PROTOBUF_NAMESPACE_ID::BytesValue(*from.bytes_field_);
  } else {
    bytes_field_ = nullptr;
  }
  if (from.has_value_field()) {
    value_field_ = new PROTOBUF_NAMESPACE_ID::Value(*from.value_field_);
  } else {
    value_field_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestWellKnownTypes)
}

void TestWellKnownTypes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TestWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base);
  ::memset(&any_field_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_field_) -
      reinterpret_cast<char*>(&any_field_)) + sizeof(value_field_));
}

TestWellKnownTypes::~TestWellKnownTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestWellKnownTypes)
  SharedDtor();
}

void TestWellKnownTypes::SharedDtor() {
  if (this != internal_default_instance()) delete any_field_;
  if (this != internal_default_instance()) delete api_field_;
  if (this != internal_default_instance()) delete duration_field_;
  if (this != internal_default_instance()) delete empty_field_;
  if (this != internal_default_instance()) delete field_mask_field_;
  if (this != internal_default_instance()) delete source_context_field_;
  if (this != internal_default_instance()) delete struct_field_;
  if (this != internal_default_instance()) delete timestamp_field_;
  if (this != internal_default_instance()) delete type_field_;
  if (this != internal_default_instance()) delete double_field_;
  if (this != internal_default_instance()) delete float_field_;
  if (this != internal_default_instance()) delete int64_field_;
  if (this != internal_default_instance()) delete uint64_field_;
  if (this != internal_default_instance()) delete int32_field_;
  if (this != internal_default_instance()) delete uint32_field_;
  if (this != internal_default_instance()) delete bool_field_;
  if (this != internal_default_instance()) delete string_field_;
  if (this != internal_default_instance()) delete bytes_field_;
  if (this != internal_default_instance()) delete value_field_;
}

void TestWellKnownTypes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestWellKnownTypes& TestWellKnownTypes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base);
  return *internal_default_instance();
}


void TestWellKnownTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestWellKnownTypes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && any_field_ != nullptr) {
    delete any_field_;
  }
  any_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && api_field_ != nullptr) {
    delete api_field_;
  }
  api_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && duration_field_ != nullptr) {
    delete duration_field_;
  }
  duration_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && empty_field_ != nullptr) {
    delete empty_field_;
  }
  empty_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && field_mask_field_ != nullptr) {
    delete field_mask_field_;
  }
  field_mask_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && source_context_field_ != nullptr) {
    delete source_context_field_;
  }
  source_context_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && struct_field_ != nullptr) {
    delete struct_field_;
  }
  struct_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && timestamp_field_ != nullptr) {
    delete timestamp_field_;
  }
  timestamp_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && type_field_ != nullptr) {
    delete type_field_;
  }
  type_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && double_field_ != nullptr) {
    delete double_field_;
  }
  double_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && float_field_ != nullptr) {
    delete float_field_;
  }
  float_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && int64_field_ != nullptr) {
    delete int64_field_;
  }
  int64_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && uint64_field_ != nullptr) {
    delete uint64_field_;
  }
  uint64_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && int32_field_ != nullptr) {
    delete int32_field_;
  }
  int32_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && uint32_field_ != nullptr) {
    delete uint32_field_;
  }
  uint32_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && bool_field_ != nullptr) {
    delete bool_field_;
  }
  bool_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && string_field_ != nullptr) {
    delete string_field_;
  }
  string_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && bytes_field_ != nullptr) {
    delete bytes_field_;
  }
  bytes_field_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && value_field_ != nullptr) {
    delete value_field_;
  }
  value_field_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestWellKnownTypes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Any any_field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_any_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Api api_field = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_api_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration duration_field = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_duration_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Empty empty_field = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_empty_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask field_mask_field = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_field_mask_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.SourceContext source_context_field = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_source_context_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct struct_field = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_struct_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp timestamp_field = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(mutable_timestamp_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Type type_field = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_type_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue double_field = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_double_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FloatValue float_field = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(mutable_float_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Int64Value int64_field = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(mutable_int64_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.UInt64Value uint64_field = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(mutable_uint64_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Int32Value int32_field = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(mutable_int32_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.UInt32Value uint32_field = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(mutable_uint32_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue bool_field = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(mutable_bool_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue string_field = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(mutable_string_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.BytesValue bytes_field = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(mutable_bytes_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Value value_field = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(mutable_value_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestWellKnownTypes::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestWellKnownTypes)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any any_field = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_any_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Api api_field = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_api_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration duration_field = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_duration_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Empty empty_field = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_empty_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask field_mask_field = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_field_mask_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.SourceContext source_context_field = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_source_context_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct struct_field = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp timestamp_field = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Type type_field = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_type_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue double_field = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_double_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FloatValue float_field = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_float_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value int64_field = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_int64_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt64Value uint64_field = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_uint64_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value int32_field = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (114 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_int32_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt32Value uint32_field = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (122 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_uint32_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue bool_field = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (130 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_bool_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue string_field = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (138 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_string_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BytesValue bytes_field = 18;
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (146 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_bytes_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value value_field = 19;
      case 19: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (154 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_value_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestWellKnownTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestWellKnownTypes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestWellKnownTypes::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestWellKnownTypes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any any_field = 1;
  if (this->has_any_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::any_field(this), output);
  }

  // .google.protobuf.Api api_field = 2;
  if (this->has_api_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::api_field(this), output);
  }

  // .google.protobuf.Duration duration_field = 3;
  if (this->has_duration_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::duration_field(this), output);
  }

  // .google.protobuf.Empty empty_field = 4;
  if (this->has_empty_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::empty_field(this), output);
  }

  // .google.protobuf.FieldMask field_mask_field = 5;
  if (this->has_field_mask_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::field_mask_field(this), output);
  }

  // .google.protobuf.SourceContext source_context_field = 6;
  if (this->has_source_context_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::source_context_field(this), output);
  }

  // .google.protobuf.Struct struct_field = 7;
  if (this->has_struct_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::struct_field(this), output);
  }

  // .google.protobuf.Timestamp timestamp_field = 8;
  if (this->has_timestamp_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, _Internal::timestamp_field(this), output);
  }

  // .google.protobuf.Type type_field = 9;
  if (this->has_type_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, _Internal::type_field(this), output);
  }

  // .google.protobuf.DoubleValue double_field = 10;
  if (this->has_double_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, _Internal::double_field(this), output);
  }

  // .google.protobuf.FloatValue float_field = 11;
  if (this->has_float_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, _Internal::float_field(this), output);
  }

  // .google.protobuf.Int64Value int64_field = 12;
  if (this->has_int64_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, _Internal::int64_field(this), output);
  }

  // .google.protobuf.UInt64Value uint64_field = 13;
  if (this->has_uint64_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, _Internal::uint64_field(this), output);
  }

  // .google.protobuf.Int32Value int32_field = 14;
  if (this->has_int32_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, _Internal::int32_field(this), output);
  }

  // .google.protobuf.UInt32Value uint32_field = 15;
  if (this->has_uint32_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, _Internal::uint32_field(this), output);
  }

  // .google.protobuf.BoolValue bool_field = 16;
  if (this->has_bool_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, _Internal::bool_field(this), output);
  }

  // .google.protobuf.StringValue string_field = 17;
  if (this->has_string_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, _Internal::string_field(this), output);
  }

  // .google.protobuf.BytesValue bytes_field = 18;
  if (this->has_bytes_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, _Internal::bytes_field(this), output);
  }

  // .google.protobuf.Value value_field = 19;
  if (this->has_value_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, _Internal::value_field(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestWellKnownTypes)
}

::PROTOBUF_NAMESPACE_ID::uint8* TestWellKnownTypes::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestWellKnownTypes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any any_field = 1;
  if (this->has_any_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::any_field(this), target);
  }

  // .google.protobuf.Api api_field = 2;
  if (this->has_api_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::api_field(this), target);
  }

  // .google.protobuf.Duration duration_field = 3;
  if (this->has_duration_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::duration_field(this), target);
  }

  // .google.protobuf.Empty empty_field = 4;
  if (this->has_empty_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::empty_field(this), target);
  }

  // .google.protobuf.FieldMask field_mask_field = 5;
  if (this->has_field_mask_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::field_mask_field(this), target);
  }

  // .google.protobuf.SourceContext source_context_field = 6;
  if (this->has_source_context_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::source_context_field(this), target);
  }

  // .google.protobuf.Struct struct_field = 7;
  if (this->has_struct_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::struct_field(this), target);
  }

  // .google.protobuf.Timestamp timestamp_field = 8;
  if (this->has_timestamp_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::timestamp_field(this), target);
  }

  // .google.protobuf.Type type_field = 9;
  if (this->has_type_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::type_field(this), target);
  }

  // .google.protobuf.DoubleValue double_field = 10;
  if (this->has_double_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, _Internal::double_field(this), target);
  }

  // .google.protobuf.FloatValue float_field = 11;
  if (this->has_float_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, _Internal::float_field(this), target);
  }

  // .google.protobuf.Int64Value int64_field = 12;
  if (this->has_int64_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, _Internal::int64_field(this), target);
  }

  // .google.protobuf.UInt64Value uint64_field = 13;
  if (this->has_uint64_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, _Internal::uint64_field(this), target);
  }

  // .google.protobuf.Int32Value int32_field = 14;
  if (this->has_int32_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, _Internal::int32_field(this), target);
  }

  // .google.protobuf.UInt32Value uint32_field = 15;
  if (this->has_uint32_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, _Internal::uint32_field(this), target);
  }

  // .google.protobuf.BoolValue bool_field = 16;
  if (this->has_bool_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, _Internal::bool_field(this), target);
  }

  // .google.protobuf.StringValue string_field = 17;
  if (this->has_string_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, _Internal::string_field(this), target);
  }

  // .google.protobuf.BytesValue bytes_field = 18;
  if (this->has_bytes_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, _Internal::bytes_field(this), target);
  }

  // .google.protobuf.Value value_field = 19;
  if (this->has_value_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, _Internal::value_field(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestWellKnownTypes)
  return target;
}

size_t TestWellKnownTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestWellKnownTypes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any any_field = 1;
  if (this->has_any_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *any_field_);
  }

  // .google.protobuf.Api api_field = 2;
  if (this->has_api_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *api_field_);
  }

  // .google.protobuf.Duration duration_field = 3;
  if (this->has_duration_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *duration_field_);
  }

  // .google.protobuf.Empty empty_field = 4;
  if (this->has_empty_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *empty_field_);
  }

  // .google.protobuf.FieldMask field_mask_field = 5;
  if (this->has_field_mask_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *field_mask_field_);
  }

  // .google.protobuf.SourceContext source_context_field = 6;
  if (this->has_source_context_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_context_field_);
  }

  // .google.protobuf.Struct struct_field = 7;
  if (this->has_struct_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *struct_field_);
  }

  // .google.protobuf.Timestamp timestamp_field = 8;
  if (this->has_timestamp_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *timestamp_field_);
  }

  // .google.protobuf.Type type_field = 9;
  if (this->has_type_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *type_field_);
  }

  // .google.protobuf.DoubleValue double_field = 10;
  if (this->has_double_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *double_field_);
  }

  // .google.protobuf.FloatValue float_field = 11;
  if (this->has_float_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *float_field_);
  }

  // .google.protobuf.Int64Value int64_field = 12;
  if (this->has_int64_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *int64_field_);
  }

  // .google.protobuf.UInt64Value uint64_field = 13;
  if (this->has_uint64_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *uint64_field_);
  }

  // .google.protobuf.Int32Value int32_field = 14;
  if (this->has_int32_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *int32_field_);
  }

  // .google.protobuf.UInt32Value uint32_field = 15;
  if (this->has_uint32_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *uint32_field_);
  }

  // .google.protobuf.BoolValue bool_field = 16;
  if (this->has_bool_field()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bool_field_);
  }

  // .google.protobuf.StringValue string_field = 17;
  if (this->has_string_field()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *string_field_);
  }

  // .google.protobuf.BytesValue bytes_field = 18;
  if (this->has_bytes_field()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bytes_field_);
  }

  // .google.protobuf.Value value_field = 19;
  if (this->has_value_field()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_field_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestWellKnownTypes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestWellKnownTypes)
  GOOGLE_DCHECK_NE(&from, this);
  const TestWellKnownTypes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestWellKnownTypes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestWellKnownTypes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestWellKnownTypes)
    MergeFrom(*source);
  }
}

void TestWellKnownTypes::MergeFrom(const TestWellKnownTypes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestWellKnownTypes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_any_field()) {
    mutable_any_field()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from.any_field());
  }
  if (from.has_api_field()) {
    mutable_api_field()->PROTOBUF_NAMESPACE_ID::Api::MergeFrom(from.api_field());
  }
  if (from.has_duration_field()) {
    mutable_duration_field()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from.duration_field());
  }
  if (from.has_empty_field()) {
    mutable_empty_field()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from.empty_field());
  }
  if (from.has_field_mask_field()) {
    mutable_field_mask_field()->PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from.field_mask_field());
  }
  if (from.has_source_context_field()) {
    mutable_source_context_field()->PROTOBUF_NAMESPACE_ID::SourceContext::MergeFrom(from.source_context_field());
  }
  if (from.has_struct_field()) {
    mutable_struct_field()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from.struct_field());
  }
  if (from.has_timestamp_field()) {
    mutable_timestamp_field()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from.timestamp_field());
  }
  if (from.has_type_field()) {
    mutable_type_field()->PROTOBUF_NAMESPACE_ID::Type::MergeFrom(from.type_field());
  }
  if (from.has_double_field()) {
    mutable_double_field()->PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(from.double_field());
  }
  if (from.has_float_field()) {
    mutable_float_field()->PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(from.float_field());
  }
  if (from.has_int64_field()) {
    mutable_int64_field()->PROTOBUF_NAMESPACE_ID::Int64Value::MergeFrom(from.int64_field());
  }
  if (from.has_uint64_field()) {
    mutable_uint64_field()->PROTOBUF_NAMESPACE_ID::UInt64Value::MergeFrom(from.uint64_field());
  }
  if (from.has_int32_field()) {
    mutable_int32_field()->PROTOBUF_NAMESPACE_ID::Int32Value::MergeFrom(from.int32_field());
  }
  if (from.has_uint32_field()) {
    mutable_uint32_field()->PROTOBUF_NAMESPACE_ID::UInt32Value::MergeFrom(from.uint32_field());
  }
  if (from.has_bool_field()) {
    mutable_bool_field()->PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from.bool_field());
  }
  if (from.has_string_field()) {
    mutable_string_field()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from.string_field());
  }
  if (from.has_bytes_field()) {
    mutable_bytes_field()->PROTOBUF_NAMESPACE_ID::BytesValue::MergeFrom(from.bytes_field());
  }
  if (from.has_value_field()) {
    mutable_value_field()->PROTOBUF_NAMESPACE_ID::Value::MergeFrom(from.value_field());
  }
}

void TestWellKnownTypes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestWellKnownTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestWellKnownTypes::CopyFrom(const TestWellKnownTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestWellKnownTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestWellKnownTypes::IsInitialized() const {
  return true;
}

void TestWellKnownTypes::InternalSwap(TestWellKnownTypes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(any_field_, other->any_field_);
  swap(api_field_, other->api_field_);
  swap(duration_field_, other->duration_field_);
  swap(empty_field_, other->empty_field_);
  swap(field_mask_field_, other->field_mask_field_);
  swap(source_context_field_, other->source_context_field_);
  swap(struct_field_, other->struct_field_);
  swap(timestamp_field_, other->timestamp_field_);
  swap(type_field_, other->type_field_);
  swap(double_field_, other->double_field_);
  swap(float_field_, other->float_field_);
  swap(int64_field_, other->int64_field_);
  swap(uint64_field_, other->uint64_field_);
  swap(int32_field_, other->int32_field_);
  swap(uint32_field_, other->uint32_field_);
  swap(bool_field_, other->bool_field_);
  swap(string_field_, other->string_field_);
  swap(bytes_field_, other->bytes_field_);
  swap(value_field_, other->value_field_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestWellKnownTypes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RepeatedWellKnownTypes::InitAsDefaultInstance() {
}
class RepeatedWellKnownTypes::_Internal {
 public:
};

void RepeatedWellKnownTypes::clear_any_field() {
  any_field_.Clear();
}
void RepeatedWellKnownTypes::clear_api_field() {
  api_field_.Clear();
}
void RepeatedWellKnownTypes::clear_duration_field() {
  duration_field_.Clear();
}
void RepeatedWellKnownTypes::clear_empty_field() {
  empty_field_.Clear();
}
void RepeatedWellKnownTypes::clear_field_mask_field() {
  field_mask_field_.Clear();
}
void RepeatedWellKnownTypes::clear_source_context_field() {
  source_context_field_.Clear();
}
void RepeatedWellKnownTypes::clear_struct_field() {
  struct_field_.Clear();
}
void RepeatedWellKnownTypes::clear_timestamp_field() {
  timestamp_field_.Clear();
}
void RepeatedWellKnownTypes::clear_type_field() {
  type_field_.Clear();
}
void RepeatedWellKnownTypes::clear_double_field() {
  double_field_.Clear();
}
void RepeatedWellKnownTypes::clear_float_field() {
  float_field_.Clear();
}
void RepeatedWellKnownTypes::clear_int64_field() {
  int64_field_.Clear();
}
void RepeatedWellKnownTypes::clear_uint64_field() {
  uint64_field_.Clear();
}
void RepeatedWellKnownTypes::clear_int32_field() {
  int32_field_.Clear();
}
void RepeatedWellKnownTypes::clear_uint32_field() {
  uint32_field_.Clear();
}
void RepeatedWellKnownTypes::clear_bool_field() {
  bool_field_.Clear();
}
void RepeatedWellKnownTypes::clear_string_field() {
  string_field_.Clear();
}
void RepeatedWellKnownTypes::clear_bytes_field() {
  bytes_field_.Clear();
}
RepeatedWellKnownTypes::RepeatedWellKnownTypes()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.RepeatedWellKnownTypes)
}
RepeatedWellKnownTypes::RepeatedWellKnownTypes(const RepeatedWellKnownTypes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      any_field_(from.any_field_),
      api_field_(from.api_field_),
      duration_field_(from.duration_field_),
      empty_field_(from.empty_field_),
      field_mask_field_(from.field_mask_field_),
      source_context_field_(from.source_context_field_),
      struct_field_(from.struct_field_),
      timestamp_field_(from.timestamp_field_),
      type_field_(from.type_field_),
      double_field_(from.double_field_),
      float_field_(from.float_field_),
      int64_field_(from.int64_field_),
      uint64_field_(from.uint64_field_),
      int32_field_(from.int32_field_),
      uint32_field_(from.uint32_field_),
      bool_field_(from.bool_field_),
      string_field_(from.string_field_),
      bytes_field_(from.bytes_field_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.RepeatedWellKnownTypes)
}

void RepeatedWellKnownTypes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RepeatedWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base);
}

RepeatedWellKnownTypes::~RepeatedWellKnownTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.RepeatedWellKnownTypes)
  SharedDtor();
}

void RepeatedWellKnownTypes::SharedDtor() {
}

void RepeatedWellKnownTypes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RepeatedWellKnownTypes& RepeatedWellKnownTypes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RepeatedWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base);
  return *internal_default_instance();
}


void RepeatedWellKnownTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.RepeatedWellKnownTypes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  any_field_.Clear();
  api_field_.Clear();
  duration_field_.Clear();
  empty_field_.Clear();
  field_mask_field_.Clear();
  source_context_field_.Clear();
  struct_field_.Clear();
  timestamp_field_.Clear();
  type_field_.Clear();
  double_field_.Clear();
  float_field_.Clear();
  int64_field_.Clear();
  uint64_field_.Clear();
  int32_field_.Clear();
  uint32_field_.Clear();
  bool_field_.Clear();
  string_field_.Clear();
  bytes_field_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RepeatedWellKnownTypes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .google.protobuf.Any any_field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_any_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.Api api_field = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_api_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.Duration duration_field = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_duration_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.Empty empty_field = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_empty_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.FieldMask field_mask_field = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_field_mask_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.SourceContext source_context_field = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_source_context_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 50);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.Struct struct_field = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_struct_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 58);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.Timestamp timestamp_field = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_timestamp_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 66);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.Type type_field = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_type_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 74);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.DoubleValue double_field = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_double_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 82);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.FloatValue float_field = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_float_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 90);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.Int64Value int64_field = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_int64_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 98);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.UInt64Value uint64_field = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_uint64_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 106);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.Int32Value int32_field = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_int32_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 114);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.UInt32Value uint32_field = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_uint32_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 122);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.BoolValue bool_field = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_bool_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 386);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.StringValue string_field = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_string_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 394);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.BytesValue bytes_field = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_bytes_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 402);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RepeatedWellKnownTypes::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.RepeatedWellKnownTypes)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.protobuf.Any any_field = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_any_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Api api_field = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_api_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Duration duration_field = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_duration_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Empty empty_field = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_empty_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.FieldMask field_mask_field = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_field_mask_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.SourceContext source_context_field = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_source_context_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Struct struct_field = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_struct_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Timestamp timestamp_field = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_timestamp_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Type type_field = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_type_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.DoubleValue double_field = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_double_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.FloatValue float_field = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_float_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Int64Value int64_field = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_int64_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.UInt64Value uint64_field = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_uint64_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Int32Value int32_field = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (114 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_int32_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.UInt32Value uint32_field = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (122 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_uint32_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.BoolValue bool_field = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (130 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_bool_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.StringValue string_field = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (138 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_string_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.BytesValue bytes_field = 18;
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (146 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_bytes_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.RepeatedWellKnownTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.RepeatedWellKnownTypes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RepeatedWellKnownTypes::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.RepeatedWellKnownTypes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Any any_field = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->any_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->any_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Api api_field = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->api_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->api_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Duration duration_field = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->duration_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->duration_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Empty empty_field = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->empty_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->empty_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.FieldMask field_mask_field = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_mask_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->field_mask_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.SourceContext source_context_field = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->source_context_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->source_context_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Struct struct_field = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->struct_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->struct_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Timestamp timestamp_field = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timestamp_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->timestamp_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Type type_field = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->type_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.DoubleValue double_field = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->double_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->double_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.FloatValue float_field = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->float_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->float_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Int64Value int64_field = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->int64_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->int64_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.UInt64Value uint64_field = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uint64_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->uint64_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Int32Value int32_field = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->int32_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->int32_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.UInt32Value uint32_field = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uint32_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->uint32_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.BoolValue bool_field = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bool_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->bool_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.StringValue string_field = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->string_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->string_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.BytesValue bytes_field = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bytes_field_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->bytes_field(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.RepeatedWellKnownTypes)
}

::PROTOBUF_NAMESPACE_ID::uint8* RepeatedWellKnownTypes::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.RepeatedWellKnownTypes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Any any_field = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->any_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->any_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.Api api_field = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->api_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->api_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.Duration duration_field = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->duration_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->duration_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.Empty empty_field = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->empty_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->empty_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.FieldMask field_mask_field = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_mask_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->field_mask_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.SourceContext source_context_field = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->source_context_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->source_context_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.Struct struct_field = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->struct_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->struct_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.Timestamp timestamp_field = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timestamp_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->timestamp_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.Type type_field = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->type_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.DoubleValue double_field = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->double_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->double_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.FloatValue float_field = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->float_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->float_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.Int64Value int64_field = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->int64_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->int64_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.UInt64Value uint64_field = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uint64_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->uint64_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.Int32Value int32_field = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->int32_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->int32_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.UInt32Value uint32_field = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uint32_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->uint32_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.BoolValue bool_field = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bool_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->bool_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.StringValue string_field = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->string_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->string_field(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.BytesValue bytes_field = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bytes_field_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->bytes_field(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.RepeatedWellKnownTypes)
  return target;
}

size_t RepeatedWellKnownTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.RepeatedWellKnownTypes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Any any_field = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->any_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->any_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Api api_field = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->api_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->api_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Duration duration_field = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->duration_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->duration_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Empty empty_field = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->empty_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->empty_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.FieldMask field_mask_field = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->field_mask_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->field_mask_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.SourceContext source_context_field = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->source_context_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->source_context_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Struct struct_field = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->struct_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->struct_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Timestamp timestamp_field = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->timestamp_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->timestamp_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Type type_field = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->type_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->type_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.DoubleValue double_field = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->double_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->double_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.FloatValue float_field = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->float_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->float_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Int64Value int64_field = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->int64_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->int64_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.UInt64Value uint64_field = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->uint64_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->uint64_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Int32Value int32_field = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->int32_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->int32_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.UInt32Value uint32_field = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->uint32_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->uint32_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.BoolValue bool_field = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->bool_field_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->bool_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.StringValue string_field = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->string_field_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->string_field(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.BytesValue bytes_field = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->bytes_field_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->bytes_field(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepeatedWellKnownTypes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.RepeatedWellKnownTypes)
  GOOGLE_DCHECK_NE(&from, this);
  const RepeatedWellKnownTypes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RepeatedWellKnownTypes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.RepeatedWellKnownTypes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.RepeatedWellKnownTypes)
    MergeFrom(*source);
  }
}

void RepeatedWellKnownTypes::MergeFrom(const RepeatedWellKnownTypes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.RepeatedWellKnownTypes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  any_field_.MergeFrom(from.any_field_);
  api_field_.MergeFrom(from.api_field_);
  duration_field_.MergeFrom(from.duration_field_);
  empty_field_.MergeFrom(from.empty_field_);
  field_mask_field_.MergeFrom(from.field_mask_field_);
  source_context_field_.MergeFrom(from.source_context_field_);
  struct_field_.MergeFrom(from.struct_field_);
  timestamp_field_.MergeFrom(from.timestamp_field_);
  type_field_.MergeFrom(from.type_field_);
  double_field_.MergeFrom(from.double_field_);
  float_field_.MergeFrom(from.float_field_);
  int64_field_.MergeFrom(from.int64_field_);
  uint64_field_.MergeFrom(from.uint64_field_);
  int32_field_.MergeFrom(from.int32_field_);
  uint32_field_.MergeFrom(from.uint32_field_);
  bool_field_.MergeFrom(from.bool_field_);
  string_field_.MergeFrom(from.string_field_);
  bytes_field_.MergeFrom(from.bytes_field_);
}

void RepeatedWellKnownTypes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.RepeatedWellKnownTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepeatedWellKnownTypes::CopyFrom(const RepeatedWellKnownTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.RepeatedWellKnownTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepeatedWellKnownTypes::IsInitialized() const {
  return true;
}

void RepeatedWellKnownTypes::InternalSwap(RepeatedWellKnownTypes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&any_field_)->InternalSwap(CastToBase(&other->any_field_));
  CastToBase(&api_field_)->InternalSwap(CastToBase(&other->api_field_));
  CastToBase(&duration_field_)->InternalSwap(CastToBase(&other->duration_field_));
  CastToBase(&empty_field_)->InternalSwap(CastToBase(&other->empty_field_));
  CastToBase(&field_mask_field_)->InternalSwap(CastToBase(&other->field_mask_field_));
  CastToBase(&source_context_field_)->InternalSwap(CastToBase(&other->source_context_field_));
  CastToBase(&struct_field_)->InternalSwap(CastToBase(&other->struct_field_));
  CastToBase(&timestamp_field_)->InternalSwap(CastToBase(&other->timestamp_field_));
  CastToBase(&type_field_)->InternalSwap(CastToBase(&other->type_field_));
  CastToBase(&double_field_)->InternalSwap(CastToBase(&other->double_field_));
  CastToBase(&float_field_)->InternalSwap(CastToBase(&other->float_field_));
  CastToBase(&int64_field_)->InternalSwap(CastToBase(&other->int64_field_));
  CastToBase(&uint64_field_)->InternalSwap(CastToBase(&other->uint64_field_));
  CastToBase(&int32_field_)->InternalSwap(CastToBase(&other->int32_field_));
  CastToBase(&uint32_field_)->InternalSwap(CastToBase(&other->uint32_field_));
  CastToBase(&bool_field_)->InternalSwap(CastToBase(&other->bool_field_));
  CastToBase(&string_field_)->InternalSwap(CastToBase(&other->string_field_));
  CastToBase(&bytes_field_)->InternalSwap(CastToBase(&other->bytes_field_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RepeatedWellKnownTypes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OneofWellKnownTypes::InitAsDefaultInstance() {
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.any_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.api_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Api*>(
      PROTOBUF_NAMESPACE_ID::Api::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.duration_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Duration*>(
      PROTOBUF_NAMESPACE_ID::Duration::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.empty_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Empty*>(
      PROTOBUF_NAMESPACE_ID::Empty::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.field_mask_field_ = const_cast< PROTOBUF_NAMESPACE_ID::FieldMask*>(
      PROTOBUF_NAMESPACE_ID::FieldMask::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.source_context_field_ = const_cast< PROTOBUF_NAMESPACE_ID::SourceContext*>(
      PROTOBUF_NAMESPACE_ID::SourceContext::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.struct_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.timestamp_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.type_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Type*>(
      PROTOBUF_NAMESPACE_ID::Type::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.double_field_ = const_cast< PROTOBUF_NAMESPACE_ID::DoubleValue*>(
      PROTOBUF_NAMESPACE_ID::DoubleValue::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.float_field_ = const_cast< PROTOBUF_NAMESPACE_ID::FloatValue*>(
      PROTOBUF_NAMESPACE_ID::FloatValue::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.int64_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Int64Value*>(
      PROTOBUF_NAMESPACE_ID::Int64Value::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.uint64_field_ = const_cast< PROTOBUF_NAMESPACE_ID::UInt64Value*>(
      PROTOBUF_NAMESPACE_ID::UInt64Value::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.int32_field_ = const_cast< PROTOBUF_NAMESPACE_ID::Int32Value*>(
      PROTOBUF_NAMESPACE_ID::Int32Value::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.uint32_field_ = const_cast< PROTOBUF_NAMESPACE_ID::UInt32Value*>(
      PROTOBUF_NAMESPACE_ID::UInt32Value::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.bool_field_ = const_cast< PROTOBUF_NAMESPACE_ID::BoolValue*>(
      PROTOBUF_NAMESPACE_ID::BoolValue::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.string_field_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
  ::protobuf_unittest::_OneofWellKnownTypes_default_instance_.bytes_field_ = const_cast< PROTOBUF_NAMESPACE_ID::BytesValue*>(
      PROTOBUF_NAMESPACE_ID::BytesValue::internal_default_instance());
}
class OneofWellKnownTypes::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& any_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Api& api_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& duration_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Empty& empty_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::FieldMask& field_mask_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::SourceContext& source_context_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Struct& struct_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& timestamp_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Type& type_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::DoubleValue& double_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::FloatValue& float_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Int64Value& int64_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::UInt64Value& uint64_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::Int32Value& int32_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::UInt32Value& uint32_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::BoolValue& bool_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& string_field(const OneofWellKnownTypes* msg);
  static const PROTOBUF_NAMESPACE_ID::BytesValue& bytes_field(const OneofWellKnownTypes* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
OneofWellKnownTypes::_Internal::any_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.any_field_;
}
const PROTOBUF_NAMESPACE_ID::Api&
OneofWellKnownTypes::_Internal::api_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.api_field_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
OneofWellKnownTypes::_Internal::duration_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.duration_field_;
}
const PROTOBUF_NAMESPACE_ID::Empty&
OneofWellKnownTypes::_Internal::empty_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.empty_field_;
}
const PROTOBUF_NAMESPACE_ID::FieldMask&
OneofWellKnownTypes::_Internal::field_mask_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.field_mask_field_;
}
const PROTOBUF_NAMESPACE_ID::SourceContext&
OneofWellKnownTypes::_Internal::source_context_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.source_context_field_;
}
const PROTOBUF_NAMESPACE_ID::Struct&
OneofWellKnownTypes::_Internal::struct_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.struct_field_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
OneofWellKnownTypes::_Internal::timestamp_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.timestamp_field_;
}
const PROTOBUF_NAMESPACE_ID::Type&
OneofWellKnownTypes::_Internal::type_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.type_field_;
}
const PROTOBUF_NAMESPACE_ID::DoubleValue&
OneofWellKnownTypes::_Internal::double_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.double_field_;
}
const PROTOBUF_NAMESPACE_ID::FloatValue&
OneofWellKnownTypes::_Internal::float_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.float_field_;
}
const PROTOBUF_NAMESPACE_ID::Int64Value&
OneofWellKnownTypes::_Internal::int64_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.int64_field_;
}
const PROTOBUF_NAMESPACE_ID::UInt64Value&
OneofWellKnownTypes::_Internal::uint64_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.uint64_field_;
}
const PROTOBUF_NAMESPACE_ID::Int32Value&
OneofWellKnownTypes::_Internal::int32_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.int32_field_;
}
const PROTOBUF_NAMESPACE_ID::UInt32Value&
OneofWellKnownTypes::_Internal::uint32_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.uint32_field_;
}
const PROTOBUF_NAMESPACE_ID::BoolValue&
OneofWellKnownTypes::_Internal::bool_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.bool_field_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
OneofWellKnownTypes::_Internal::string_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.string_field_;
}
const PROTOBUF_NAMESPACE_ID::BytesValue&
OneofWellKnownTypes::_Internal::bytes_field(const OneofWellKnownTypes* msg) {
  return *msg->oneof_field_.bytes_field_;
}
void OneofWellKnownTypes::set_allocated_any_field(PROTOBUF_NAMESPACE_ID::Any* any_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (any_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      any_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, any_field, submessage_arena);
    }
    set_has_any_field();
    oneof_field_.any_field_ = any_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.any_field)
}
void OneofWellKnownTypes::clear_any_field() {
  if (has_any_field()) {
    delete oneof_field_.any_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_api_field(PROTOBUF_NAMESPACE_ID::Api* api_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (api_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      api_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, api_field, submessage_arena);
    }
    set_has_api_field();
    oneof_field_.api_field_ = api_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.api_field)
}
void OneofWellKnownTypes::clear_api_field() {
  if (has_api_field()) {
    delete oneof_field_.api_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_duration_field(PROTOBUF_NAMESPACE_ID::Duration* duration_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (duration_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(duration_field)->GetArena();
    if (message_arena != submessage_arena) {
      duration_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, duration_field, submessage_arena);
    }
    set_has_duration_field();
    oneof_field_.duration_field_ = duration_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.duration_field)
}
void OneofWellKnownTypes::clear_duration_field() {
  if (has_duration_field()) {
    delete oneof_field_.duration_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_empty_field(PROTOBUF_NAMESPACE_ID::Empty* empty_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (empty_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(empty_field)->GetArena();
    if (message_arena != submessage_arena) {
      empty_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, empty_field, submessage_arena);
    }
    set_has_empty_field();
    oneof_field_.empty_field_ = empty_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.empty_field)
}
void OneofWellKnownTypes::clear_empty_field() {
  if (has_empty_field()) {
    delete oneof_field_.empty_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_field_mask_field(PROTOBUF_NAMESPACE_ID::FieldMask* field_mask_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (field_mask_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(field_mask_field)->GetArena();
    if (message_arena != submessage_arena) {
      field_mask_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, field_mask_field, submessage_arena);
    }
    set_has_field_mask_field();
    oneof_field_.field_mask_field_ = field_mask_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.field_mask_field)
}
void OneofWellKnownTypes::clear_field_mask_field() {
  if (has_field_mask_field()) {
    delete oneof_field_.field_mask_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_source_context_field(PROTOBUF_NAMESPACE_ID::SourceContext* source_context_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (source_context_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      source_context_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, source_context_field, submessage_arena);
    }
    set_has_source_context_field();
    oneof_field_.source_context_field_ = source_context_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.source_context_field)
}
void OneofWellKnownTypes::clear_source_context_field() {
  if (has_source_context_field()) {
    delete oneof_field_.source_context_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_struct_field(PROTOBUF_NAMESPACE_ID::Struct* struct_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (struct_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(struct_field)->GetArena();
    if (message_arena != submessage_arena) {
      struct_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, struct_field, submessage_arena);
    }
    set_has_struct_field();
    oneof_field_.struct_field_ = struct_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.struct_field)
}
void OneofWellKnownTypes::clear_struct_field() {
  if (has_struct_field()) {
    delete oneof_field_.struct_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_timestamp_field(PROTOBUF_NAMESPACE_ID::Timestamp* timestamp_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (timestamp_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timestamp_field)->GetArena();
    if (message_arena != submessage_arena) {
      timestamp_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, timestamp_field, submessage_arena);
    }
    set_has_timestamp_field();
    oneof_field_.timestamp_field_ = timestamp_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.timestamp_field)
}
void OneofWellKnownTypes::clear_timestamp_field() {
  if (has_timestamp_field()) {
    delete oneof_field_.timestamp_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_type_field(PROTOBUF_NAMESPACE_ID::Type* type_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (type_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(type_field)->GetArena();
    if (message_arena != submessage_arena) {
      type_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, type_field, submessage_arena);
    }
    set_has_type_field();
    oneof_field_.type_field_ = type_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.type_field)
}
void OneofWellKnownTypes::clear_type_field() {
  if (has_type_field()) {
    delete oneof_field_.type_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_double_field(PROTOBUF_NAMESPACE_ID::DoubleValue* double_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (double_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(double_field)->GetArena();
    if (message_arena != submessage_arena) {
      double_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, double_field, submessage_arena);
    }
    set_has_double_field();
    oneof_field_.double_field_ = double_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.double_field)
}
void OneofWellKnownTypes::clear_double_field() {
  if (has_double_field()) {
    delete oneof_field_.double_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_float_field(PROTOBUF_NAMESPACE_ID::FloatValue* float_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (float_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(float_field)->GetArena();
    if (message_arena != submessage_arena) {
      float_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, float_field, submessage_arena);
    }
    set_has_float_field();
    oneof_field_.float_field_ = float_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.float_field)
}
void OneofWellKnownTypes::clear_float_field() {
  if (has_float_field()) {
    delete oneof_field_.float_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_int64_field(PROTOBUF_NAMESPACE_ID::Int64Value* int64_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (int64_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(int64_field)->GetArena();
    if (message_arena != submessage_arena) {
      int64_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, int64_field, submessage_arena);
    }
    set_has_int64_field();
    oneof_field_.int64_field_ = int64_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.int64_field)
}
void OneofWellKnownTypes::clear_int64_field() {
  if (has_int64_field()) {
    delete oneof_field_.int64_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_uint64_field(PROTOBUF_NAMESPACE_ID::UInt64Value* uint64_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (uint64_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(uint64_field)->GetArena();
    if (message_arena != submessage_arena) {
      uint64_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uint64_field, submessage_arena);
    }
    set_has_uint64_field();
    oneof_field_.uint64_field_ = uint64_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.uint64_field)
}
void OneofWellKnownTypes::clear_uint64_field() {
  if (has_uint64_field()) {
    delete oneof_field_.uint64_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_int32_field(PROTOBUF_NAMESPACE_ID::Int32Value* int32_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (int32_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(int32_field)->GetArena();
    if (message_arena != submessage_arena) {
      int32_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, int32_field, submessage_arena);
    }
    set_has_int32_field();
    oneof_field_.int32_field_ = int32_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.int32_field)
}
void OneofWellKnownTypes::clear_int32_field() {
  if (has_int32_field()) {
    delete oneof_field_.int32_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_uint32_field(PROTOBUF_NAMESPACE_ID::UInt32Value* uint32_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (uint32_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(uint32_field)->GetArena();
    if (message_arena != submessage_arena) {
      uint32_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uint32_field, submessage_arena);
    }
    set_has_uint32_field();
    oneof_field_.uint32_field_ = uint32_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.uint32_field)
}
void OneofWellKnownTypes::clear_uint32_field() {
  if (has_uint32_field()) {
    delete oneof_field_.uint32_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_bool_field(PROTOBUF_NAMESPACE_ID::BoolValue* bool_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (bool_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bool_field)->GetArena();
    if (message_arena != submessage_arena) {
      bool_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bool_field, submessage_arena);
    }
    set_has_bool_field();
    oneof_field_.bool_field_ = bool_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.bool_field)
}
void OneofWellKnownTypes::clear_bool_field() {
  if (has_bool_field()) {
    delete oneof_field_.bool_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_string_field(PROTOBUF_NAMESPACE_ID::StringValue* string_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (string_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(string_field)->GetArena();
    if (message_arena != submessage_arena) {
      string_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, string_field, submessage_arena);
    }
    set_has_string_field();
    oneof_field_.string_field_ = string_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.string_field)
}
void OneofWellKnownTypes::clear_string_field() {
  if (has_string_field()) {
    delete oneof_field_.string_field_;
    clear_has_oneof_field();
  }
}
void OneofWellKnownTypes::set_allocated_bytes_field(PROTOBUF_NAMESPACE_ID::BytesValue* bytes_field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (bytes_field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bytes_field)->GetArena();
    if (message_arena != submessage_arena) {
      bytes_field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bytes_field, submessage_arena);
    }
    set_has_bytes_field();
    oneof_field_.bytes_field_ = bytes_field;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.OneofWellKnownTypes.bytes_field)
}
void OneofWellKnownTypes::clear_bytes_field() {
  if (has_bytes_field()) {
    delete oneof_field_.bytes_field_;
    clear_has_oneof_field();
  }
}
OneofWellKnownTypes::OneofWellKnownTypes()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.OneofWellKnownTypes)
}
OneofWellKnownTypes::OneofWellKnownTypes(const OneofWellKnownTypes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_oneof_field();
  switch (from.oneof_field_case()) {
    case kAnyField: {
      mutable_any_field()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from.any_field());
      break;
    }
    case kApiField: {
      mutable_api_field()->PROTOBUF_NAMESPACE_ID::Api::MergeFrom(from.api_field());
      break;
    }
    case kDurationField: {
      mutable_duration_field()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from.duration_field());
      break;
    }
    case kEmptyField: {
      mutable_empty_field()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from.empty_field());
      break;
    }
    case kFieldMaskField: {
      mutable_field_mask_field()->PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from.field_mask_field());
      break;
    }
    case kSourceContextField: {
      mutable_source_context_field()->PROTOBUF_NAMESPACE_ID::SourceContext::MergeFrom(from.source_context_field());
      break;
    }
    case kStructField: {
      mutable_struct_field()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from.struct_field());
      break;
    }
    case kTimestampField: {
      mutable_timestamp_field()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from.timestamp_field());
      break;
    }
    case kTypeField: {
      mutable_type_field()->PROTOBUF_NAMESPACE_ID::Type::MergeFrom(from.type_field());
      break;
    }
    case kDoubleField: {
      mutable_double_field()->PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(from.double_field());
      break;
    }
    case kFloatField: {
      mutable_float_field()->PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(from.float_field());
      break;
    }
    case kInt64Field: {
      mutable_int64_field()->PROTOBUF_NAMESPACE_ID::Int64Value::MergeFrom(from.int64_field());
      break;
    }
    case kUint64Field: {
      mutable_uint64_field()->PROTOBUF_NAMESPACE_ID::UInt64Value::MergeFrom(from.uint64_field());
      break;
    }
    case kInt32Field: {
      mutable_int32_field()->PROTOBUF_NAMESPACE_ID::Int32Value::MergeFrom(from.int32_field());
      break;
    }
    case kUint32Field: {
      mutable_uint32_field()->PROTOBUF_NAMESPACE_ID::UInt32Value::MergeFrom(from.uint32_field());
      break;
    }
    case kBoolField: {
      mutable_bool_field()->PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from.bool_field());
      break;
    }
    case kStringField: {
      mutable_string_field()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from.string_field());
      break;
    }
    case kBytesField: {
      mutable_bytes_field()->PROTOBUF_NAMESPACE_ID::BytesValue::MergeFrom(from.bytes_field());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.OneofWellKnownTypes)
}

void OneofWellKnownTypes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OneofWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base);
  clear_has_oneof_field();
}

OneofWellKnownTypes::~OneofWellKnownTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.OneofWellKnownTypes)
  SharedDtor();
}

void OneofWellKnownTypes::SharedDtor() {
  if (has_oneof_field()) {
    clear_oneof_field();
  }
}

void OneofWellKnownTypes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OneofWellKnownTypes& OneofWellKnownTypes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OneofWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base);
  return *internal_default_instance();
}


void OneofWellKnownTypes::clear_oneof_field() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.OneofWellKnownTypes)
  switch (oneof_field_case()) {
    case kAnyField: {
      delete oneof_field_.any_field_;
      break;
    }
    case kApiField: {
      delete oneof_field_.api_field_;
      break;
    }
    case kDurationField: {
      delete oneof_field_.duration_field_;
      break;
    }
    case kEmptyField: {
      delete oneof_field_.empty_field_;
      break;
    }
    case kFieldMaskField: {
      delete oneof_field_.field_mask_field_;
      break;
    }
    case kSourceContextField: {
      delete oneof_field_.source_context_field_;
      break;
    }
    case kStructField: {
      delete oneof_field_.struct_field_;
      break;
    }
    case kTimestampField: {
      delete oneof_field_.timestamp_field_;
      break;
    }
    case kTypeField: {
      delete oneof_field_.type_field_;
      break;
    }
    case kDoubleField: {
      delete oneof_field_.double_field_;
      break;
    }
    case kFloatField: {
      delete oneof_field_.float_field_;
      break;
    }
    case kInt64Field: {
      delete oneof_field_.int64_field_;
      break;
    }
    case kUint64Field: {
      delete oneof_field_.uint64_field_;
      break;
    }
    case kInt32Field: {
      delete oneof_field_.int32_field_;
      break;
    }
    case kUint32Field: {
      delete oneof_field_.uint32_field_;
      break;
    }
    case kBoolField: {
      delete oneof_field_.bool_field_;
      break;
    }
    case kStringField: {
      delete oneof_field_.string_field_;
      break;
    }
    case kBytesField: {
      delete oneof_field_.bytes_field_;
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}


void OneofWellKnownTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.OneofWellKnownTypes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_oneof_field();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OneofWellKnownTypes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Any any_field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_any_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Api api_field = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_api_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration duration_field = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_duration_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Empty empty_field = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_empty_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask field_mask_field = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_field_mask_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.SourceContext source_context_field = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_source_context_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct struct_field = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_struct_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp timestamp_field = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(mutable_timestamp_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Type type_field = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_type_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue double_field = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_double_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FloatValue float_field = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(mutable_float_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Int64Value int64_field = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(mutable_int64_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.UInt64Value uint64_field = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(mutable_uint64_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Int32Value int32_field = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(mutable_int32_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.UInt32Value uint32_field = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(mutable_uint32_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue bool_field = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(mutable_bool_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue string_field = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(mutable_string_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.BytesValue bytes_field = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(mutable_bytes_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OneofWellKnownTypes::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.OneofWellKnownTypes)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any any_field = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_any_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Api api_field = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_api_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration duration_field = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_duration_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Empty empty_field = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_empty_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask field_mask_field = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_field_mask_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.SourceContext source_context_field = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_source_context_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct struct_field = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp timestamp_field = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Type type_field = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_type_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue double_field = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_double_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FloatValue float_field = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_float_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value int64_field = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_int64_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt64Value uint64_field = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_uint64_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value int32_field = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (114 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_int32_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt32Value uint32_field = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (122 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_uint32_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue bool_field = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (130 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_bool_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue string_field = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (138 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_string_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BytesValue bytes_field = 18;
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (146 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_bytes_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.OneofWellKnownTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.OneofWellKnownTypes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OneofWellKnownTypes::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.OneofWellKnownTypes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any any_field = 1;
  if (has_any_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::any_field(this), output);
  }

  // .google.protobuf.Api api_field = 2;
  if (has_api_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::api_field(this), output);
  }

  // .google.protobuf.Duration duration_field = 3;
  if (has_duration_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::duration_field(this), output);
  }

  // .google.protobuf.Empty empty_field = 4;
  if (has_empty_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::empty_field(this), output);
  }

  // .google.protobuf.FieldMask field_mask_field = 5;
  if (has_field_mask_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::field_mask_field(this), output);
  }

  // .google.protobuf.SourceContext source_context_field = 6;
  if (has_source_context_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::source_context_field(this), output);
  }

  // .google.protobuf.Struct struct_field = 7;
  if (has_struct_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::struct_field(this), output);
  }

  // .google.protobuf.Timestamp timestamp_field = 8;
  if (has_timestamp_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, _Internal::timestamp_field(this), output);
  }

  // .google.protobuf.Type type_field = 9;
  if (has_type_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, _Internal::type_field(this), output);
  }

  // .google.protobuf.DoubleValue double_field = 10;
  if (has_double_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, _Internal::double_field(this), output);
  }

  // .google.protobuf.FloatValue float_field = 11;
  if (has_float_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, _Internal::float_field(this), output);
  }

  // .google.protobuf.Int64Value int64_field = 12;
  if (has_int64_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, _Internal::int64_field(this), output);
  }

  // .google.protobuf.UInt64Value uint64_field = 13;
  if (has_uint64_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, _Internal::uint64_field(this), output);
  }

  // .google.protobuf.Int32Value int32_field = 14;
  if (has_int32_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, _Internal::int32_field(this), output);
  }

  // .google.protobuf.UInt32Value uint32_field = 15;
  if (has_uint32_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, _Internal::uint32_field(this), output);
  }

  // .google.protobuf.BoolValue bool_field = 16;
  if (has_bool_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, _Internal::bool_field(this), output);
  }

  // .google.protobuf.StringValue string_field = 17;
  if (has_string_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, _Internal::string_field(this), output);
  }

  // .google.protobuf.BytesValue bytes_field = 18;
  if (has_bytes_field()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, _Internal::bytes_field(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.OneofWellKnownTypes)
}

::PROTOBUF_NAMESPACE_ID::uint8* OneofWellKnownTypes::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.OneofWellKnownTypes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any any_field = 1;
  if (has_any_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::any_field(this), target);
  }

  // .google.protobuf.Api api_field = 2;
  if (has_api_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::api_field(this), target);
  }

  // .google.protobuf.Duration duration_field = 3;
  if (has_duration_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::duration_field(this), target);
  }

  // .google.protobuf.Empty empty_field = 4;
  if (has_empty_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::empty_field(this), target);
  }

  // .google.protobuf.FieldMask field_mask_field = 5;
  if (has_field_mask_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::field_mask_field(this), target);
  }

  // .google.protobuf.SourceContext source_context_field = 6;
  if (has_source_context_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::source_context_field(this), target);
  }

  // .google.protobuf.Struct struct_field = 7;
  if (has_struct_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::struct_field(this), target);
  }

  // .google.protobuf.Timestamp timestamp_field = 8;
  if (has_timestamp_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::timestamp_field(this), target);
  }

  // .google.protobuf.Type type_field = 9;
  if (has_type_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::type_field(this), target);
  }

  // .google.protobuf.DoubleValue double_field = 10;
  if (has_double_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, _Internal::double_field(this), target);
  }

  // .google.protobuf.FloatValue float_field = 11;
  if (has_float_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, _Internal::float_field(this), target);
  }

  // .google.protobuf.Int64Value int64_field = 12;
  if (has_int64_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, _Internal::int64_field(this), target);
  }

  // .google.protobuf.UInt64Value uint64_field = 13;
  if (has_uint64_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, _Internal::uint64_field(this), target);
  }

  // .google.protobuf.Int32Value int32_field = 14;
  if (has_int32_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, _Internal::int32_field(this), target);
  }

  // .google.protobuf.UInt32Value uint32_field = 15;
  if (has_uint32_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, _Internal::uint32_field(this), target);
  }

  // .google.protobuf.BoolValue bool_field = 16;
  if (has_bool_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, _Internal::bool_field(this), target);
  }

  // .google.protobuf.StringValue string_field = 17;
  if (has_string_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, _Internal::string_field(this), target);
  }

  // .google.protobuf.BytesValue bytes_field = 18;
  if (has_bytes_field()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, _Internal::bytes_field(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.OneofWellKnownTypes)
  return target;
}

size_t OneofWellKnownTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.OneofWellKnownTypes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (oneof_field_case()) {
    // .google.protobuf.Any any_field = 1;
    case kAnyField: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.any_field_);
      break;
    }
    // .google.protobuf.Api api_field = 2;
    case kApiField: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.api_field_);
      break;
    }
    // .google.protobuf.Duration duration_field = 3;
    case kDurationField: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.duration_field_);
      break;
    }
    // .google.protobuf.Empty empty_field = 4;
    case kEmptyField: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.empty_field_);
      break;
    }
    // .google.protobuf.FieldMask field_mask_field = 5;
    case kFieldMaskField: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.field_mask_field_);
      break;
    }
    // .google.protobuf.SourceContext source_context_field = 6;
    case kSourceContextField: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.source_context_field_);
      break;
    }
    // .google.protobuf.Struct struct_field = 7;
    case kStructField: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.struct_field_);
      break;
    }
    // .google.protobuf.Timestamp timestamp_field = 8;
    case kTimestampField: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.timestamp_field_);
      break;
    }
    // .google.protobuf.Type type_field = 9;
    case kTypeField: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.type_field_);
      break;
    }
    // .google.protobuf.DoubleValue double_field = 10;
    case kDoubleField: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.double_field_);
      break;
    }
    // .google.protobuf.FloatValue float_field = 11;
    case kFloatField: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.float_field_);
      break;
    }
    // .google.protobuf.Int64Value int64_field = 12;
    case kInt64Field: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.int64_field_);
      break;
    }
    // .google.protobuf.UInt64Value uint64_field = 13;
    case kUint64Field: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.uint64_field_);
      break;
    }
    // .google.protobuf.Int32Value int32_field = 14;
    case kInt32Field: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.int32_field_);
      break;
    }
    // .google.protobuf.UInt32Value uint32_field = 15;
    case kUint32Field: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.uint32_field_);
      break;
    }
    // .google.protobuf.BoolValue bool_field = 16;
    case kBoolField: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.bool_field_);
      break;
    }
    // .google.protobuf.StringValue string_field = 17;
    case kStringField: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.string_field_);
      break;
    }
    // .google.protobuf.BytesValue bytes_field = 18;
    case kBytesField: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oneof_field_.bytes_field_);
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OneofWellKnownTypes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.OneofWellKnownTypes)
  GOOGLE_DCHECK_NE(&from, this);
  const OneofWellKnownTypes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OneofWellKnownTypes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.OneofWellKnownTypes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.OneofWellKnownTypes)
    MergeFrom(*source);
  }
}

void OneofWellKnownTypes::MergeFrom(const OneofWellKnownTypes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.OneofWellKnownTypes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.oneof_field_case()) {
    case kAnyField: {
      mutable_any_field()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from.any_field());
      break;
    }
    case kApiField: {
      mutable_api_field()->PROTOBUF_NAMESPACE_ID::Api::MergeFrom(from.api_field());
      break;
    }
    case kDurationField: {
      mutable_duration_field()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from.duration_field());
      break;
    }
    case kEmptyField: {
      mutable_empty_field()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from.empty_field());
      break;
    }
    case kFieldMaskField: {
      mutable_field_mask_field()->PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from.field_mask_field());
      break;
    }
    case kSourceContextField: {
      mutable_source_context_field()->PROTOBUF_NAMESPACE_ID::SourceContext::MergeFrom(from.source_context_field());
      break;
    }
    case kStructField: {
      mutable_struct_field()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from.struct_field());
      break;
    }
    case kTimestampField: {
      mutable_timestamp_field()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from.timestamp_field());
      break;
    }
    case kTypeField: {
      mutable_type_field()->PROTOBUF_NAMESPACE_ID::Type::MergeFrom(from.type_field());
      break;
    }
    case kDoubleField: {
      mutable_double_field()->PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(from.double_field());
      break;
    }
    case kFloatField: {
      mutable_float_field()->PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(from.float_field());
      break;
    }
    case kInt64Field: {
      mutable_int64_field()->PROTOBUF_NAMESPACE_ID::Int64Value::MergeFrom(from.int64_field());
      break;
    }
    case kUint64Field: {
      mutable_uint64_field()->PROTOBUF_NAMESPACE_ID::UInt64Value::MergeFrom(from.uint64_field());
      break;
    }
    case kInt32Field: {
      mutable_int32_field()->PROTOBUF_NAMESPACE_ID::Int32Value::MergeFrom(from.int32_field());
      break;
    }
    case kUint32Field: {
      mutable_uint32_field()->PROTOBUF_NAMESPACE_ID::UInt32Value::MergeFrom(from.uint32_field());
      break;
    }
    case kBoolField: {
      mutable_bool_field()->PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from.bool_field());
      break;
    }
    case kStringField: {
      mutable_string_field()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from.string_field());
      break;
    }
    case kBytesField: {
      mutable_bytes_field()->PROTOBUF_NAMESPACE_ID::BytesValue::MergeFrom(from.bytes_field());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
}

void OneofWellKnownTypes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.OneofWellKnownTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneofWellKnownTypes::CopyFrom(const OneofWellKnownTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.OneofWellKnownTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneofWellKnownTypes::IsInitialized() const {
  return true;
}

void OneofWellKnownTypes::InternalSwap(OneofWellKnownTypes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(oneof_field_, other->oneof_field_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata OneofWellKnownTypes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

MapWellKnownTypes_AnyFieldEntry_DoNotUse::MapWellKnownTypes_AnyFieldEntry_DoNotUse() {}
MapWellKnownTypes_AnyFieldEntry_DoNotUse::MapWellKnownTypes_AnyFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_AnyFieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_AnyFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_AnyFieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_AnyFieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_ApiFieldEntry_DoNotUse::MapWellKnownTypes_ApiFieldEntry_DoNotUse() {}
MapWellKnownTypes_ApiFieldEntry_DoNotUse::MapWellKnownTypes_ApiFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_ApiFieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_ApiFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_ApiFieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_ApiFieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_DurationFieldEntry_DoNotUse::MapWellKnownTypes_DurationFieldEntry_DoNotUse() {}
MapWellKnownTypes_DurationFieldEntry_DoNotUse::MapWellKnownTypes_DurationFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_DurationFieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_DurationFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_DurationFieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_DurationFieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_EmptyFieldEntry_DoNotUse::MapWellKnownTypes_EmptyFieldEntry_DoNotUse() {}
MapWellKnownTypes_EmptyFieldEntry_DoNotUse::MapWellKnownTypes_EmptyFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_EmptyFieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_EmptyFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_EmptyFieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_EmptyFieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse::MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse() {}
MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse::MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_SourceContextFieldEntry_DoNotUse::MapWellKnownTypes_SourceContextFieldEntry_DoNotUse() {}
MapWellKnownTypes_SourceContextFieldEntry_DoNotUse::MapWellKnownTypes_SourceContextFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_SourceContextFieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_SourceContextFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_SourceContextFieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_SourceContextFieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_StructFieldEntry_DoNotUse::MapWellKnownTypes_StructFieldEntry_DoNotUse() {}
MapWellKnownTypes_StructFieldEntry_DoNotUse::MapWellKnownTypes_StructFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_StructFieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_StructFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_StructFieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_StructFieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_TimestampFieldEntry_DoNotUse::MapWellKnownTypes_TimestampFieldEntry_DoNotUse() {}
MapWellKnownTypes_TimestampFieldEntry_DoNotUse::MapWellKnownTypes_TimestampFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_TimestampFieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_TimestampFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_TimestampFieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_TimestampFieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_TypeFieldEntry_DoNotUse::MapWellKnownTypes_TypeFieldEntry_DoNotUse() {}
MapWellKnownTypes_TypeFieldEntry_DoNotUse::MapWellKnownTypes_TypeFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_TypeFieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_TypeFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_TypeFieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_TypeFieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_DoubleFieldEntry_DoNotUse::MapWellKnownTypes_DoubleFieldEntry_DoNotUse() {}
MapWellKnownTypes_DoubleFieldEntry_DoNotUse::MapWellKnownTypes_DoubleFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_DoubleFieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_DoubleFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_DoubleFieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_DoubleFieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_FloatFieldEntry_DoNotUse::MapWellKnownTypes_FloatFieldEntry_DoNotUse() {}
MapWellKnownTypes_FloatFieldEntry_DoNotUse::MapWellKnownTypes_FloatFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_FloatFieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_FloatFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_FloatFieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_FloatFieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_Int64FieldEntry_DoNotUse::MapWellKnownTypes_Int64FieldEntry_DoNotUse() {}
MapWellKnownTypes_Int64FieldEntry_DoNotUse::MapWellKnownTypes_Int64FieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_Int64FieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_Int64FieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_Int64FieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_Int64FieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_Uint64FieldEntry_DoNotUse::MapWellKnownTypes_Uint64FieldEntry_DoNotUse() {}
MapWellKnownTypes_Uint64FieldEntry_DoNotUse::MapWellKnownTypes_Uint64FieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_Uint64FieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_Uint64FieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_Uint64FieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_Uint64FieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_Int32FieldEntry_DoNotUse::MapWellKnownTypes_Int32FieldEntry_DoNotUse() {}
MapWellKnownTypes_Int32FieldEntry_DoNotUse::MapWellKnownTypes_Int32FieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_Int32FieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_Int32FieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_Int32FieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_Int32FieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_Uint32FieldEntry_DoNotUse::MapWellKnownTypes_Uint32FieldEntry_DoNotUse() {}
MapWellKnownTypes_Uint32FieldEntry_DoNotUse::MapWellKnownTypes_Uint32FieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_Uint32FieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_Uint32FieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_Uint32FieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_Uint32FieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_BoolFieldEntry_DoNotUse::MapWellKnownTypes_BoolFieldEntry_DoNotUse() {}
MapWellKnownTypes_BoolFieldEntry_DoNotUse::MapWellKnownTypes_BoolFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_BoolFieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_BoolFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_BoolFieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_BoolFieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_StringFieldEntry_DoNotUse::MapWellKnownTypes_StringFieldEntry_DoNotUse() {}
MapWellKnownTypes_StringFieldEntry_DoNotUse::MapWellKnownTypes_StringFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_StringFieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_StringFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_StringFieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_StringFieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MapWellKnownTypes_BytesFieldEntry_DoNotUse::MapWellKnownTypes_BytesFieldEntry_DoNotUse() {}
MapWellKnownTypes_BytesFieldEntry_DoNotUse::MapWellKnownTypes_BytesFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MapWellKnownTypes_BytesFieldEntry_DoNotUse::MergeFrom(const MapWellKnownTypes_BytesFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes_BytesFieldEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MapWellKnownTypes_BytesFieldEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void MapWellKnownTypes::InitAsDefaultInstance() {
}
class MapWellKnownTypes::_Internal {
 public:
};

void MapWellKnownTypes::clear_any_field() {
  any_field_.Clear();
}
void MapWellKnownTypes::clear_api_field() {
  api_field_.Clear();
}
void MapWellKnownTypes::clear_duration_field() {
  duration_field_.Clear();
}
void MapWellKnownTypes::clear_empty_field() {
  empty_field_.Clear();
}
void MapWellKnownTypes::clear_field_mask_field() {
  field_mask_field_.Clear();
}
void MapWellKnownTypes::clear_source_context_field() {
  source_context_field_.Clear();
}
void MapWellKnownTypes::clear_struct_field() {
  struct_field_.Clear();
}
void MapWellKnownTypes::clear_timestamp_field() {
  timestamp_field_.Clear();
}
void MapWellKnownTypes::clear_type_field() {
  type_field_.Clear();
}
void MapWellKnownTypes::clear_double_field() {
  double_field_.Clear();
}
void MapWellKnownTypes::clear_float_field() {
  float_field_.Clear();
}
void MapWellKnownTypes::clear_int64_field() {
  int64_field_.Clear();
}
void MapWellKnownTypes::clear_uint64_field() {
  uint64_field_.Clear();
}
void MapWellKnownTypes::clear_int32_field() {
  int32_field_.Clear();
}
void MapWellKnownTypes::clear_uint32_field() {
  uint32_field_.Clear();
}
void MapWellKnownTypes::clear_bool_field() {
  bool_field_.Clear();
}
void MapWellKnownTypes::clear_string_field() {
  string_field_.Clear();
}
void MapWellKnownTypes::clear_bytes_field() {
  bytes_field_.Clear();
}
MapWellKnownTypes::MapWellKnownTypes()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.MapWellKnownTypes)
}
MapWellKnownTypes::MapWellKnownTypes(const MapWellKnownTypes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  any_field_.MergeFrom(from.any_field_);
  api_field_.MergeFrom(from.api_field_);
  duration_field_.MergeFrom(from.duration_field_);
  empty_field_.MergeFrom(from.empty_field_);
  field_mask_field_.MergeFrom(from.field_mask_field_);
  source_context_field_.MergeFrom(from.source_context_field_);
  struct_field_.MergeFrom(from.struct_field_);
  timestamp_field_.MergeFrom(from.timestamp_field_);
  type_field_.MergeFrom(from.type_field_);
  double_field_.MergeFrom(from.double_field_);
  float_field_.MergeFrom(from.float_field_);
  int64_field_.MergeFrom(from.int64_field_);
  uint64_field_.MergeFrom(from.uint64_field_);
  int32_field_.MergeFrom(from.int32_field_);
  uint32_field_.MergeFrom(from.uint32_field_);
  bool_field_.MergeFrom(from.bool_field_);
  string_field_.MergeFrom(from.string_field_);
  bytes_field_.MergeFrom(from.bytes_field_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.MapWellKnownTypes)
}

void MapWellKnownTypes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MapWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base);
}

MapWellKnownTypes::~MapWellKnownTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.MapWellKnownTypes)
  SharedDtor();
}

void MapWellKnownTypes::SharedDtor() {
}

void MapWellKnownTypes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MapWellKnownTypes& MapWellKnownTypes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MapWellKnownTypes_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto.base);
  return *internal_default_instance();
}


void MapWellKnownTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.MapWellKnownTypes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  any_field_.Clear();
  api_field_.Clear();
  duration_field_.Clear();
  empty_field_.Clear();
  field_mask_field_.Clear();
  source_context_field_.Clear();
  struct_field_.Clear();
  timestamp_field_.Clear();
  type_field_.Clear();
  double_field_.Clear();
  float_field_.Clear();
  int64_field_.Clear();
  uint64_field_.Clear();
  int32_field_.Clear();
  uint32_field_.Clear();
  bool_field_.Clear();
  string_field_.Clear();
  bytes_field_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MapWellKnownTypes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<int32, .google.protobuf.Any> any_field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&any_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.Api> api_field = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&api_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.Duration> duration_field = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&duration_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.Empty> empty_field = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&empty_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.FieldMask> field_mask_field = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&field_mask_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.SourceContext> source_context_field = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&source_context_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 50);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.Struct> struct_field = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&struct_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 58);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.Timestamp> timestamp_field = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&timestamp_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 66);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.Type> type_field = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&type_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 74);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.DoubleValue> double_field = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&double_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 82);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.FloatValue> float_field = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&float_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 90);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.Int64Value> int64_field = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&int64_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 98);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.UInt64Value> uint64_field = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&uint64_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 106);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.Int32Value> int32_field = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&int32_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 114);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.UInt32Value> uint32_field = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&uint32_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 122);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.BoolValue> bool_field = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&bool_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 386);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.StringValue> string_field = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&string_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 394);
        } else goto handle_unusual;
        continue;
      // map<int32, .google.protobuf.BytesValue> bytes_field = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&bytes_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 402);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MapWellKnownTypes::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.MapWellKnownTypes)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, .google.protobuf.Any> any_field = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          MapWellKnownTypes_AnyFieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_AnyFieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Any,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Any > > parser(&any_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.Api> api_field = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          MapWellKnownTypes_ApiFieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_ApiFieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Api,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Api > > parser(&api_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.Duration> duration_field = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          MapWellKnownTypes_DurationFieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_DurationFieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Duration,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Duration > > parser(&duration_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.Empty> empty_field = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          MapWellKnownTypes_EmptyFieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_EmptyFieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Empty,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Empty > > parser(&empty_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.FieldMask> field_mask_field = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FieldMask,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FieldMask > > parser(&field_mask_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.SourceContext> source_context_field = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          MapWellKnownTypes_SourceContextFieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_SourceContextFieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::SourceContext,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::SourceContext > > parser(&source_context_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.Struct> struct_field = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          MapWellKnownTypes_StructFieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_StructFieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Struct,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Struct > > parser(&struct_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.Timestamp> timestamp_field = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          MapWellKnownTypes_TimestampFieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_TimestampFieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Timestamp,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Timestamp > > parser(&timestamp_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.Type> type_field = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          MapWellKnownTypes_TypeFieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_TypeFieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Type,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Type > > parser(&type_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.DoubleValue> double_field = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          MapWellKnownTypes_DoubleFieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_DoubleFieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::DoubleValue,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::DoubleValue > > parser(&double_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.FloatValue> float_field = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          MapWellKnownTypes_FloatFieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_FloatFieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FloatValue,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FloatValue > > parser(&float_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.Int64Value> int64_field = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          MapWellKnownTypes_Int64FieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_Int64FieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int64Value,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int64Value > > parser(&int64_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.UInt64Value> uint64_field = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          MapWellKnownTypes_Uint64FieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_Uint64FieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt64Value,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt64Value > > parser(&uint64_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.Int32Value> int32_field = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (114 & 0xFF)) {
          MapWellKnownTypes_Int32FieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_Int32FieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int32Value,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int32Value > > parser(&int32_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.UInt32Value> uint32_field = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (122 & 0xFF)) {
          MapWellKnownTypes_Uint32FieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_Uint32FieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt32Value,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt32Value > > parser(&uint32_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.BoolValue> bool_field = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (130 & 0xFF)) {
          MapWellKnownTypes_BoolFieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_BoolFieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BoolValue,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BoolValue > > parser(&bool_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.StringValue> string_field = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (138 & 0xFF)) {
          MapWellKnownTypes_StringFieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_StringFieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::StringValue,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::StringValue > > parser(&string_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .google.protobuf.BytesValue> bytes_field = 18;
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (146 & 0xFF)) {
          MapWellKnownTypes_BytesFieldEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MapWellKnownTypes_BytesFieldEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BytesValue,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BytesValue > > parser(&bytes_field_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.MapWellKnownTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.MapWellKnownTypes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MapWellKnownTypes::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.MapWellKnownTypes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .google.protobuf.Any> any_field = 1;
  if (!this->any_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Any >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->any_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->any_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Any >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Any >::const_iterator
          it = this->any_field().begin();
          it != this->any_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_AnyFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Any >::const_iterator
          it = this->any_field().begin();
          it != this->any_field().end(); ++it) {
        MapWellKnownTypes_AnyFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(1, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.Api> api_field = 2;
  if (!this->api_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Api >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->api_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->api_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Api >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Api >::const_iterator
          it = this->api_field().begin();
          it != this->api_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_ApiFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(2, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Api >::const_iterator
          it = this->api_field().begin();
          it != this->api_field().end(); ++it) {
        MapWellKnownTypes_ApiFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(2, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.Duration> duration_field = 3;
  if (!this->duration_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Duration >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->duration_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->duration_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Duration >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Duration >::const_iterator
          it = this->duration_field().begin();
          it != this->duration_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_DurationFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(3, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Duration >::const_iterator
          it = this->duration_field().begin();
          it != this->duration_field().end(); ++it) {
        MapWellKnownTypes_DurationFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(3, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.Empty> empty_field = 4;
  if (!this->empty_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Empty >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->empty_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->empty_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Empty >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Empty >::const_iterator
          it = this->empty_field().begin();
          it != this->empty_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_EmptyFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(4, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Empty >::const_iterator
          it = this->empty_field().begin();
          it != this->empty_field().end(); ++it) {
        MapWellKnownTypes_EmptyFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(4, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.FieldMask> field_mask_field = 5;
  if (!this->field_mask_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FieldMask >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->field_mask_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->field_mask_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FieldMask >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FieldMask >::const_iterator
          it = this->field_mask_field().begin();
          it != this->field_mask_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(5, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FieldMask >::const_iterator
          it = this->field_mask_field().begin();
          it != this->field_mask_field().end(); ++it) {
        MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(5, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.SourceContext> source_context_field = 6;
  if (!this->source_context_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::SourceContext >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->source_context_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->source_context_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::SourceContext >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::SourceContext >::const_iterator
          it = this->source_context_field().begin();
          it != this->source_context_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_SourceContextFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(6, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::SourceContext >::const_iterator
          it = this->source_context_field().begin();
          it != this->source_context_field().end(); ++it) {
        MapWellKnownTypes_SourceContextFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(6, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.Struct> struct_field = 7;
  if (!this->struct_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Struct >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->struct_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->struct_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Struct >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Struct >::const_iterator
          it = this->struct_field().begin();
          it != this->struct_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_StructFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(7, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Struct >::const_iterator
          it = this->struct_field().begin();
          it != this->struct_field().end(); ++it) {
        MapWellKnownTypes_StructFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(7, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.Timestamp> timestamp_field = 8;
  if (!this->timestamp_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Timestamp >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->timestamp_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->timestamp_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Timestamp >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Timestamp >::const_iterator
          it = this->timestamp_field().begin();
          it != this->timestamp_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_TimestampFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(8, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Timestamp >::const_iterator
          it = this->timestamp_field().begin();
          it != this->timestamp_field().end(); ++it) {
        MapWellKnownTypes_TimestampFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(8, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.Type> type_field = 9;
  if (!this->type_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Type >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->type_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->type_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Type >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Type >::const_iterator
          it = this->type_field().begin();
          it != this->type_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_TypeFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(9, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Type >::const_iterator
          it = this->type_field().begin();
          it != this->type_field().end(); ++it) {
        MapWellKnownTypes_TypeFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(9, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.DoubleValue> double_field = 10;
  if (!this->double_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::DoubleValue >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->double_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->double_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::DoubleValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::DoubleValue >::const_iterator
          it = this->double_field().begin();
          it != this->double_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_DoubleFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(10, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::DoubleValue >::const_iterator
          it = this->double_field().begin();
          it != this->double_field().end(); ++it) {
        MapWellKnownTypes_DoubleFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(10, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.FloatValue> float_field = 11;
  if (!this->float_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FloatValue >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->float_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->float_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FloatValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FloatValue >::const_iterator
          it = this->float_field().begin();
          it != this->float_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_FloatFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(11, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FloatValue >::const_iterator
          it = this->float_field().begin();
          it != this->float_field().end(); ++it) {
        MapWellKnownTypes_FloatFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(11, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.Int64Value> int64_field = 12;
  if (!this->int64_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int64Value >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->int64_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->int64_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int64Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int64Value >::const_iterator
          it = this->int64_field().begin();
          it != this->int64_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_Int64FieldEntry_DoNotUse::Funcs::SerializeToCodedStream(12, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int64Value >::const_iterator
          it = this->int64_field().begin();
          it != this->int64_field().end(); ++it) {
        MapWellKnownTypes_Int64FieldEntry_DoNotUse::Funcs::SerializeToCodedStream(12, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.UInt64Value> uint64_field = 13;
  if (!this->uint64_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt64Value >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->uint64_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->uint64_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt64Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt64Value >::const_iterator
          it = this->uint64_field().begin();
          it != this->uint64_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_Uint64FieldEntry_DoNotUse::Funcs::SerializeToCodedStream(13, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt64Value >::const_iterator
          it = this->uint64_field().begin();
          it != this->uint64_field().end(); ++it) {
        MapWellKnownTypes_Uint64FieldEntry_DoNotUse::Funcs::SerializeToCodedStream(13, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.Int32Value> int32_field = 14;
  if (!this->int32_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int32Value >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->int32_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->int32_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int32Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int32Value >::const_iterator
          it = this->int32_field().begin();
          it != this->int32_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_Int32FieldEntry_DoNotUse::Funcs::SerializeToCodedStream(14, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int32Value >::const_iterator
          it = this->int32_field().begin();
          it != this->int32_field().end(); ++it) {
        MapWellKnownTypes_Int32FieldEntry_DoNotUse::Funcs::SerializeToCodedStream(14, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.UInt32Value> uint32_field = 15;
  if (!this->uint32_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt32Value >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->uint32_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->uint32_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt32Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt32Value >::const_iterator
          it = this->uint32_field().begin();
          it != this->uint32_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_Uint32FieldEntry_DoNotUse::Funcs::SerializeToCodedStream(15, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt32Value >::const_iterator
          it = this->uint32_field().begin();
          it != this->uint32_field().end(); ++it) {
        MapWellKnownTypes_Uint32FieldEntry_DoNotUse::Funcs::SerializeToCodedStream(15, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.BoolValue> bool_field = 16;
  if (!this->bool_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BoolValue >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->bool_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->bool_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BoolValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BoolValue >::const_iterator
          it = this->bool_field().begin();
          it != this->bool_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_BoolFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(16, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BoolValue >::const_iterator
          it = this->bool_field().begin();
          it != this->bool_field().end(); ++it) {
        MapWellKnownTypes_BoolFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(16, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.StringValue> string_field = 17;
  if (!this->string_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::StringValue >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->string_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->string_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::StringValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::StringValue >::const_iterator
          it = this->string_field().begin();
          it != this->string_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_StringFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(17, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::StringValue >::const_iterator
          it = this->string_field().begin();
          it != this->string_field().end(); ++it) {
        MapWellKnownTypes_StringFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(17, it->first, it->second, output);
      }
    }
  }

  // map<int32, .google.protobuf.BytesValue> bytes_field = 18;
  if (!this->bytes_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BytesValue >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->bytes_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->bytes_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BytesValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BytesValue >::const_iterator
          it = this->bytes_field().begin();
          it != this->bytes_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MapWellKnownTypes_BytesFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(18, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BytesValue >::const_iterator
          it = this->bytes_field().begin();
          it != this->bytes_field().end(); ++it) {
        MapWellKnownTypes_BytesFieldEntry_DoNotUse::Funcs::SerializeToCodedStream(18, it->first, it->second, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.MapWellKnownTypes)
}

::PROTOBUF_NAMESPACE_ID::uint8* MapWellKnownTypes::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.MapWellKnownTypes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .google.protobuf.Any> any_field = 1;
  if (!this->any_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Any >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->any_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->any_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Any >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Any >::const_iterator
          it = this->any_field().begin();
          it != this->any_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_AnyFieldEntry_DoNotUse::Funcs::SerializeToArray(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Any >::const_iterator
          it = this->any_field().begin();
          it != this->any_field().end(); ++it) {
        target = MapWellKnownTypes_AnyFieldEntry_DoNotUse::Funcs::SerializeToArray(1, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.Api> api_field = 2;
  if (!this->api_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Api >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->api_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->api_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Api >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Api >::const_iterator
          it = this->api_field().begin();
          it != this->api_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_ApiFieldEntry_DoNotUse::Funcs::SerializeToArray(2, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Api >::const_iterator
          it = this->api_field().begin();
          it != this->api_field().end(); ++it) {
        target = MapWellKnownTypes_ApiFieldEntry_DoNotUse::Funcs::SerializeToArray(2, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.Duration> duration_field = 3;
  if (!this->duration_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Duration >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->duration_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->duration_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Duration >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Duration >::const_iterator
          it = this->duration_field().begin();
          it != this->duration_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_DurationFieldEntry_DoNotUse::Funcs::SerializeToArray(3, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Duration >::const_iterator
          it = this->duration_field().begin();
          it != this->duration_field().end(); ++it) {
        target = MapWellKnownTypes_DurationFieldEntry_DoNotUse::Funcs::SerializeToArray(3, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.Empty> empty_field = 4;
  if (!this->empty_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Empty >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->empty_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->empty_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Empty >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Empty >::const_iterator
          it = this->empty_field().begin();
          it != this->empty_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_EmptyFieldEntry_DoNotUse::Funcs::SerializeToArray(4, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Empty >::const_iterator
          it = this->empty_field().begin();
          it != this->empty_field().end(); ++it) {
        target = MapWellKnownTypes_EmptyFieldEntry_DoNotUse::Funcs::SerializeToArray(4, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.FieldMask> field_mask_field = 5;
  if (!this->field_mask_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FieldMask >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->field_mask_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->field_mask_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FieldMask >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FieldMask >::const_iterator
          it = this->field_mask_field().begin();
          it != this->field_mask_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse::Funcs::SerializeToArray(5, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FieldMask >::const_iterator
          it = this->field_mask_field().begin();
          it != this->field_mask_field().end(); ++it) {
        target = MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse::Funcs::SerializeToArray(5, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.SourceContext> source_context_field = 6;
  if (!this->source_context_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::SourceContext >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->source_context_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->source_context_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::SourceContext >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::SourceContext >::const_iterator
          it = this->source_context_field().begin();
          it != this->source_context_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_SourceContextFieldEntry_DoNotUse::Funcs::SerializeToArray(6, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::SourceContext >::const_iterator
          it = this->source_context_field().begin();
          it != this->source_context_field().end(); ++it) {
        target = MapWellKnownTypes_SourceContextFieldEntry_DoNotUse::Funcs::SerializeToArray(6, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.Struct> struct_field = 7;
  if (!this->struct_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Struct >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->struct_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->struct_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Struct >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Struct >::const_iterator
          it = this->struct_field().begin();
          it != this->struct_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_StructFieldEntry_DoNotUse::Funcs::SerializeToArray(7, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Struct >::const_iterator
          it = this->struct_field().begin();
          it != this->struct_field().end(); ++it) {
        target = MapWellKnownTypes_StructFieldEntry_DoNotUse::Funcs::SerializeToArray(7, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.Timestamp> timestamp_field = 8;
  if (!this->timestamp_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Timestamp >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->timestamp_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->timestamp_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Timestamp >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Timestamp >::const_iterator
          it = this->timestamp_field().begin();
          it != this->timestamp_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_TimestampFieldEntry_DoNotUse::Funcs::SerializeToArray(8, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Timestamp >::const_iterator
          it = this->timestamp_field().begin();
          it != this->timestamp_field().end(); ++it) {
        target = MapWellKnownTypes_TimestampFieldEntry_DoNotUse::Funcs::SerializeToArray(8, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.Type> type_field = 9;
  if (!this->type_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Type >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->type_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->type_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Type >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Type >::const_iterator
          it = this->type_field().begin();
          it != this->type_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_TypeFieldEntry_DoNotUse::Funcs::SerializeToArray(9, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Type >::const_iterator
          it = this->type_field().begin();
          it != this->type_field().end(); ++it) {
        target = MapWellKnownTypes_TypeFieldEntry_DoNotUse::Funcs::SerializeToArray(9, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.DoubleValue> double_field = 10;
  if (!this->double_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::DoubleValue >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->double_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->double_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::DoubleValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::DoubleValue >::const_iterator
          it = this->double_field().begin();
          it != this->double_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_DoubleFieldEntry_DoNotUse::Funcs::SerializeToArray(10, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::DoubleValue >::const_iterator
          it = this->double_field().begin();
          it != this->double_field().end(); ++it) {
        target = MapWellKnownTypes_DoubleFieldEntry_DoNotUse::Funcs::SerializeToArray(10, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.FloatValue> float_field = 11;
  if (!this->float_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FloatValue >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->float_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->float_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FloatValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FloatValue >::const_iterator
          it = this->float_field().begin();
          it != this->float_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_FloatFieldEntry_DoNotUse::Funcs::SerializeToArray(11, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FloatValue >::const_iterator
          it = this->float_field().begin();
          it != this->float_field().end(); ++it) {
        target = MapWellKnownTypes_FloatFieldEntry_DoNotUse::Funcs::SerializeToArray(11, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.Int64Value> int64_field = 12;
  if (!this->int64_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int64Value >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->int64_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->int64_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int64Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int64Value >::const_iterator
          it = this->int64_field().begin();
          it != this->int64_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_Int64FieldEntry_DoNotUse::Funcs::SerializeToArray(12, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int64Value >::const_iterator
          it = this->int64_field().begin();
          it != this->int64_field().end(); ++it) {
        target = MapWellKnownTypes_Int64FieldEntry_DoNotUse::Funcs::SerializeToArray(12, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.UInt64Value> uint64_field = 13;
  if (!this->uint64_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt64Value >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->uint64_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->uint64_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt64Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt64Value >::const_iterator
          it = this->uint64_field().begin();
          it != this->uint64_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_Uint64FieldEntry_DoNotUse::Funcs::SerializeToArray(13, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt64Value >::const_iterator
          it = this->uint64_field().begin();
          it != this->uint64_field().end(); ++it) {
        target = MapWellKnownTypes_Uint64FieldEntry_DoNotUse::Funcs::SerializeToArray(13, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.Int32Value> int32_field = 14;
  if (!this->int32_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int32Value >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->int32_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->int32_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int32Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int32Value >::const_iterator
          it = this->int32_field().begin();
          it != this->int32_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_Int32FieldEntry_DoNotUse::Funcs::SerializeToArray(14, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int32Value >::const_iterator
          it = this->int32_field().begin();
          it != this->int32_field().end(); ++it) {
        target = MapWellKnownTypes_Int32FieldEntry_DoNotUse::Funcs::SerializeToArray(14, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.UInt32Value> uint32_field = 15;
  if (!this->uint32_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt32Value >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->uint32_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->uint32_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt32Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt32Value >::const_iterator
          it = this->uint32_field().begin();
          it != this->uint32_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_Uint32FieldEntry_DoNotUse::Funcs::SerializeToArray(15, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt32Value >::const_iterator
          it = this->uint32_field().begin();
          it != this->uint32_field().end(); ++it) {
        target = MapWellKnownTypes_Uint32FieldEntry_DoNotUse::Funcs::SerializeToArray(15, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.BoolValue> bool_field = 16;
  if (!this->bool_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BoolValue >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->bool_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->bool_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BoolValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BoolValue >::const_iterator
          it = this->bool_field().begin();
          it != this->bool_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_BoolFieldEntry_DoNotUse::Funcs::SerializeToArray(16, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BoolValue >::const_iterator
          it = this->bool_field().begin();
          it != this->bool_field().end(); ++it) {
        target = MapWellKnownTypes_BoolFieldEntry_DoNotUse::Funcs::SerializeToArray(16, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.StringValue> string_field = 17;
  if (!this->string_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::StringValue >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->string_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->string_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::StringValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::StringValue >::const_iterator
          it = this->string_field().begin();
          it != this->string_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_StringFieldEntry_DoNotUse::Funcs::SerializeToArray(17, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::StringValue >::const_iterator
          it = this->string_field().begin();
          it != this->string_field().end(); ++it) {
        target = MapWellKnownTypes_StringFieldEntry_DoNotUse::Funcs::SerializeToArray(17, it->first, it->second, target);
      }
    }
  }

  // map<int32, .google.protobuf.BytesValue> bytes_field = 18;
  if (!this->bytes_field().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BytesValue >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->bytes_field().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->bytes_field().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BytesValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BytesValue >::const_iterator
          it = this->bytes_field().begin();
          it != this->bytes_field().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MapWellKnownTypes_BytesFieldEntry_DoNotUse::Funcs::SerializeToArray(18, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BytesValue >::const_iterator
          it = this->bytes_field().begin();
          it != this->bytes_field().end(); ++it) {
        target = MapWellKnownTypes_BytesFieldEntry_DoNotUse::Funcs::SerializeToArray(18, it->first, it->second, target);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.MapWellKnownTypes)
  return target;
}

size_t MapWellKnownTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.MapWellKnownTypes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .google.protobuf.Any> any_field = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->any_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Any >::const_iterator
      it = this->any_field().begin();
      it != this->any_field().end(); ++it) {
    total_size += MapWellKnownTypes_AnyFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.Api> api_field = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->api_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Api >::const_iterator
      it = this->api_field().begin();
      it != this->api_field().end(); ++it) {
    total_size += MapWellKnownTypes_ApiFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.Duration> duration_field = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->duration_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Duration >::const_iterator
      it = this->duration_field().begin();
      it != this->duration_field().end(); ++it) {
    total_size += MapWellKnownTypes_DurationFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.Empty> empty_field = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->empty_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Empty >::const_iterator
      it = this->empty_field().begin();
      it != this->empty_field().end(); ++it) {
    total_size += MapWellKnownTypes_EmptyFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.FieldMask> field_mask_field = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->field_mask_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FieldMask >::const_iterator
      it = this->field_mask_field().begin();
      it != this->field_mask_field().end(); ++it) {
    total_size += MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.SourceContext> source_context_field = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->source_context_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::SourceContext >::const_iterator
      it = this->source_context_field().begin();
      it != this->source_context_field().end(); ++it) {
    total_size += MapWellKnownTypes_SourceContextFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.Struct> struct_field = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->struct_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Struct >::const_iterator
      it = this->struct_field().begin();
      it != this->struct_field().end(); ++it) {
    total_size += MapWellKnownTypes_StructFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.Timestamp> timestamp_field = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->timestamp_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Timestamp >::const_iterator
      it = this->timestamp_field().begin();
      it != this->timestamp_field().end(); ++it) {
    total_size += MapWellKnownTypes_TimestampFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.Type> type_field = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->type_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Type >::const_iterator
      it = this->type_field().begin();
      it != this->type_field().end(); ++it) {
    total_size += MapWellKnownTypes_TypeFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.DoubleValue> double_field = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->double_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::DoubleValue >::const_iterator
      it = this->double_field().begin();
      it != this->double_field().end(); ++it) {
    total_size += MapWellKnownTypes_DoubleFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.FloatValue> float_field = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->float_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::FloatValue >::const_iterator
      it = this->float_field().begin();
      it != this->float_field().end(); ++it) {
    total_size += MapWellKnownTypes_FloatFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.Int64Value> int64_field = 12;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->int64_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int64Value >::const_iterator
      it = this->int64_field().begin();
      it != this->int64_field().end(); ++it) {
    total_size += MapWellKnownTypes_Int64FieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.UInt64Value> uint64_field = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->uint64_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt64Value >::const_iterator
      it = this->uint64_field().begin();
      it != this->uint64_field().end(); ++it) {
    total_size += MapWellKnownTypes_Uint64FieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.Int32Value> int32_field = 14;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->int32_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::Int32Value >::const_iterator
      it = this->int32_field().begin();
      it != this->int32_field().end(); ++it) {
    total_size += MapWellKnownTypes_Int32FieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.UInt32Value> uint32_field = 15;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->uint32_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::UInt32Value >::const_iterator
      it = this->uint32_field().begin();
      it != this->uint32_field().end(); ++it) {
    total_size += MapWellKnownTypes_Uint32FieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.BoolValue> bool_field = 16;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->bool_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BoolValue >::const_iterator
      it = this->bool_field().begin();
      it != this->bool_field().end(); ++it) {
    total_size += MapWellKnownTypes_BoolFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.StringValue> string_field = 17;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->string_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::StringValue >::const_iterator
      it = this->string_field().begin();
      it != this->string_field().end(); ++it) {
    total_size += MapWellKnownTypes_StringFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .google.protobuf.BytesValue> bytes_field = 18;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->bytes_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, PROTOBUF_NAMESPACE_ID::BytesValue >::const_iterator
      it = this->bytes_field().begin();
      it != this->bytes_field().end(); ++it) {
    total_size += MapWellKnownTypes_BytesFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MapWellKnownTypes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.MapWellKnownTypes)
  GOOGLE_DCHECK_NE(&from, this);
  const MapWellKnownTypes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MapWellKnownTypes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.MapWellKnownTypes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.MapWellKnownTypes)
    MergeFrom(*source);
  }
}

void MapWellKnownTypes::MergeFrom(const MapWellKnownTypes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.MapWellKnownTypes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  any_field_.MergeFrom(from.any_field_);
  api_field_.MergeFrom(from.api_field_);
  duration_field_.MergeFrom(from.duration_field_);
  empty_field_.MergeFrom(from.empty_field_);
  field_mask_field_.MergeFrom(from.field_mask_field_);
  source_context_field_.MergeFrom(from.source_context_field_);
  struct_field_.MergeFrom(from.struct_field_);
  timestamp_field_.MergeFrom(from.timestamp_field_);
  type_field_.MergeFrom(from.type_field_);
  double_field_.MergeFrom(from.double_field_);
  float_field_.MergeFrom(from.float_field_);
  int64_field_.MergeFrom(from.int64_field_);
  uint64_field_.MergeFrom(from.uint64_field_);
  int32_field_.MergeFrom(from.int32_field_);
  uint32_field_.MergeFrom(from.uint32_field_);
  bool_field_.MergeFrom(from.bool_field_);
  string_field_.MergeFrom(from.string_field_);
  bytes_field_.MergeFrom(from.bytes_field_);
}

void MapWellKnownTypes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.MapWellKnownTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapWellKnownTypes::CopyFrom(const MapWellKnownTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.MapWellKnownTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapWellKnownTypes::IsInitialized() const {
  return true;
}

void MapWellKnownTypes::InternalSwap(MapWellKnownTypes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  any_field_.Swap(&other->any_field_);
  api_field_.Swap(&other->api_field_);
  duration_field_.Swap(&other->duration_field_);
  empty_field_.Swap(&other->empty_field_);
  field_mask_field_.Swap(&other->field_mask_field_);
  source_context_field_.Swap(&other->source_context_field_);
  struct_field_.Swap(&other->struct_field_);
  timestamp_field_.Swap(&other->timestamp_field_);
  type_field_.Swap(&other->type_field_);
  double_field_.Swap(&other->double_field_);
  float_field_.Swap(&other->float_field_);
  int64_field_.Swap(&other->int64_field_);
  uint64_field_.Swap(&other->uint64_field_);
  int32_field_.Swap(&other->int32_field_);
  uint32_field_.Swap(&other->uint32_field_);
  bool_field_.Swap(&other->bool_field_);
  string_field_.Swap(&other->string_field_);
  bytes_field_.Swap(&other->bytes_field_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MapWellKnownTypes::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestWellKnownTypes* Arena::CreateMaybeMessage< ::protobuf_unittest::TestWellKnownTypes >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::TestWellKnownTypes >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::RepeatedWellKnownTypes* Arena::CreateMaybeMessage< ::protobuf_unittest::RepeatedWellKnownTypes >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::RepeatedWellKnownTypes >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::OneofWellKnownTypes* Arena::CreateMaybeMessage< ::protobuf_unittest::OneofWellKnownTypes >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::OneofWellKnownTypes >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_AnyFieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_AnyFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_AnyFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_ApiFieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_ApiFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_ApiFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_DurationFieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_DurationFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_DurationFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_EmptyFieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_EmptyFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_EmptyFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_FieldMaskFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_SourceContextFieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_SourceContextFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_SourceContextFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_StructFieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_StructFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_StructFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_TimestampFieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_TimestampFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_TimestampFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_TypeFieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_TypeFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_TypeFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_DoubleFieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_DoubleFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_DoubleFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_FloatFieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_FloatFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_FloatFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_Int64FieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_Int64FieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_Int64FieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_Uint64FieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_Uint64FieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_Uint64FieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_Int32FieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_Int32FieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_Int32FieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_Uint32FieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_Uint32FieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_Uint32FieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_BoolFieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_BoolFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_BoolFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_StringFieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_StringFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_StringFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes_BytesFieldEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes_BytesFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes_BytesFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MapWellKnownTypes* Arena::CreateMaybeMessage< ::protobuf_unittest::MapWellKnownTypes >(Arena* arena) {
  return Arena::CreateInternal< ::protobuf_unittest::MapWellKnownTypes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
