<?xml version="1.0" standalone="yes"?>
<library-reference id="interval_container_library_reference"><title>Interval Container Library Reference</title><header id="doxygen.interval_container_library_reference.associative__element__container_8hpp" name="boost/icl/associative_element_container.hpp">
</header>
<header id="doxygen.interval_container_library_reference.associative__interval__container_8hpp" name="boost/icl/associative_interval_container.hpp">
</header>
<header id="doxygen.interval_container_library_reference.closed__interval_8hpp" name="boost/icl/closed_interval.hpp">
<namespace name="boost">
<namespace name="icl">
<class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval" name="closed_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
    </template><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1a03c13b60874241cc01580c98e73fec30" name="type"><type><classname>closed_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1a1cb3553d36bcdae8d06cfee4ae31aca7" name="domain_type"><type>DomainT</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1acdb2fd8e908b0e0ec7b10b8ecbf26955" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1a6666799e6de65e7f7003eeaf3dc061bf"><description><para>Default constructor; yields an empty interval <computeroutput>[0,0)</computeroutput>. </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1a9a62d3f025479fd23db2d5ffdb3f085b" specifiers="explicit"><parameter name="val"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Constructor for a closed singleton interval <computeroutput>[val,val]</computeroutput> </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1ac9d31338c3413fa22061ebf919af2b01"><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Interval from <computeroutput>low</computeroutput> to <computeroutput>up</computeroutput> with bounds <computeroutput>bounds</computeroutput> </para></description></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1a9697aaf5db95bd0a8bdadd99c99fb643" name="lower" cv="const"><type>DomainT</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1af05aef6c1bb47a5ecc4c24fcb61cbba6" name="upper" cv="const"><type>DomainT</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1a73c10f48934ba3c5addc583d1a45d1a5" name="first" cv="const"><type>DomainT</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1a5dc28179f3b030a2360ce6342680f12b" name="last" cv="const"><type>DomainT</type></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01closed__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_bound_type"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>closed_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1a751e835787a85d52c0807ae4d73cbc4d" name="type"><type>interval_bound_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1a28ecc6dedc965f38f4151e1405679371" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>interval_bounds::static_closed</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::closed_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1a0267daa20bb9555385e6614ab575ce39" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1a80012385ccc4cb3383316e7f1f60ce60" name="interval_type"><type><classname>icl::closed_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1ac74eaeeaaabdf169c0d37c9abd775468" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1a9812fffee17d2b294547cb653319f1af" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1af244c91707f8a4a64301101e855c8af7" name="lower" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1ab4f33fdcf4a40e298dda97bac9c1cf33" name="upper" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::closed_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1a6665276bba5a570e5dea2fb64cf6f2ce" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1closed__interval_3_01DomainT_01_4_01_4" name="value_size"><template>
      <template-type-parameter name="DomainT"/>
    </template><specialization><template-arg>icl::closed_interval&lt; DomainT &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1closed__interval_3_01DomainT_01_4_01_4_1a65ff518631650880a93dc8ba332fbd3c" name="apply" specifiers="static"><type>std::size_t</type><parameter name=""><paramtype>const <classname>icl::closed_interval</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.continuous__interval_8hpp" name="boost/icl/continuous_interval.hpp">
<namespace name="boost">
<namespace name="icl">
<class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval" name="continuous_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
    </template><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a9ee8bb5ee5ad5d9d100d44b7e8c822c4" name="type"><type><classname>continuous_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1aba3aa2029935fdaf7315d6f2fbaafaee" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a79d1a66e7d35a2ccf813399ab4dfd0f8" name="bounded_domain_type"><type><classname>bounded_value</classname>&lt; DomainT &gt;::type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a2bb6436417b7a544553534547cd778fb" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a119d9854decdfb6eabecac539df2de92"><description><para>Default constructor; yields an empty interval <computeroutput>[0,0)</computeroutput>. </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a44eb0948540b76b84fbbf4132a7226a2" specifiers="explicit"><parameter name="val"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Constructor for a closed singleton interval <computeroutput>[val,val]</computeroutput> </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1ac4a6a107887ae44813be7ede72a3c4e7"><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="bounds"><paramtype><classname>interval_bounds</classname></paramtype><default>interval_bounds::right_open()</default></parameter><parameter name=""><paramtype><classname>continuous_interval</classname> *</paramtype><default>0</default></parameter><description><para>Interval from <computeroutput>low</computeroutput> to <computeroutput>up</computeroutput> with bounds <computeroutput>bounds</computeroutput> </para></description></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a701e03faccff5ad1b5806205300639d4" name="lower" cv="const"><type>domain_type</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1adcb1276aa7e3d2abb10d12e6650a97fc" name="upper" cv="const"><type>domain_type</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a77e2ad72a3062d0b9b60c285b29d2567" name="bounds" cv="const"><type><classname>interval_bounds</classname></type></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a5af93efafce4a3729ed24275d8ca77b7" name="open" specifiers="static"><type><classname>continuous_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a02644d54aa640633ce72d493f86823ce" name="right_open" specifiers="static"><type><classname>continuous_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a0db6d486751fe422c2742db63d7bc6f9" name="left_open" specifiers="static"><type><classname>continuous_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1aa4038363ffdbe7743e203eec0754bb73" name="closed" specifiers="static"><type><classname>continuous_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4" name="dynamic_interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>boost::icl::continuous_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a754c86c363a6986c19839905bc5bb1bd" name="type"><type><classname>dynamic_interval_traits</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a4a756bf92214f2119faa355a6828a0c0" name="interval_type"><type><classname>boost::icl::continuous_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a490b8a98ff56eabb8148918d7c545363" name="domain_type"><type>DomainT</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1ad85c87f8ce1f60de8caf2bf0be535a27" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a8d1c504fb1929dd3576a2fdac43b9e42" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type</paramtype></parameter><parameter name="up"><paramtype>const domain_type</paramtype></parameter><parameter name="bounds"><paramtype><classname>interval_bounds</classname></paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1ab072179fae5acc71cbb0250a85f63766" name="construct_bounded" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const <classname>bounded_value</classname>&lt; DomainT &gt; &amp;</paramtype></parameter><parameter name="up"><paramtype>const <classname>bounded_value</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01continuous__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_bound_type"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>continuous_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1aa033f5dd2f4023ff0fb20d2abe801108" name="type"><type>interval_bound_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a098b589d805636ade37bdb69f15bc2cd" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>interval_bounds::dynamic</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::continuous_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a846025d2daaa8d32c3e26199424ce1a8" name="type"><type><classname>interval_traits</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a7e67b6ac1822cf7be42aed551bfdfa10" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1ad119fd82727b401e35b815a79f9e0c4e" name="interval_type"><type><classname>icl::continuous_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a0ed10027ea6ac91c967d9b003fb8216c" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1ac3a9049ce1e06e85b5c95b852e33f5ee" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a7c1462b118c0084d18fe1cf00ab59b2c" name="lower" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a69745f96bbadcbae59b96bc593618f48" name="upper" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__continuous__interval_3_01continuous__interval_3_01DomainT_00_01Compare_01_4_01_4" name="is_continuous_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>continuous_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__continuous__interval_3_01continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a759f6cf023aca99382ef1a39028af200" name="type"><type>is_continuous_interval&lt; <classname>continuous_interval</classname>&lt; DomainT, Compare &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__continuous__interval_3_01continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1aa7110eebc3fda60293a693c0e5cf51d4" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::continuous_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a19b750ecd90a025c91f33f2bbd2c23b5" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1continuous__interval_3_01DomainT_01_4_01_4" name="value_size"><template>
      <template-type-parameter name="DomainT"/>
    </template><specialization><template-arg>icl::continuous_interval&lt; DomainT &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1continuous__interval_3_01DomainT_01_4_01_4_1a5e8dd0f66a17b8720eadbbff93e96871" name="apply" specifiers="static"><type>std::size_t</type><parameter name=""><paramtype>const <classname>icl::continuous_interval</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.discrete__interval_8hpp" name="boost/icl/discrete_interval.hpp">
<namespace name="boost">
<namespace name="icl">
<class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval" name="discrete_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
    </template><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1ada80017197857b61a6597d21e6a1f5d5" name="type"><type><classname>discrete_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1a60c1ce394fe59a9a3cf0b15fc78ccccf" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1af508a32a192c11bf681308faf6a3ad94" name="bounded_domain_type"><type><classname>bounded_value</classname>&lt; DomainT &gt;::type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1ab13795f748004fd8f866e68dd7e4b09f" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1afaefda0b85d1cf0307fbdcf431b91041"><description><para>Default constructor; yields an empty interval <computeroutput>[0,0)</computeroutput>. </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1a95e4747b097a68d8b55be8194410b2c8" specifiers="explicit"><parameter name="val"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Constructor for a closed singleton interval <computeroutput>[val,val]</computeroutput> </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1ad947dc12c8a5342f4664eda78ed0fe60"><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="bounds"><paramtype><classname>interval_bounds</classname></paramtype><default>interval_bounds::right_open()</default></parameter><parameter name=""><paramtype><classname>discrete_interval</classname> *</paramtype><default>0</default></parameter><description><para>Interval from <computeroutput>low</computeroutput> to <computeroutput>up</computeroutput> with bounds <computeroutput>bounds</computeroutput> </para></description></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1aa7d3838ba4fb03c48b7933491173274e" name="lower" cv="const"><type>domain_type</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1ad04f2ccd0bd520bce134922bc69bb134" name="upper" cv="const"><type>domain_type</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1ad1fb240d22bd5e5ea2117664aad8529c" name="bounds" cv="const"><type><classname>interval_bounds</classname></type></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1a8a62b297ea129044ff1319231c558f7e" name="open" specifiers="static"><type><classname>discrete_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1a1966f8c1697e05d7e060b89aa16ea072" name="right_open" specifiers="static"><type><classname>discrete_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1ac7ff001d78347e99e9f9190fa12bf873" name="left_open" specifiers="static"><type><classname>discrete_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1a5cbd485de2fb73848a62cdd5c63d9013" name="closed" specifiers="static"><type><classname>discrete_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4" name="dynamic_interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>boost::icl::discrete_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a32d17e7d0648b702a6c5ab35be1d6128" name="type"><type><classname>dynamic_interval_traits</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a37c94e76a1af306daff8a44f0c37031b" name="interval_type"><type><classname>boost::icl::discrete_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a6020dc4dfab7731cdb447e2ea198526a" name="domain_type"><type>DomainT</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1af1991230e5c445aeb562113c7e9e1411" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1ac530487ca6e7e0c11407c92bb2f09569" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="bounds"><paramtype><classname>interval_bounds</classname></paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a8e21bfc42156cc727e6cae38d265e6e9" name="construct_bounded" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const <classname>bounded_value</classname>&lt; DomainT &gt; &amp;</paramtype></parameter><parameter name="up"><paramtype>const <classname>bounded_value</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01discrete__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_bound_type"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>discrete_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a08b357bd4e728463140d9d3237a31a06" name="type"><type>interval_bound_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1ae86b8b5c960ad4e81db0d371e3a82b5e" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>interval_bounds::dynamic</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::discrete_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1acd8da04bd04b79dee481cdfdb940e4ef" name="type"><type><classname>interval_traits</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1adedd992b43c7208f6fbbd030e37348c7" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1ab174934ff3040c691eef29c6f7cceaab" name="interval_type"><type><classname>icl::discrete_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1ad576c84fecc647ab37546c2560766430" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a4221e4ee43e5793118cfeee0c8cafd72" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a4b2cdb24d2f83fcd4dc707c4552cf70f" name="lower" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a559d7ef459741cc4bb25c0e2dd73fb96" name="upper" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete__interval_3_01discrete__interval_3_01DomainT_00_01Compare_01_4_01_4" name="is_discrete_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>discrete_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete__interval_3_01discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a236d2c4710b39139f1a7db88e31bb50e" name="type"><type>is_discrete_interval&lt; <classname>discrete_interval</classname>&lt; DomainT, Compare &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete__interval_3_01discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1af1ba234ce1bd54f52f04a05e1d9ce4ed" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>is_discrete&lt; DomainT &gt;::value</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::discrete_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1ac67a819980826cf30de32486a2cb9c13" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1discrete__interval_3_01DomainT_01_4_01_4" name="value_size"><template>
      <template-type-parameter name="DomainT"/>
    </template><specialization><template-arg>icl::discrete_interval&lt; DomainT &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1discrete__interval_3_01DomainT_01_4_01_4_1a83c361c6304661394be1f942c7a907cc" name="apply" specifiers="static"><type>std::size_t</type><parameter name=""><paramtype>const <classname>icl::discrete_interval</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.dynamic__interval__traits_8hpp" name="boost/icl/dynamic_interval_traits.hpp">
<namespace name="boost">
<namespace name="icl">
<struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits" name="dynamic_interval_traits"><template>
      <template-type-parameter name="Type"/>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_1aeb3a6d85a5b36e3c38e81e6415195a68" name="domain_type"><type>Type::domain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_1a01db53a5e9cf331ee24f822c194da6bb" name="domain_compare"><type>Type::domain_compare</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_1aff05fdcf1ee92a2d678d38125091734e" name="construct" specifiers="static"><type>Type</type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="bounds"><paramtype><classname>interval_bounds</classname></paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_1a8124713954b1881511f497205c22aba2" name="construct_bounded" specifiers="static"><type>Type</type><parameter name="lo"><paramtype>const <classname>bounded_value</classname>&lt; domain_type &gt; &amp;</paramtype></parameter><parameter name="up"><paramtype>const <classname>bounded_value</classname>&lt; domain_type &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.functors_8hpp" name="boost/icl/functors.hpp">
<namespace name="boost">
<namespace name="icl">
<struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1conversion" name="conversion"><template>
      <template-type-parameter name="Combiner"/>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1conversion_1a6c5d0a8b4ea3e3fd498d164e477177c5" name="type"><type><classname>conversion</classname>&lt; Combiner &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1conversion_1ab29b60c12b14a092ceaedbee0510461b" name="argument_type"><type>remove_const&lt; typenameremove_reference&lt; typenameCombiner::first_argument_type &gt;::type &gt;::type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1conversion_1a10de5ae7421e8926268c55571815dd28" name="proversion" specifiers="static"><type>argument_type</type><parameter name="value"><paramtype>const argument_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1conversion_1aee4bc89ab0f18e12e47ccecf38690a50" name="inversion" specifiers="static"><type>argument_type</type><parameter name="value"><paramtype>const argument_type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1identity__based__inplace__combine" name="identity_based_inplace_combine"><template>
      <template-type-parameter name="Type"/>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1identity__based__inplace__combine_1ab81fb62eb3f6eeffe305a178383c4e39" name="first_argument_type"><type>Type &amp;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1identity__based__inplace__combine_1a3da836676bf9da5e5de98df221593aa5" name="second_argument_type"><type>const Type &amp;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1identity__based__inplace__combine_1af2ab928e65ccf428883cfb85b6af826d" name="result_type"><type>void</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1identity__based__inplace__combine_1a9092fb2e8321cbfd76bf5eb040ffe497" name="identity_element" specifiers="static"><type>Type</type></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__add" name="inplace_bit_add"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__add_1a0230414aa1520a3b1b80a9a07945a684" name="type"><type><classname>inplace_bit_add</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__add_1a85fa6bdab068b0f89ea503351b89bf4e" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__add_1a7c58ef4527d90bfef488ed69a2f59f19" name="version" specifiers="static"><type>void</type><parameter name=""><paramtype>Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__and" name="inplace_bit_and"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__and_1ab397573f538bd6d06ecfa3078be009b9" name="type"><type><classname>inplace_bit_and</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__and_1a0b54de21aa76b4cf1c8e44007c644880" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__subtract" name="inplace_bit_subtract"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__subtract_1ad18e189508e2c3a9f28eff1ed71ad713" name="type"><type><classname>inplace_bit_subtract</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__subtract_1a74a140404318a5bb6c87019da7b7e38a" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__xor" name="inplace_bit_xor"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__xor_1ad78a2dc63c3335fb3c94a9b3e6372289" name="type"><type><classname>inplace_bit_xor</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__xor_1ad33c7178ca784205578317c6e8330d08" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__caret" name="inplace_caret"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__caret_1ae9703acb8975d5e5340cb34dadfea9af" name="type"><type><classname>inplace_caret</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__caret_1aa4be116ce86b061e6588fb48e49c38a1" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__erase" name="inplace_erase"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__erase_1a131314c846812ae24991fa403c82724f" name="type"><type><classname>inplace_erase</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__erase_1a642684114298e670f00e2dca0a112380" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__erasure" name="inplace_erasure"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__erasure_1afafd02181c89d9ff9e5f14c25d6d2504" name="type"><type><classname>inplace_erasure</classname>&lt; Type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__erasure_1aba11ba1640432a9023a7b3fb70d6e70a" name="base_type"><type><classname>identity_based_inplace_combine</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__erasure_1a03adeb90759434adcc9a67c0906e218d" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__et" name="inplace_et"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__et_1a7cf0d22f45092bbe5b6a58ff7806250c" name="type"><type><classname>inplace_et</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__et_1aa5d8335da7013e061b10a205a72b8f35" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__identity" name="inplace_identity"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__identity_1a2e2b4fab532f6314f45d5a3b37dac435" name="type"><type><classname>inplace_identity</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__identity_1ab3e69b9f7ce57576dd54648f07def6d5" name="operator()" cv="const"><type>void</type><parameter name=""><paramtype>Type &amp;</paramtype></parameter><parameter name=""><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__insert" name="inplace_insert"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__insert_1a98e1369e0444dbf57e6a4145dba08476" name="type"><type><classname>inplace_insert</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__insert_1a089a2b5b15ef7e8cdfe008f2b03aad32" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__max" name="inplace_max"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__max_1a2c0341f0f714263d5c3b093aa549ef29" name="type"><type><classname>inplace_max</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__max_1a44c327c714063d62a0d166da4905ad40" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__min" name="inplace_min"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__min_1a7184d6d8d4046221e752fb65f53e9345" name="type"><type><classname>inplace_min</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__min_1a553398034b937d93d92f2f3272ba1cd9" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__minus" name="inplace_minus"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__minus_1af279a783c5461208e569278f420c8f73" name="type"><type><classname>inplace_minus</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__minus_1a23af80030e38eb60df35764513c3e925" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__plus" name="inplace_plus"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__plus_1a7eb122cb70e0dc912621b96bc1dc031d" name="type"><type><classname>inplace_plus</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__plus_1a05f6dc21b327defb2fb6c8b9700ad0a5" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__plus_1a488e598722f13553d3126969a849a270" name="version" specifiers="static"><type>void</type><parameter name=""><paramtype>Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__slash" name="inplace_slash"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__slash_1a9c4c4aa444020525c30bf3fb032de333" name="type"><type><classname>inplace_slash</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__slash_1a6749b1594a5481cbebc1b90dd0427335" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__star" name="inplace_star"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__star_1a9ea1d95a7c72a41ccc6f3181880291a4" name="type"><type><classname>inplace_star</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__star_1a6667f56b76933aaf67a9c96b7faaff26" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inter__section" name="inter_section"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inter__section_1a69824a1114a5c1eab448486ce6772e85" name="type"><type>boost::mpl::if_&lt; has_set_semantics&lt; Type &gt;, <classname>icl::inplace_et</classname>&lt; Type &gt;, <classname>icl::inplace_plus</classname>&lt; Type &gt; &gt;::type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inter__section_1a3f1e2b98c708ced7df0520e9af1e0a17" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse" name="inverse"><template>
      <template-type-parameter name="Functor"/>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_1a7c1935fc1f6711bbcbde7869235bc591" name="argument_type"><type>remove_reference&lt; typenameFunctor::first_argument_type &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_1a928dad70f20eceba9ef73f75a7e2f4c1" name="type"><type><classname>icl::inplace_erasure</classname>&lt; argument_type &gt;</type></typedef>
</struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__add_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_bit_add&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__add_3_01Type_01_4_01_4_1a4dd295e6a41cba4a6ecbd2886b3e3c45" name="type"><type><classname>icl::inplace_bit_subtract</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__and_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_bit_and&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__and_3_01Type_01_4_01_4_1a36f50b6ff76b76354f9e19b413b0fe7a" name="type"><type><classname>icl::inplace_bit_xor</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__subtract_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_bit_subtract&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__subtract_3_01Type_01_4_01_4_1a5d16485a2ba239533ee4488b7474193c" name="type"><type><classname>icl::inplace_bit_add</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__xor_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_bit_xor&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__xor_3_01Type_01_4_01_4_1a274665d1e96325e8832734be621dd723" name="type"><type><classname>icl::inplace_bit_and</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__caret_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_caret&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__caret_3_01Type_01_4_01_4_1a3bbef437e6b660c85e7cda936b90a382" name="type"><type><classname>icl::inplace_et</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__et_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_et&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__et_3_01Type_01_4_01_4_1aaac3afe42f31932ce621980b2e6edcff" name="type"><type><classname>icl::inplace_caret</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__identity_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_identity&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__identity_3_01Type_01_4_01_4_1ad37338e88bf3cb1318629d4f90636e1b" name="type"><type><classname>icl::inplace_erasure</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__max_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_max&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__max_3_01Type_01_4_01_4_1a96fcaf40d91ae5c4eaa9bcf91881c258" name="type"><type><classname>icl::inplace_min</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__min_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_min&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__min_3_01Type_01_4_01_4_1a86d4e5f72101ab62b9dcb2e674f3187e" name="type"><type><classname>icl::inplace_max</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_minus&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4_1a5143dd852b074f2c37600a6cf26d2713" name="type"><type><classname>icl::inplace_plus</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__plus_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_plus&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__plus_3_01Type_01_4_01_4_1a2e48e0fd7525a44a450bf03084152d19" name="type"><type><classname>icl::inplace_minus</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__slash_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_slash&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__slash_3_01Type_01_4_01_4_1ab9ff34fa2344704792a6be2e213be8cd" name="type"><type><classname>icl::inplace_star</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__star_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_star&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__star_3_01Type_01_4_01_4_1ad7a6ce1714ee7c0ae8861d6f2b5842b6" name="type"><type><classname>icl::inplace_slash</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inter__section_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inter_section&lt; Type &gt;</template-arg></specialization><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inter__section_3_01Type_01_4_01_4_1a9c37acbfc8d0c28002d3dd7d9a8d5025" name="type"><type>boost::mpl::if_&lt; has_set_semantics&lt; Type &gt;, <classname>icl::inplace_caret</classname>&lt; Type &gt;, <classname>icl::inplace_minus</classname>&lt; Type &gt; &gt;::type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inter__section_3_01Type_01_4_01_4_1ab06009a5705cef40d449073e9ca8b333" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative" name="is_negative"><template>
      <template-type-parameter name="Functor"/>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_1a29bc2c7ef9904a7f59694ec1aa21d1a1" name="type"><type><classname>is_negative</classname>&lt; Functor &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_1a7bc88a9d708959f598c2b210918994bc" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>false</default></parameter></method>
</method-group>
</struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_3_01icl_1_1inplace__bit__subtract_3_01Type_01_4_01_4" name="is_negative"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_bit_subtract&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_3_01icl_1_1inplace__bit__subtract_3_01Type_01_4_01_4_1ae8e77fd28cebf79002d9e539f7c6d511" name="type"><type><classname>is_negative</classname></type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_3_01icl_1_1inplace__bit__subtract_3_01Type_01_4_01_4_1a161d61298f1c96a6b742f957ea739296" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4" name="is_negative"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_minus&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4_1a2a80b0eb1e24467ef9fc234867020f89" name="type"><type><classname>is_negative</classname></type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4_1a917e2870af3148ec72fc4188129c9881" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1unit__element__based__inplace__combine" name="unit_element_based_inplace_combine"><template>
      <template-type-parameter name="Type"/>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1unit__element__based__inplace__combine_1a9fe9055916256102c02c7e247142e59a" name="first_argument_type"><type>Type &amp;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1unit__element__based__inplace__combine_1a26c4334b3f7bdd6e123793ede3df5427" name="second_argument_type"><type>const Type &amp;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1unit__element__based__inplace__combine_1a937f7a1d4af570175b4907e069a5ced2" name="result_type"><type>void</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1unit__element__based__inplace__combine_1ac01b39af79237c45828bd10b8e8953cf" name="identity_element" specifiers="static"><type>Type</type></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version" name="version"><template>
      <template-type-parameter name="Combiner"/>
    </template><inherit access="public">boost::icl::conversion&lt; Combiner &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_1acce47b1782616ec37b44c07d44973cf7" name="type"><type><classname>version</classname>&lt; Combiner &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_1ac6f0ff79bd5621e37d2d58d90579eb41" name="base_type"><type><classname>conversion</classname>&lt; Combiner &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_1a4148c46fee7d5e2ec57b1a73580519e2" name="argument_type"><type>base_type::argument_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_1aeef3b602469a3f73acc201daa885053c" name="operator()"><type>argument_type</type><parameter name="value"><paramtype>const argument_type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01double_01_4_01_4" name="version"><template>
    </template><specialization><template-arg>icl::inplace_minus&lt; double &gt;</template-arg></specialization><method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01double_01_4_01_4_1ab6d86c8864931a1eb5f7150de38ed182" name="operator()"><type>double</type><parameter name="val"><paramtype>double</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01float_01_4_01_4" name="version"><template>
    </template><specialization><template-arg>icl::inplace_minus&lt; float &gt;</template-arg></specialization><method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01float_01_4_01_4_1a7782cee3cf0507c350f5b67b5bc4ffb0" name="operator()"><type>float</type><parameter name="val"><paramtype>float</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01int_01_4_01_4" name="version"><template>
    </template><specialization><template-arg>icl::inplace_minus&lt; int &gt;</template-arg></specialization><method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01int_01_4_01_4_1aa74250df0ecf76fb72a083e27f3a2638" name="operator()"><type>int</type><parameter name="val"><paramtype>int</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01long_01_4_01_4" name="version"><template>
    </template><specialization><template-arg>icl::inplace_minus&lt; long &gt;</template-arg></specialization><method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01long_01_4_01_4_1ac6a808ebac2c639aff314c245a0e510c" name="operator()"><type>long</type><parameter name="val"><paramtype>long</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01long_01double_01_4_01_4" name="version"><template>
    </template><specialization><template-arg>icl::inplace_minus&lt; long double &gt;</template-arg></specialization><method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01long_01double_01_4_01_4_1a182034764dea5858db33f406eb6ce84c" name="operator()"><type>long double</type><parameter name="val"><paramtype>long double</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01long_01long_01_4_01_4" name="version"><template>
    </template><specialization><template-arg>icl::inplace_minus&lt; long long &gt;</template-arg></specialization><method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01long_01long_01_4_01_4_1aa7ced2f95655d4ee14446ad4e6cc3b01" name="operator()"><type>long long</type><parameter name="val"><paramtype>long long</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01short_01_4_01_4" name="version"><template>
    </template><specialization><template-arg>icl::inplace_minus&lt; short &gt;</template-arg></specialization><method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01short_01_4_01_4_1a2a4194e97c66a4d152c53ab52b34899e" name="operator()"><type>short</type><parameter name="val"><paramtype>short</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4" name="version"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_minus&lt; Type &gt;</template-arg></specialization><inherit access="public">boost::icl::conversion&lt; icl::inplace_minus&lt; Type &gt; &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4_1aff48b8ede824ba76040b37470dbbc8f0" name="type"><type><classname>version</classname>&lt; <classname>icl::inplace_minus</classname>&lt; Type &gt; &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4_1a932e62aaf46a8ce8ef2675843f3a1500" name="base_type"><type><classname>conversion</classname>&lt; <classname>icl::inplace_minus</classname>&lt; Type &gt; &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4_1a8d970c6e01e9c4d25d670bae5c192cf2" name="argument_type"><type>base_type::argument_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4_1a6f2ecc3e17c87849b0f982322bc9b30a" name="operator()"><type>Type</type><parameter name="value"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.gregorian_8hpp" name="boost/icl/gregorian.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1difference__type__of_3_01boost_1_1gregorian_1_1date_01_4" name="difference_type_of"><template>
    </template><specialization><template-arg>boost::gregorian::date</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1difference__type__of_3_01boost_1_1gregorian_1_1date_01_4_1a90b0f529d46d5f1358cd1e5bd2076464" name="type"><type>boost::gregorian::date_duration</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1gregorian_1_1date_01_4" name="has_difference"><template>
    </template><specialization><template-arg>boost::gregorian::date</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1gregorian_1_1date_01_4_1a84843f5ba4e20130a19e9d7ec5e1d17e" name="type"><type>has_difference</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1gregorian_1_1date_01_4_1a972ba647bca2986a90a3c6a0f695b901" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1gregorian_1_1date__duration_01_4" name="has_difference"><template>
    </template><specialization><template-arg>boost::gregorian::date_duration</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1gregorian_1_1date__duration_01_4_1a89ec4bee0290eea85a1076f10dfac7a7" name="type"><type>has_difference</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1gregorian_1_1date__duration_01_4_1a3acc26eabcaffb699c28c59eca089bd2" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1identity__element_3_01boost_1_1gregorian_1_1date__duration_01_4" name="identity_element"><template>
    </template><specialization><template-arg>boost::gregorian::date_duration</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1identity__element_3_01boost_1_1gregorian_1_1date__duration_01_4_1af1d9ed652fab79e3032f28adf7fa3e3f" name="value" specifiers="static"><type>boost::gregorian::date_duration</type></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1gregorian_1_1date_01_4" name="is_discrete"><template>
    </template><specialization><template-arg>boost::gregorian::date</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1gregorian_1_1date_01_4_1afb60075f22c76e699d2cc75f34fad8fb" name="type"><type>is_discrete</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1gregorian_1_1date_01_4_1a30ab97779a793ea3e1db42d9bd2edcf0" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1gregorian_1_1date__duration_01_4" name="is_discrete"><template>
    </template><specialization><template-arg>boost::gregorian::date_duration</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1gregorian_1_1date__duration_01_4_1af646615749a3c2c1bbb22e445b1997a9" name="type"><type>is_discrete</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1gregorian_1_1date__duration_01_4_1a7054352a0293ad6e547445a84920e2ea" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1gregorian_1_1date_01_4" name="size_type_of"><template>
    </template><specialization><template-arg>boost::gregorian::date</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1gregorian_1_1date_01_4_1aeb077ff6d68a9fda60bdec6a9986f814" name="type"><type>boost::gregorian::date_duration</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1gregorian_1_1date__duration_01_4" name="size_type_of"><template>
    </template><specialization><template-arg>boost::gregorian::date_duration</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1gregorian_1_1date__duration_01_4_1ae266385ae7facddfaa94cc9f8c170042" name="type"><type>boost::gregorian::date_duration</type></typedef>
</struct-specialization>





<function id="doxygen.interval_container_library_reference.gregorian_8hpp_1aeef60672fc652f3147762c309d5eb27d" name="operator++"><type>boost::gregorian::date</type><parameter name="x"><paramtype>boost::gregorian::date &amp;</paramtype></parameter></function>
<function id="doxygen.interval_container_library_reference.gregorian_8hpp_1a92d61708c18d96cddda87aeeb1f61f08" name="operator--"><type>boost::gregorian::date</type><parameter name="x"><paramtype>boost::gregorian::date &amp;</paramtype></parameter></function>
<function id="doxygen.interval_container_library_reference.gregorian_8hpp_1afd551c7225759365c82b46fbceca30d9" name="operator++"><type>boost::gregorian::date_duration</type><parameter name="x"><paramtype>boost::gregorian::date_duration &amp;</paramtype></parameter></function>
<function id="doxygen.interval_container_library_reference.gregorian_8hpp_1a213cb4177a8e834f9dcdc52da0ca5a82" name="operator--"><type>boost::gregorian::date_duration</type><parameter name="x"><paramtype>boost::gregorian::date_duration &amp;</paramtype></parameter></function>
</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.impl__config_8hpp" name="boost/icl/impl_config.hpp">
<macro id="doxygen.interval_container_library_reference.impl__config_8hpp_1a85881bcdeb2b78994091f803f63a33a5" name="ICL_IMPL_SPACE"/>
</header>
<header id="doxygen.interval_container_library_reference.interval_8hpp" name="boost/icl/interval.hpp">
<namespace name="boost">
<namespace name="icl">
<struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval" name="interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval_1a2af094a11bc3b3404e176ef0c1c71172" name="interval_type"><type>interval_type_default&lt; DomainT, Compare &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval_1a56311b74ada76693cad78d848045ec0e" name="type"><type>interval_type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval_1a7004983e08bd0479a123aa14e1565755" name="right_open" specifiers="static"><type>interval_type</type><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval_1a851ece6bbeb902e6ee755458a433dea1" name="left_open" specifiers="static"><type>interval_type</type><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval_1a54d7d45e8be1bc3fef8e09794b683377" name="open" specifiers="static"><type>interval_type</type><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval_1a9dfe93a0e1dbed167b3d314f6e543408" name="closed" specifiers="static"><type>interval_type</type><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval_1a5750ef09e3d3c90d94c8b6193ef7fc2f" name="construct" specifiers="static"><type>interval_type</type><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1static__interval" name="static_interval"><template>
      <template-type-parameter name="IntervalT"/>
      <template-nontype-parameter name="IsDiscrete"><type>bool</type></template-nontype-parameter>
      <template-nontype-parameter name="PretendedBounds"><type>bound_type</type></template-nontype-parameter>
      <template-nontype-parameter name="RepresentedBounds"><type>bound_type</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1static__interval_3_01IntervalT_00_01false_00_01PretendedBounds_00_01RepresentedBounds_01_4" name="static_interval"><template>
      <template-type-parameter name="IntervalT"/>
      <template-nontype-parameter name="PretendedBounds"><type>bound_type</type></template-nontype-parameter>
      <template-nontype-parameter name="RepresentedBounds"><type>bound_type</type></template-nontype-parameter>
    </template><specialization><template-arg>IntervalT</template-arg><template-arg>false</template-arg><template-arg>PretendedBounds</template-arg><template-arg>RepresentedBounds</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1static__interval_3_01IntervalT_00_01false_00_01PretendedBounds_00_01RepresentedBounds_01_4_1a6c71338745e989c65b6302b57c857571" name="domain_type"><type><classname>interval_traits</classname>&lt; IntervalT &gt;::domain_type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1static__interval_3_01IntervalT_00_01false_00_01PretendedBounds_00_01RepresentedBounds_01_4_1aa56c31255dd4410403529dda8561a4b6" name="construct" specifiers="static"><type>IntervalT</type><parameter name="low"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1static__interval_3_01IntervalT_00_01true_00_01PretendedBounds_00_01RepresentedBounds_01_4" name="static_interval"><template>
      <template-type-parameter name="IntervalT"/>
      <template-nontype-parameter name="PretendedBounds"><type>bound_type</type></template-nontype-parameter>
      <template-nontype-parameter name="RepresentedBounds"><type>bound_type</type></template-nontype-parameter>
    </template><specialization><template-arg>IntervalT</template-arg><template-arg>true</template-arg><template-arg>PretendedBounds</template-arg><template-arg>RepresentedBounds</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1static__interval_3_01IntervalT_00_01true_00_01PretendedBounds_00_01RepresentedBounds_01_4_1af0710e8fc3475817fb99f2eae799a9c7" name="domain_type"><type><classname>interval_traits</classname>&lt; IntervalT &gt;::domain_type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1static__interval_3_01IntervalT_00_01true_00_01PretendedBounds_00_01RepresentedBounds_01_4_1ae2169ffdbc5b674f27d822e432ab2566" name="construct" specifiers="static"><type>IntervalT</type><parameter name="low"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.interval__base__map_8hpp" name="boost/icl/interval_base_map.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1interval__base__map_3_01SubType_00_01Domain7b979512ccde65cb63a71ba44b15b23c" name="absorbs_identities"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_base_map&lt; SubType</template-arg><template-arg>DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1interval__base__map_3_01SubType_00_01Domain7b979512ccde65cb63a71ba44b15b23c_1a70c5cefd5cee0549556b3e04815704c7" name="type"><type>absorbs_identities&lt; <classname>icl::interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1interval__base__map_3_01SubType_00_01Domain7b979512ccde65cb63a71ba44b15b23c_1ad78fd74764734afb5d40c23a4e8db179" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(Traits::absorbs_identities)</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_014ceb07d16f902f3f9fa1858a0fd158e6" name="has_inverse"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_base_map&lt; SubType</template-arg><template-arg>DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_014ceb07d16f902f3f9fa1858a0fd158e6_1a98b41e25de66f901c9629200140067b7" name="type"><type>has_inverse&lt; <classname>icl::interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_014ceb07d16f902f3f9fa1858a0fd158e6_1add049d007fe1fcb595a6e88484f55245" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(has_inverse&lt; CodomainT &gt;::value)</default></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map" name="interval_base_map"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"><default>icl::partial_absorber</default></template-type-parameter>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type><default>ICL_COMBINE_INSTANCE(icl::inplace_plus, CodomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type><default>ICL_SECTION_INSTANCE(icl::inter_section, CodomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type><default>ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, Compare)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><purpose>Implements a map as a map of intervals (base class) </purpose><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="has_set_semantics"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01false_01_4" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01false_01_4_1a88454b77f9c2d3883dd79caf5aa2037e" name="interval_type"><type>Type::interval_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01false_01_4_1a2c4542abe8eb80ea9e0c7648d0802fbe" name="codomain_type"><type>Type::codomain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01false_01_4_1a5111e332b9842194e91e6c0fe3cc05a7" name="segment_type"><type>Type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01false_01_4_1a9cd095da99c503fb755236ed23cf8946" name="codomain_combine"><type>Type::codomain_combine</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01false_01_4_1a6a558e044d54c06358b90cd7eb0e7a3f" name="add" specifiers="static"><type>void</type><parameter name="intersection"><paramtype>Type &amp;</paramtype></parameter><parameter name="common_interval"><paramtype>interval_type &amp;</paramtype></parameter><parameter name=""><paramtype>const codomain_type &amp;</paramtype></parameter><parameter name=""><paramtype>const codomain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01true_01_4" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01true_01_4_1a51e628e205890370224c267bb7e48f94" name="interval_type"><type>Type::interval_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01true_01_4_1a04807b91a2577e72d62eae4812f86ba2" name="codomain_type"><type>Type::codomain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01true_01_4_1a6c4aa0434fa9e54076604be54f9e571e" name="segment_type"><type>Type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01true_01_4_1a4f959f6a4aec7a194dca2ada347c925a" name="codomain_combine"><type>Type::codomain_combine</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01true_01_4_1ac732c3c2a6f1cc87884b72a69dc4a3d9" name="inverse_codomain_intersect"><type>Type::inverse_codomain_intersect</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01true_01_4_1a72f222fd9b4148d957d2b6b980bf9d49" name="add" specifiers="static"><type>void</type><parameter name="intersection"><paramtype>Type &amp;</paramtype></parameter><parameter name="common_interval"><paramtype>interval_type &amp;</paramtype></parameter><parameter name="flip_value"><paramtype>const codomain_type &amp;</paramtype></parameter><parameter name="co_value"><paramtype>const codomain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__definedness" name="on_definedness"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="is_total"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__definedness_3_01Type_00_01false_01_4" name="on_definedness"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__definedness_3_01Type_00_01false_01_4_1ad92eddfd8e4c28d68734a9fd1db3669b" name="add_intersection" specifiers="static"><type>void</type><parameter name="section"><paramtype>Type &amp;</paramtype></parameter><parameter name="object"><paramtype>const Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const segment_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__definedness_3_01Type_00_01true_01_4" name="on_definedness"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__definedness_3_01Type_00_01true_01_4_1a3a780ff6d33eb489a48bdddde4b2a05a" name="add_intersection" specifiers="static"><type>void</type><parameter name="section"><paramtype>Type &amp;</paramtype></parameter><parameter name="object"><paramtype>const Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const segment_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible" name="on_invertible"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="is_total_invertible"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01false_01_4" name="on_invertible"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01false_01_4_1a8ecbb5bf7bb182f5b899f8ecf4c052ec" name="segment_type"><type>Type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01false_01_4_1a40c4191c29049263ba4169832430b319" name="inverse_codomain_combine"><type>Type::inverse_codomain_combine</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01false_01_4_1aed7635c999d5f9a781b1d288c45c0870" name="subtract" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const segment_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01true_01_4" name="on_invertible"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01true_01_4_1ab82ad43063a387c542e6b40c2087cbd6" name="segment_type"><type>Type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01true_01_4_1a02bceb23df05748d94f6878f79a37b5f" name="inverse_codomain_combine"><type>Type::inverse_codomain_combine</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01true_01_4_1ad25622d51f7d1ec6cba475b4fd76138a" name="subtract" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const segment_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="is_total"><type>bool</type></template-nontype-parameter>
      <template-nontype-parameter name="absorbs_identities"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="absorbs_identities"><type>bool</type></template-nontype-parameter>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg><template-arg>absorbs_identities</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1a3eaa13b95c52ff8cb1dec4f3ec93589a" name="segment_type"><type>Type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1a5a2fcde0506936959fa0833f58819add" name="codomain_type"><type>Type::codomain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1a110a11ffc0a8700d56e7f0e18bcc4822" name="interval_type"><type>Type::interval_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1a1b8c64e2a656e88152e53b6efdda2c3e" name="value_type"><type>Type::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1ad962c25e4135cbe6a1d0cd3dabd194d3" name="const_iterator"><type>Type::const_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1a9db5254f383b2f721c4b729f93d50d55" name="set_type"><type>Type::set_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1ab3fd02861d48d7e37aecb0779a92bf4d" name="inverse_codomain_intersect"><type>Type::inverse_codomain_intersect</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1ac7572bd10d0b622a404b98ed5ed36616" name="flip" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg><template-arg>false</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4_1a2bef48017185e1cfa32a334818a8268b" name="segment_type"><type>Type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4_1a5d60185c911370bd979070c16c439c18" name="codomain_type"><type>Type::codomain_type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4_1abb9fc8ec40e3ca87bf50155ed08445cf" name="flip" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const segment_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01true_00_01true_01_4" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg><template-arg>true</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01true_00_01true_01_4_1a8c04f23e012f7cd2eb76b2bad6b38db7" name="flip" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name=""><paramtype>const typename Type::segment_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a2d1d9885bfd2d9c1cfb88fd85c56c690" name="type"><type><classname>interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ab439eb695909082d8d3be2b9492a54bb" name="sub_type"><purpose>The designated <emphasis>derived</emphasis> or <emphasis>sub_type</emphasis> of this base class. </purpose><type>SubType</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a4e26a9ad284b9acf7eab0d98fb06b260" name="overloadable_type"><purpose>Auxilliary type for overloadresolution. </purpose><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a55cbd179fb6fceda007d5e04c43853fc" name="traits"><purpose>Traits of an itl map. </purpose><type>Traits</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a89378c9eed54158c10c79301c0868962" name="atomized_type"><purpose>The atomized type representing the corresponding container of elements. </purpose><type><classname>icl::map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ab8fa5049836558957e7b0e600bc794c2" name="domain_type"><purpose>Domain type (type of the keys) of the map. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a01c4cbb39ad264ce49204b27c488864a" name="domain_param"><type>boost::call_traits&lt; DomainT &gt;::param_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1acede5d468a73b90943ffa44e8f03ece1" name="codomain_type"><purpose>Domain type (type of the keys) of the map. </purpose><type>CodomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a3ef55b912e69e64927ad9f95565b6cfa" name="domain_mapping_type"><purpose>Auxiliary type to help the compiler resolve ambiguities when using std::make_pair. </purpose><type><classname>mapping_pair</classname>&lt; domain_type, codomain_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a3ff8384205e6c831d1b11a046b51f32d" name="element_type"><purpose>Conceptual is a map a set of elements of type <computeroutput>element_type</computeroutput>. </purpose><type>domain_mapping_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aa702797df442bb1facd2bfefd556ee45" name="interval_mapping_type"><purpose>Auxiliary type for overload resolution. </purpose><type>std::pair&lt; interval_type, CodomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1af2025018f8a079f90e1c047097b6a21e" name="segment_type"><purpose>Type of an interval containers segment, that is spanned by an interval. </purpose><type>std::pair&lt; interval_type, CodomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ae61cb44ae7f4e7f5435aac8a2cb969a3" name="difference_type"><purpose>The difference type of an interval which is sometimes different form the domain_type. </purpose><type>difference_type_of&lt; domain_type &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a9e6a24b182a9507fc125c0f631fd2000" name="size_type"><purpose>The size type of an interval which is mostly std::size_t. </purpose><type>size_type_of&lt; domain_type &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a37eeeb3ce315e0a3fa3bc7dfe116e986" name="inverse_codomain_combine"><purpose>Inverse Combine functor for codomain value aggregation. </purpose><type><classname>inverse</classname>&lt; codomain_combine &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a072634312b71ea9bc5514ceeb446a95b" name="codomain_intersect"><purpose>Intersection functor for codomain values. </purpose><type>mpl::if_&lt; has_set_semantics&lt; codomain_type &gt;, ICL_SECTION_CODOMAIN(Section, CodomainT), codomain_combine &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1af7a48f047e799f3e9d4ae78617f3d982" name="inverse_codomain_intersect"><purpose>Inverse Combine functor for codomain value intersection. </purpose><type><classname>inverse</classname>&lt; codomain_intersect &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a580f32896f90b1206bba58ff43ca8ae2" name="interval_compare"><purpose>Comparison functor for intervals which are keys as well. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a6943ad02d443458229c3cf6a4b8d67ee" name="key_compare"><purpose>Comparison functor for keys. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a3299075ce6526ed736b61ae087c14462" name="allocator_type"><purpose>The allocator type of the set. </purpose><type>Alloc&lt; std::pair&lt; const interval_type, codomain_type &gt; &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1abcc2addd115331bbb40384cac0a26469" name="ImplMapT"><purpose>Container type for the implementation. </purpose><type>ICL_IMPL_SPACE::map&lt; interval_type, codomain_type, key_compare, allocator_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a3a165d011654995193e650ad3c1da7a6" name="key_type"><purpose>key type of the implementing container </purpose><type>ImplMapT::key_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a44ef5975a1ca12cb49c4e2e867163fcd" name="value_type"><purpose>value type of the implementing container </purpose><type>ImplMapT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a100c5bfa55449bfa0818bd0493a897b2" name="data_type"><purpose>data type of the implementing container </purpose><type>ImplMapT::value_type::second_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a1b8c8bb44fdddbcdc72641960bed791d" name="pointer"><purpose>pointer type </purpose><type>ImplMapT::pointer</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a6640b67e19405c36b0dbe0bebd426d81" name="const_pointer"><purpose>const pointer type </purpose><type>ImplMapT::const_pointer</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1adbab00ab02d87bf73878b5abe7a04bca" name="reference"><purpose>reference type </purpose><type>ImplMapT::reference</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a178bae7162b4f4f32612e69e17a103fb" name="const_reference"><purpose>const reference type </purpose><type>ImplMapT::const_reference</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a31e44d90cd1dcb743454cc2585e3271a" name="iterator"><purpose>iterator for iteration over intervals </purpose><type>ImplMapT::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a591d6151d20703179aefb71a7993f8c7" name="const_iterator"><purpose>const_iterator for iteration over intervals </purpose><type>ImplMapT::const_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a722597bc2c681feb23239568c11c4ea7" name="reverse_iterator"><purpose>iterator for reverse iteration over intervals </purpose><type>ImplMapT::reverse_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aa1ec187316bf3ed96b1762dd594878fc" name="const_reverse_iterator"><purpose>const_iterator for iteration over intervals </purpose><type>ImplMapT::const_reverse_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ab168931af15d137946af80a0c50ce59d" name="element_iterator"><purpose>element iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; iterator &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ade1e1081676899abd3cffbeeec574b44" name="element_const_iterator"><purpose>const element iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; const_iterator &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a99b9064ab2013fe62008b50449a82e65" name="element_reverse_iterator"><purpose>element reverse iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; reverse_iterator &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a167a2f718d1374d30a666b3eed2d43a5" name="element_const_reverse_iterator"><purpose>element const reverse iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; const_reverse_iterator &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ac241bcaecdabd5881f3c4758e003f394" name="on_codomain_absorbtion"><type>on_absorbtion&lt; <classname>type</classname>, codomain_combine, Traits::absorbs_identities &gt;::type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a57f5404fb18acf376c77218af92e216c" name="ICL_INTERVAL_TYPE"><type>typedef</type><parameter name=""><paramtype>Interval</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><parameter name=""><paramtype>Compare</paramtype></parameter><purpose>The interval type of the map. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a6ff5e4c1a570723fab3381eb82046a80" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><purpose>Comparison functor for domain values. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1af7803a72b88f02d36967d0252d5eab50" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>segment_type</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a632bf3301719f883363cd1ff7cafccca" name="ICL_COMBINE_CODOMAIN"><type>typedef</type><parameter name=""><paramtype>Combine</paramtype></parameter><parameter name=""><paramtype>CodomainT</paramtype></parameter><purpose>Combine functor for codomain value aggregation. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a35a7d31ffe7fbf98b602d4fd08874775" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>is_total_invertible</paramtype><default>(Traits::is_total &amp;&amp;has_inverse&lt; codomain_type &gt;::value)</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a976beafe011b926bdfa1d3f97a50b033" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>fineness</paramtype><default>0</default></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ad8f079a0a0556a9eea56270512937710"><description><para>Default constructor for the empty object </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ab48df1bc4d49110f6766b66a8dcfdc9d"><parameter name="src"><paramtype>const <classname>interval_base_map</classname> &amp;</paramtype></parameter><description><para>Copy constructor </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a9842c673f059e10abedf053a39ee9172"><parameter name="src"><paramtype><classname>interval_base_map</classname> &amp;&amp;</paramtype></parameter><description><para>Move constructor </para></description></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a403085ff5e545601bf1e1e463103cfdb"><type><classname>interval_base_map</classname> &amp;</type><parameter name="src"><paramtype><classname>interval_base_map</classname></paramtype></parameter><description><para>Move assignment operator </para></description></copy-assignment>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a1fcf7e4b35ab0b58dede85363756f1f8" name="swap"><type>void</type><parameter name="object"><paramtype><classname>interval_base_map</classname> &amp;</paramtype></parameter><description><para>swap the content of containers </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a3b26c1511da47d27b5cf2b0e1278e274" name="clear"><type>void</type><description><para>clear the map </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a2ee12b4368770aa4faef5a21c77e412b" name="empty" cv="const"><type>bool</type><description><para>is the map empty? </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a37bcbf08b2501c5c677f04f80ec82eec" name="size" cv="const"><type>size_type</type><description><para>An interval map's size is it's cardinality </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ab6686de539364171682669d1c24744f2" name="iterative_size" cv="const"><type>std::size_t</type><description><para>Size of the iteration over this container </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1acdcdbf6752f0789cd09f82297921dbcc" name="find" cv="const"><type>const_iterator</type><parameter name="key_value"><paramtype>const domain_type &amp;</paramtype></parameter><description><para>Find the interval value pair, that contains <computeroutput>key</computeroutput> </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a8773d40a8fef0e565639da9889523473" name="find" cv="const"><type>const_iterator</type><parameter name="key_interval"><paramtype>const interval_type &amp;</paramtype></parameter><description><para>Find the first interval value pair, that collides with interval <computeroutput>key_interval</computeroutput> </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a4bce109667a274fb6f3b94c6237664fe" name="operator()" cv="const"><type>codomain_type</type><parameter name="key_value"><paramtype>const domain_type &amp;</paramtype></parameter><description><para>Total select function. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a6d11dabaafbbacd2b4804700f05161c0" name="add"><type>SubType &amp;</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Addition of a key value pair to the map </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1af69cbc9b415302b21a41f58a6522bacb" name="add"><type>SubType &amp;</type><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Addition of an interval value pair to the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a938a63a9b17f628e728ca0a4d46b642b" name="add"><type>iterator</type><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Addition of an interval value pair <computeroutput>interval_value_pair</computeroutput> to the map. Iterator <computeroutput>prior_</computeroutput> is a hint to the position <computeroutput>interval_value_pair</computeroutput> can be inserted after. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a99b58655471f7669897bcf9f0141f438" name="subtract"><type>SubType &amp;</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Subtraction of a key value pair from the map </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a8733a15185d84921790544cd60603401" name="subtract"><type>SubType &amp;</type><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Subtraction of an interval value pair from the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a94c05e440c470501d296444d9e6d55cb" name="insert"><type>SubType &amp;</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Insertion of a <computeroutput>key_value_pair</computeroutput> into the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1acc569f02328cd50a31b2415a22e10310" name="insert"><type>SubType &amp;</type><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Insertion of an <computeroutput>interval_value_pair</computeroutput> into the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a5c4512a22b35f770f6fbf4f3585a3b12" name="insert"><type>iterator</type><parameter name="prior"><paramtype>iterator</paramtype></parameter><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Insertion of an <computeroutput>interval_value_pair</computeroutput> into the map. Iterator <computeroutput>prior_</computeroutput>. serves as a hint to insert after the element <computeroutput>prior</computeroutput> point to. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ab60fcc2d4206abe9cee34085be8bd25e" name="set"><type>SubType &amp;</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>With <computeroutput>key_value_pair = (k,v)</computeroutput> set value <computeroutput>v</computeroutput> for key <computeroutput>k</computeroutput> </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ad6e8c1cc087fea491847362ccf25a1aa" name="set"><type>SubType &amp;</type><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>With <computeroutput>interval_value_pair = (I,v)</computeroutput> set value <computeroutput>v</computeroutput> for all keys in interval <computeroutput>I</computeroutput> in the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a12faa0dc808fa7342893fcc78dbbe7c3" name="erase"><type>SubType &amp;</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Erase a <computeroutput>key_value_pair</computeroutput> from the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ae2cbb097b754fc75e365ad5f2b5ff090" name="erase"><type>SubType &amp;</type><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Erase an <computeroutput>interval_value_pair</computeroutput> from the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aa52ad78294d8ad6c4667986d176b09b0" name="erase"><type>SubType &amp;</type><parameter name="key"><paramtype>const domain_type &amp;</paramtype></parameter><description><para>Erase a key value pair for <computeroutput>key</computeroutput>. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aa5058d3e42303b0a0b5347ce26fd5fc5" name="erase"><type>SubType &amp;</type><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><description><para>Erase all value pairs within the range of the interval <computeroutput>inter_val</computeroutput> from the map. <sbr/>
 </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a9e9aae317c2b2179fe8038e63b5263ed" name="erase"><type>void</type><parameter name="position"><paramtype>iterator</paramtype></parameter><description><para>Erase all value pairs within the range of the interval that iterator <computeroutput>position</computeroutput> points to. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a925550c218d6772ffd60c778f14e00ee" name="erase"><type>void</type><parameter name="first"><paramtype>iterator</paramtype></parameter><parameter name="past"><paramtype>iterator</paramtype></parameter><description><para>Erase all value pairs for a range of iterators <computeroutput>[first,past)</computeroutput>. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ad6f6fa2c308f8264948b8b5425058fed" name="add_intersection" cv="const"><type>void</type><parameter name="section"><paramtype>SubType &amp;</paramtype></parameter><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>The intersection of <computeroutput>interval_value_pair</computeroutput> and <computeroutput>*this</computeroutput> map is added to <computeroutput>section</computeroutput>. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a3ee69d4747d112a68e59c1f5c976fb10" name="flip"><type>SubType &amp;</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>If <computeroutput>*this</computeroutput> map contains <computeroutput>key_value_pair</computeroutput> it is erased, otherwise it is added. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a5a3cb97d8258bf93ce7a8b092bff398d" name="flip"><type>SubType &amp;</type><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>If <computeroutput>*this</computeroutput> map contains <computeroutput>interval_value_pair</computeroutput> it is erased, otherwise it is added. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aeb3c893156108e2ef7b888b849c86bb4" name="lower_bound"><type>iterator</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a23faf72a8f7bf1eb931475450d8b10dd" name="upper_bound"><type>iterator</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a63a1da8fa2d4dd8da68ab12e2b57361a" name="lower_bound" cv="const"><type>const_iterator</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a9d7afd8b016d439769663a3a46b237a7" name="upper_bound" cv="const"><type>const_iterator</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aa20bdaab90caf9a02bacc6765949d18b" name="equal_range"><type>std::pair&lt; iterator, iterator &gt;</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a18889231398f5b835843ab487d5146cd" name="equal_range" cv="const"><type>std::pair&lt; const_iterator, const_iterator &gt;</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a847aca809bb9b734a504106002e699d0" name="begin"><type>iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ad8c26d23d4da0a0ac3ab6a485e1905af" name="end"><type>iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a62d43e7c1b5040c121aad6fcb126272a" name="begin" cv="const"><type>const_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a460772eec36067709c2e8ac0a67b11ec" name="end" cv="const"><type>const_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ae6221b780c9282406f0a6708c15284fe" name="rbegin"><type>reverse_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ac43d2079c0f72600f1934f536297ae07" name="rend"><type>reverse_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a478588c2bbe7feec34770bd2063dee4e" name="rbegin" cv="const"><type>const_reverse_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ad40a941c9c09e95ca854ef2c53f3781d" name="rend" cv="const"><type>const_reverse_iterator</type></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a701562d8184e9b6af44527aaa6ffc294" name="_add"><type>iterator</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ae34b2ff916dbafaec9e070b5b4294ed8" name="_add"><type>iterator</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aeb100a3cdc9b5bd43d08f9bc592c4e05" name="_subtract"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a05fbcf3b9313719df206d26d3d025635" name="_insert"><type>iterator</type><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1abea58719b9002e1f067aaaf4c4fad574" name="_insert"><type>iterator</type><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a9ab350e4f50b5e8a151a5c478c16d802" name="add_segment"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const CodomainT &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a26b4a21e38173f268f92d2ba862f6893" name="add_main"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="inter_val"><paramtype>interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const CodomainT &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter><parameter name="last_"><paramtype>const iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a4c4b2cbe08a00bec62fa46c22cd41748" name="add_rear"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const CodomainT &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1af5433926ec5cc8e05fed47296137f844" name="add_front"><type>void</type><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="first_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a251f2ad44979e41cd6159f1434c1f2cd" name="subtract_front"><type>void</type><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="first_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a65e90d1e700cca4f3478875052f1f399" name="subtract_main"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="co_val"><paramtype>const CodomainT &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter><parameter name="last_"><paramtype>const iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a105f92d327cbc1fd5d7437aa5c455939" name="subtract_rear"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="inter_val"><paramtype>interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const CodomainT &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ad9a1bca2f66043674191ac753dff9612" name="insert_main"><type>void</type><parameter name=""><paramtype>const interval_type &amp;</paramtype></parameter><parameter name=""><paramtype>const CodomainT &amp;</paramtype></parameter><parameter name=""><paramtype>iterator &amp;</paramtype></parameter><parameter name=""><paramtype>const iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1adee4e225199d2b500fb88d7be3c1d1b1" name="erase_rest"><type>void</type><parameter name=""><paramtype>interval_type &amp;</paramtype></parameter><parameter name=""><paramtype>const CodomainT &amp;</paramtype></parameter><parameter name=""><paramtype>iterator &amp;</paramtype></parameter><parameter name=""><paramtype>const iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a456dd07942eac044d775ee79b91376c1" name="total_add_intersection" cv="const"><type>void</type><template>
          <template-type-parameter name="FragmentT"/>
        </template><parameter name="section"><paramtype>SubType &amp;</paramtype></parameter><parameter name="fragment"><paramtype>const FragmentT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a4ba6c06aa687346c5e7c3a2e3f6e22f0" name="partial_add_intersection" cv="const"><type>void</type><parameter name="section"><paramtype>SubType &amp;</paramtype></parameter><parameter name="operand"><paramtype>const segment_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a32fec06fde44dd0fb331402d35e54770" name="partial_add_intersection" cv="const"><type>void</type><parameter name="section"><paramtype>SubType &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
<method-group name="protected member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aaea239e6681622756b53c51814fe8b22" name="gap_insert"><type>iterator</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const codomain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1af9a419ef75948d7c0d2bda95ef768c6a" name="add_at"><type>std::pair&lt; iterator, bool &gt;</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="prior_"><paramtype>const iterator &amp;</paramtype></parameter><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const codomain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a03a19f889ee1fa5c6d8571f2e6cc9b7c" name="insert_at"><type>std::pair&lt; iterator, bool &gt;</type><parameter name="prior_"><paramtype>const iterator &amp;</paramtype></parameter><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const codomain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a7a0d41b1517e86832190c70658de236f" name="that"><type>sub_type *</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ae5f86a789f45bf6439661d0a667867ee" name="that" cv="const"><type>const sub_type *</type></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__base__map_3_01SubType_00_01Do826435365e0587c56160fcb563dca177" name="is_interval_container"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_base_map&lt; SubType</template-arg><template-arg>DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__base__map_3_01SubType_00_01Do826435365e0587c56160fcb563dca177_1ab508a81e176022fdbaf465c4f09714b3" name="type"><type>is_interval_container&lt; <classname>icl::interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__base__map_3_01SubType_00_01Do826435365e0587c56160fcb563dca177_1a63db43f86591f9cff36ba846d70284de" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_01Codom4a637ac132b118a57737b98b8b3fb324" name="is_map"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_base_map&lt; SubType</template-arg><template-arg>DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_01Codom4a637ac132b118a57737b98b8b3fb324_1a269b27e7f577ec75674c8da38c166108" name="type"><type>is_map&lt; <classname>icl::interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_01Codom4a637ac132b118a57737b98b8b3fb324_1a8e95e4773f26707e478bfdc2458a8e56" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_01Cod56bf03d61fff8322e8d0ea0e97da725e" name="is_total"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_base_map&lt; SubType</template-arg><template-arg>DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_01Cod56bf03d61fff8322e8d0ea0e97da725e_1af7745fa3416265927a414b57e02294ce" name="type"><type>is_total&lt; <classname>icl::interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_01Cod56bf03d61fff8322e8d0ea0e97da725e_1afa5c762e00e05404bc1fe143553657b5" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(Traits::is_total)</default></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1mapping__pair" name="mapping_pair"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
    </template><data-member id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1mapping__pair_1aab4f1ced369d75a9913f63a42d251a25" name="key"><type>DomainT</type></data-member>
<data-member id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1mapping__pair_1a5839ed31b421598ad8c4f894d3258393" name="data"><type>CodomainT</type></data-member>
<method-group name="public member functions">
<constructor id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1mapping__pair_1a5303cdaf273a17175a24a0f0c70a54ae"/>
<constructor id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1mapping__pair_1a0d5685da4dec61a5d8ef792a0d338bcc"><parameter name="key_value"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="data_value"><paramtype>const CodomainT &amp;</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1mapping__pair_1ad7fde42144fb0c84f0b65f51002fce59"><parameter name="std_pair"><paramtype>const std::pair&lt; DomainT, CodomainT &gt; &amp;</paramtype></parameter></constructor>
</method-group>
</struct>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.interval__base__set_8hpp" name="boost/icl/interval_base_set.hpp">
<namespace name="boost">
<namespace name="icl">
<class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set" name="interval_base_set"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type><default>ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, Compare)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><purpose>Implements a set as a set of intervals (base class) </purpose><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ae623828b267f9ee859eca45df5537b3d" name="type"><type><classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1af9e5a4eaa166d4916e0b87ed5c5d1602" name="sub_type"><purpose>The designated <emphasis>derived</emphasis> or <emphasis>sub_type</emphasis> of this base class. </purpose><type>SubType</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1aeadd468df5f70f5119cef5775f9a4298" name="overloadable_type"><purpose>Auxilliary type for overloadresolution. </purpose><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a01adf3c162bf444180a84bdb18d9188e" name="domain_type"><purpose>The domain type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a64e19d2700338e7f43e6e55662181be4" name="codomain_type"><purpose>The codomaintype is the same as domain_type. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1afb4f812fb56411cb049211f2984cf295" name="element_type"><purpose>The element type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a052a3f4f26fb42fa24619907941d242f" name="segment_type"><purpose>The segment type of the set. </purpose><type>interval_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1af5d1124936fba6a01f8f08f229d0c902" name="difference_type"><purpose>The difference type of an interval which is sometimes different form the data_type. </purpose><type>difference_type_of&lt; domain_type &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1af15a4533fc1244c0e2ea0e13b2293570" name="size_type"><purpose>The size type of an interval which is mostly std::size_t. </purpose><type>size_type_of&lt; domain_type &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ab23cd2cebbe39a786b4e925a9b0e3499" name="interval_compare"><purpose>Comparison functor for intervals. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a9a2025409fe05008fdee4a4833714e18" name="key_compare"><purpose>Comparison functor for keys. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a15921043db5872e98e1a979b771230ed" name="atomized_type"><purpose>The atomized type representing the corresponding container of elements. </purpose><type>ICL_IMPL_SPACE::set&lt; DomainT, domain_compare, Alloc&lt; DomainT &gt; &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1af00f5a7f9c75be1ce959c9edf81b9cd4" name="allocator_type"><purpose>The allocator type of the set. </purpose><type>Alloc&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a92c7087e1376475dd96a1713bc8fc00a" name="domain_allocator_type"><purpose>allocator type of the corresponding element set </purpose><type>Alloc&lt; DomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1af447a3715276802b1a90266c9c301f7b" name="ImplSetT"><purpose>Container type for the implementation. </purpose><type>ICL_IMPL_SPACE::set&lt; interval_type, key_compare, allocator_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a6316310c43fc6a95d402254fd962a6fe" name="key_type"><purpose>key type of the implementing container </purpose><type>ImplSetT::key_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a1090c4727f4931b1e6bb8fae63c69ead" name="data_type"><purpose>data type of the implementing container </purpose><type>ImplSetT::key_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1aed28bc54cb82193d17a3cc79073d7f89" name="value_type"><purpose>value type of the implementing container </purpose><type>ImplSetT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a956b85811c3361bc250493e90b7ad069" name="pointer"><purpose>pointer type </purpose><type>ImplSetT::pointer</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a27182f9870ad24dd3b758d4ac2b33170" name="const_pointer"><purpose>const pointer type </purpose><type>ImplSetT::const_pointer</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ab001fd668cc32f9997de100f65899532" name="reference"><purpose>reference type </purpose><type>ImplSetT::reference</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a1ea1648bb7bab1b72b4f72aca1154222" name="const_reference"><purpose>const reference type </purpose><type>ImplSetT::const_reference</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ac397d674f9766668130e79d5216d00e7" name="iterator"><purpose>iterator for iteration over intervals </purpose><type>ImplSetT::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a0f574fdb975025a0d34fd0a66638bdc1" name="const_iterator"><purpose>const_iterator for iteration over intervals </purpose><type>ImplSetT::const_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ad266f644cfbdb25ca8be28f65f27938a" name="reverse_iterator"><purpose>iterator for reverse iteration over intervals </purpose><type>ImplSetT::reverse_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1af9142603e17b97a5569c39ea8a419190" name="const_reverse_iterator"><purpose>const_iterator for iteration over intervals </purpose><type>ImplSetT::const_reverse_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a4ca0e002c2c315aa8d462311ae6926ad" name="element_iterator"><purpose>element iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; iterator &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ad446191a1472cf9469035e0f25ad8483" name="element_const_iterator"><purpose>element const iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; const_iterator &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ae87ba4651357611911e6527a84fb7a2c" name="element_reverse_iterator"><purpose>element reverse iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; reverse_iterator &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a159310aa8df8c96aa00be634b73d8553" name="element_const_reverse_iterator"><purpose>element const reverse iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; const_reverse_iterator &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a03a718a8756cedc4cd849a46d82f35fa" name="ICL_INTERVAL_TYPE"><type>typedef</type><parameter name=""><paramtype>Interval</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><parameter name=""><paramtype>Compare</paramtype></parameter><purpose>The interval type of the set. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1aebf10586dc479cba1ee6dad33076a8d1" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><purpose>Comparison functor for domain values. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a7a8657f6fb636edb6f767348f47e8e5d" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>segment_type</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a484951f03bdc3773a3263b658269e058" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>fineness</paramtype><default>0</default></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a7b0e222f3a9e354f58044fe49907c6b9"><description><para>Default constructor for the empty object </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ae5f01040beadb698bfc9d6d44ee2336c"><parameter name="src"><paramtype>const <classname>interval_base_set</classname> &amp;</paramtype></parameter><description><para>Copy constructor </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a0e04ac348413e07ba1563bf9c4bf9242"><parameter name="src"><paramtype><classname>interval_base_set</classname> &amp;&amp;</paramtype></parameter><description><para>Move constructor </para></description></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a4d6eebe373c48bf1765f69ee9ea52fe0"><type><classname>interval_base_set</classname> &amp;</type><parameter name="src"><paramtype><classname>interval_base_set</classname></paramtype></parameter><description><para>Move assignment operator </para></description></copy-assignment>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ae9106773a3cc06b167ed3c656b1a1756" name="swap"><type>void</type><parameter name="operand"><paramtype><classname>interval_base_set</classname> &amp;</paramtype></parameter><description><para>swap the content of containers </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a5321181cbd953271aa82ee7371f7117b" name="clear"><type>void</type><description><para>sets the container empty </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a110393140e543beb275d8dcf2dc6c226" name="empty" cv="const"><type>bool</type><description><para>is the container empty? </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ab6fbfa781ec82d0b8098e6f0604765d8" name="size" cv="const"><type>size_type</type><description><para>An interval set's size is it's cardinality </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1aff276f05d6e56f829dba5623bef75db3" name="iterative_size" cv="const"><type>std::size_t</type><description><para>Size of the iteration over this container </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a843ed0b703ed259716f4c38c808e02ec" name="find" cv="const"><type>const_iterator</type><parameter name="key_value"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Find the interval, that contains element <computeroutput>key_value</computeroutput> </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a7c8c5f49952de1d3935728cfd2f7e0fd" name="find" cv="const"><type>const_iterator</type><parameter name="key_interval"><paramtype>const interval_type &amp;</paramtype></parameter><description><para>Find the first interval, that collides with interval <computeroutput>key_interval</computeroutput> </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a4fd985a6bc4af6bed8f025c74e198374" name="add"><type>SubType &amp;</type><parameter name="key"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Add a single element <computeroutput>key</computeroutput> to the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a08537e02f2a20bfd118a113608cb35b3" name="add"><type>SubType &amp;</type><parameter name="inter_val"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Add an interval of elements <computeroutput>inter_val</computeroutput> to the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a68aba510fd1cd3d0b93352115d6ced62" name="add"><type>iterator</type><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="inter_val"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Add an interval of elements <computeroutput>inter_val</computeroutput> to the set. Iterator <computeroutput>prior_</computeroutput> is a hint to the position <computeroutput>inter_val</computeroutput> can be inserted after. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a6f4830a8094c884a3d2263c1f6b577e0" name="subtract"><type>SubType &amp;</type><parameter name="key"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Subtract a single element <computeroutput>key</computeroutput> from the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a072c23576200093b5ddd4e8fd91d0e6e" name="subtract"><type>SubType &amp;</type><parameter name="inter_val"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Subtract an interval of elements <computeroutput>inter_val</computeroutput> from the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a3242bfb49c41189e086a382d4a2dd98e" name="insert"><type>SubType &amp;</type><parameter name="key"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Insert an element <computeroutput>key</computeroutput> into the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a6a23daeba3c61668f73b33c78de11fbc" name="insert"><type>SubType &amp;</type><parameter name="inter_val"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Insert an interval of elements <computeroutput>inter_val</computeroutput> to the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a82346b1c2c40930118eae44b9ae9d0fb" name="insert"><type>iterator</type><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="inter_val"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Insert an interval of elements <computeroutput>inter_val</computeroutput> to the set. Iterator <computeroutput>prior_</computeroutput> is a hint to the position <computeroutput>inter_val</computeroutput> can be inserted after. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a44e91eefac46ea9adb30e578d0c62040" name="erase"><type>SubType &amp;</type><parameter name="key"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Erase an element <computeroutput>key</computeroutput> from the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a3ebdadd99e183e707ca2b31e29fcc7b1" name="erase"><type>SubType &amp;</type><parameter name="inter_val"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Erase an interval of elements <computeroutput>inter_val</computeroutput> from the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a9d4f77853076bed6141f02c311986b49" name="erase"><type>void</type><parameter name="position"><paramtype>iterator</paramtype></parameter><description><para>Erase the interval that iterator <computeroutput>position</computeroutput> points to. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a412859094a7887135519e6e15bcd0f93" name="erase"><type>void</type><parameter name="first"><paramtype>iterator</paramtype></parameter><parameter name="past"><paramtype>iterator</paramtype></parameter><description><para>Erase all intervals in the range <computeroutput>[first,past)</computeroutput> of iterators. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1acf6cbb5247c6d8ba1487c1000e5551c8" name="flip"><type>SubType &amp;</type><parameter name="key"><paramtype>const element_type &amp;</paramtype></parameter><description><para>If <computeroutput>*this</computeroutput> set contains <computeroutput>key</computeroutput> it is erased, otherwise it is added. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1adc9ea94806fcb107776b11cbcba03b2c" name="flip"><type>SubType &amp;</type><parameter name="inter_val"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>If <computeroutput>*this</computeroutput> set contains <computeroutput>inter_val</computeroutput> it is erased, otherwise it is added. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1af521213c29f400eeb9fda2cdf5c8cab6" name="begin"><type>iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1aaf4ea31f8c55e33aee3651ff4bf0d176" name="end"><type>iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ab99e77c8212f6f718d4d5235b383282b" name="begin" cv="const"><type>const_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a551a32982e5878b974305720e7f135d0" name="end" cv="const"><type>const_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a08d1f023b9f67777cc67a57b6cfecc40" name="rbegin"><type>reverse_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ac6fd4227f2ea8ea7773e36b9b1f92536" name="rend"><type>reverse_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a090b35b2ce8228c5c0553b2d6983ae26" name="rbegin" cv="const"><type>const_reverse_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a85b08aee3d10b2880fe34539b756442a" name="rend" cv="const"><type>const_reverse_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a740dece9c6cc62cceea71c903ea6339e" name="lower_bound"><type>iterator</type><parameter name="interval"><paramtype>const value_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ab7ed72b64e4123ab90bc0de74a443425" name="upper_bound"><type>iterator</type><parameter name="interval"><paramtype>const value_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a0a213f82390148e490905d2be2c2c6dc" name="lower_bound" cv="const"><type>const_iterator</type><parameter name="interval"><paramtype>const value_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a6c80d477f1275701a6b346305f357eaf" name="upper_bound" cv="const"><type>const_iterator</type><parameter name="interval"><paramtype>const value_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ad0a4c44d7e0a4beba6eed05b0bd64438" name="equal_range"><type>std::pair&lt; iterator, iterator &gt;</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1aaac5d6d427122ee073c388570df877e2" name="equal_range" cv="const"><type>std::pair&lt; const_iterator, const_iterator &gt;</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1acfbe56b7013522899a4025fe913a5305" name="_add"><type>iterator</type><parameter name="addend"><paramtype>const segment_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a0c8f0f011a53884f35bd7b97d7f9e9ce" name="_add"><type>iterator</type><parameter name="prior"><paramtype>iterator</paramtype></parameter><parameter name="addend"><paramtype>const segment_type &amp;</paramtype></parameter></method>
</method-group>
<method-group name="protected member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a6d4edc29ffaee3cb5231f996e3f726f2" name="add_front"><type>void</type><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="first_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ae56c736d22442881e39f9393d6a571e6" name="add_main"><type>void</type><parameter name="inter_val"><paramtype>interval_type &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter><parameter name="last_"><paramtype>const iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a2e6f8ed17289de920c116957a3e00d16" name="add_segment"><type>void</type><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ad85d263cc14a13791b2d5073d1fc2d0a" name="add_rear"><type>void</type><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a12ddb37830d22880d9bba44fcad417fe" name="that"><type>sub_type *</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a50e808f6943256417b981c29db9e08a0" name="that" cv="const"><type>const sub_type *</type></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__base__set_3_01SubType_00_01Do99bbd9aad5220eb86661d87a9c3d46fd" name="is_interval_container"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_base_set&lt; SubType</template-arg><template-arg>DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__base__set_3_01SubType_00_01Do99bbd9aad5220eb86661d87a9c3d46fd_1af6d56c9bb7b02f4f1cf90eab6771071e" name="type"><type>is_interval_container&lt; <classname>icl::interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__base__set_3_01SubType_00_01Do99bbd9aad5220eb86661d87a9c3d46fd_1af3aee327f7dc773370801fe7ddeac6d2" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1interval__base__set_3_01SubType_00_01DomainT_00_01Compa80ac73431226a07619128214a2a27ab9" name="is_set"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_base_set&lt; SubType</template-arg><template-arg>DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1interval__base__set_3_01SubType_00_01DomainT_00_01Compa80ac73431226a07619128214a2a27ab9_1ab361bfbac3d8e3ffa1b8728426bff79d" name="type"><type>is_set&lt; <classname>icl::interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1interval__base__set_3_01SubType_00_01DomainT_00_01Compa80ac73431226a07619128214a2a27ab9_1a1d196dd190cd37598f0c1c2c95db0d35" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.interval__bounds_8hpp" name="boost/icl/interval_bounds.hpp">
<namespace name="boost">
<namespace name="icl">
<class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1bounded__value" name="bounded_value"><template>
      <template-type-parameter name="DomainT"/>
    </template><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1bounded__value_1a78e9e6ce54fea1f1521deeca86ec68cd" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1bounded__value_1a5d387cca84f295729323c72ace36604f" name="type"><type><classname>bounded_value</classname>&lt; DomainT &gt;</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1bounded__value_1ae8321dec60fd1f36c73bc27e00090452"><parameter name="value"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="bound"><paramtype><classname>interval_bounds</classname></paramtype></parameter></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1bounded__value_1aad964a5eca5e144515973b352ca9a72a" name="value" cv="const"><type>domain_type</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1bounded__value_1aeea051f0cd4edc10d9f51a2c1f28f490" name="bound" cv="const"><type><classname>interval_bounds</classname></type></method>
</method-group>
</class><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds" name="interval_bounds"><data-member id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1ae6aef1cb63c174feb976d6d95f6b82d1" name="_bits"><type>bound_type</type></data-member>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1af804a0753644dcae691669d4a00bdd07" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>static_open</paramtype><default>0</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1af5de5906b7ee53d9a4f8e1b3dde62276" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>static_left_open</paramtype><default>1</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a19db6f0358abce7eb09f202bd250f448" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>static_right_open</paramtype><default>2</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a3011ae07969fa08ab4cc3b0691f57f91" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>static_closed</paramtype><default>3</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1adaa4e0e6d58a5f283dee6642b97a01f4" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>dynamic</paramtype><default>4</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a62e0a4e7a43ee9a648a662493008c47f" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>undefined</paramtype><default>5</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a2f27e46c5981efbdd391bad978f24617" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>_open</paramtype><default>0</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a2bedc834cef3aede17aee9068122f914" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>_left_open</paramtype><default>1</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1ae7f3eb9bdd7d11e6c9cdef7a53804cfd" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>_right_open</paramtype><default>2</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a36310e79409fcd3b3d314ced82b491cf" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>_closed</paramtype><default>3</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1abf2807793683bc93176a95552475b90b" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>_right</paramtype><default>1</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a968e336758660e38aa5759ead848db2c" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>_left</paramtype><default>2</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1ae775c0eee4f599ee09cd1a2c5e274b2f" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>_all</paramtype><default>3</default></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a81dd533c1895705ce7baca65ceda2fc4"/>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1aaed1677ba103799abcc14332d28dba24" specifiers="explicit"><parameter name="bounds"><paramtype>bound_type</paramtype></parameter></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a4aea75ef01f0d23c8585c5ce5319aca8" name="all" cv="const"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a66521990d853966234b81e4be0d6998c" name="left" cv="const"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a3f299943efd252e716dc4bcde36f941d" name="right" cv="const"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a0701475d1c933a5a7f51c712e4e764fc" name="reverse_left" cv="const"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1afa4f8e29b2721e0d29b8e2bf040cc6dd" name="reverse_right" cv="const"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a88b480711d3afd143cd9424df7700852" name="bits" cv="const"><type>bound_type</type></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1addfbaa597f1d5237c2f25bc6ae3001a4" name="open" specifiers="static"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a3ff0c868e02bd5de6f2e99dbf246f000" name="left_open" specifiers="static"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a4c595c0a9daa95691d5939d09a538f92" name="right_open" specifiers="static"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1ade28514135d1ea3e3d956ae275da9c10" name="closed" specifiers="static"><type><classname>interval_bounds</classname></type></method>
</method-group>
</class><typedef id="doxygen.interval_container_library_reference.interval__bounds_8hpp_1a2fa3dfe7b8630d9e38779e8de1e99141" name="bound_type"><type>unsigned char</type></typedef>










</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.interval__combining__style_8hpp" name="boost/icl/interval_combining_style.hpp">
<namespace name="boost">
<namespace name="icl">
<namespace name="interval_combine">
<function id="doxygen.interval_container_library_reference.interval__combining__style_8hpp_1a192277578fd35507f4a16b86d6e7cf29" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>unknown</paramtype><default>0</default></parameter></function>
<function id="doxygen.interval_container_library_reference.interval__combining__style_8hpp_1a141f8dfee63f073c6447a430e5c2c834" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>joining</paramtype><default>1</default></parameter></function>
<function id="doxygen.interval_container_library_reference.interval__combining__style_8hpp_1a01401b3da29677747cbbcc9234cc1d20" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>separating</paramtype><default>2</default></parameter></function>
<function id="doxygen.interval_container_library_reference.interval__combining__style_8hpp_1a77b5823a6906b7fddc1465ca19034175" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>splitting</paramtype><default>3</default></parameter></function>
<function id="doxygen.interval_container_library_reference.interval__combining__style_8hpp_1a9c68f882304f760e09b58610b578b1d5" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>elemental</paramtype><default>4</default></parameter></function>
</namespace>










</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.interval__map_8hpp" name="boost/icl/interval_map.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00af6da27e2f03f4e16b9b488f09ae9849" name="absorbs_identities"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00af6da27e2f03f4e16b9b488f09ae9849_1a011511bbe23ea5e252f4b0ee57ab6c5c" name="type"><type>absorbs_identities&lt; <classname>icl::interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00af6da27e2f03f4e16b9b488f09ae9849_1ae10a90debc14342debcfbdc9ed13d700" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(Traits::absorbs_identities)</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Trai505cad5f452d30e2463d5167f0c61e26" name="has_inverse"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Trai505cad5f452d30e2463d5167f0c61e26_1a2b9aebaf7cedea4fc6f1e7c494e0a1c3" name="type"><type>has_inverse&lt; <classname>icl::interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Trai505cad5f452d30e2463d5167f0c61e26_1a956463eff21c28616155602b0145d76d" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(has_inverse&lt; CodomainT &gt;::value)</default></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map" name="interval_map"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"><default>icl::partial_absorber</default></template-type-parameter>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type><default>ICL_COMBINE_INSTANCE(icl::inplace_plus, CodomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type><default>ICL_SECTION_INSTANCE(icl::inter_section, CodomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type><default>ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, Compare)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><inherit access="public">boost::icl::interval_base_map&lt; interval_map&lt; DomainT, CodomainT, icl::partial_absorber, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_COMBINE_INSTANCE(icl::inplace_plus, CodomainT), ICL_SECTION_INSTANCE(icl::inter_section, CodomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;, DomainT, CodomainT, icl::partial_absorber, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_COMBINE_INSTANCE(icl::inplace_plus, CodomainT), ICL_SECTION_INSTANCE(icl::inter_section, CodomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;</inherit><purpose>implements a map as a map of intervals - on insertion overlapping intervals are split and associated values are combined. </purpose><enum id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a5fda4b74a1276add155782286e43990f" name=""><enumvalue id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a5fda4b74a1276add155782286e43990faaacfdc0ff87978ac8e580ef1ba396736" name="fineness"><default>1</default></enumvalue></enum>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a673898370f6fe26035cf6a9ee1d348a3" name="traits"><type>Traits</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a86e091d859fed0f529ceca0017ef9900" name="type"><type><classname>interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a07619dd7d3d7fa22b37dc200d3eb8f0a" name="split_type"><type><classname>split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ae2b867dfd25f7cec4bf6d9c64811bfe1" name="overloadable_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a789ff0a85ce9d3e810882701b033abfe" name="joint_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a314173bfac0fcc4b2cea805f1ce35270" name="base_type"><type><classname>interval_base_map</classname>&lt; <classname>type</classname>, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a6affb909866ec7269139fe0ba986e088" name="iterator"><type>base_type::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a381bced407a9af3c7e769dd1d107b590" name="value_type"><type>base_type::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a241df02dcf5ffaa072db70b544632d93" name="element_type"><type>base_type::element_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ad071365e4f0de1a873c04665af72882e" name="segment_type"><type>base_type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a2333a9082b505d6902cd5e3a5d2406d6" name="domain_type"><type>base_type::domain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a1333f064b2e32a94531392fc8e9f72ea" name="codomain_type"><type>base_type::codomain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ad9c7af5c85ac7934ae5ac9917bba17e4" name="domain_mapping_type"><type>base_type::domain_mapping_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1afcb1577e9ac697eb048f7bed0cb7d6f6" name="interval_mapping_type"><type>base_type::interval_mapping_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a5fd19b94122598cfcec29246fa9e0a5c" name="ImplMapT"><type>base_type::ImplMapT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a2a7c1a4fdfe49d14c256566a188eb49d" name="size_type"><type>base_type::size_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a185936f6cef2a576b1fb95661434236f" name="codomain_combine"><type>base_type::codomain_combine</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ab95e9ebeb1987fd0d5d9673a0a2123f0" name="interval_set_type"><type><classname>interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1aac96bf7090f33e232d33e1d828664c30" name="set_type"><type><classname>interval_set_type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a52fe1f9a618734e8b981e10ed031293f" name="key_object_type"><type><classname>set_type</classname></type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a3c6c5a2a05cbe6bb8f229064c0efebb2" name="ICL_INTERVAL_TYPE"><type>typedef</type><parameter name=""><paramtype>Interval</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><parameter name=""><paramtype>Compare</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a34c2861aab55f0e52783754458552c6c"><purpose>Default constructor for the empty object. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a75cc2a9c4866a4cfaf139c139be12334"><parameter name="src"><paramtype>const <classname>interval_map</classname> &amp;</paramtype></parameter><purpose>Copy constructor. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ad75e2a429b69b05ad1498128397ad9a0" specifiers="explicit"><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Copy constructor for base_type. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a7ffc50cf1a33fd7111b59563683e0ce4" specifiers="explicit"><parameter name="base_pair"><paramtype>const <classname>domain_mapping_type</classname> &amp;</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a818d266bfd7365952d9022de3b72def2" specifiers="explicit"><parameter name="value_pair"><paramtype>const value_type &amp;</paramtype></parameter></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a75d9429bb92c250ff65534da313af9cb" name="assign"><type>void</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment from a base <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map">interval_map</link>. </purpose></method>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a3496b25f6e252bf6bbdcd073684a6498"><type><classname>interval_map</classname> &amp;</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment operator for base type. </purpose></copy-assignment>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ac1d9a66931ea8ceda4cf526b6a79dbe7"><parameter name="src"><paramtype><classname>interval_map</classname> &amp;&amp;</paramtype></parameter><purpose>Move constructor. </purpose></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ae0aa7fc8feafa2a745c4dbc9bac83559"><type><classname>interval_map</classname> &amp;</type><parameter name="src"><paramtype><classname>interval_map</classname></paramtype></parameter><purpose>Move assignment operator. </purpose></copy-assignment>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ae4f09bfe8105f37df4dfa40796ca2070" name="handle_inserted"><type>iterator</type><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a434ba9d254ad3bf2c8fe960031563a90" name="handle_inserted"><type>void</type><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a13fb37053aa9b9f41f1e24a393c5423a" name="handle_left_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ab01eb0710229477ac362e56ae550cc15" name="handle_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a512fca1dc849ebaab605b0e60e6e279c" name="handle_preceeded_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a0956bc16c0f906cabdef3bd965484111" name="handle_succeeded_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator</paramtype></parameter><parameter name="next_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a4a847df46f2de6b479d6726d95cf440a" name="handle_reinserted"><type>void</type><parameter name="insertion_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ab937d31cd446709464ceca695255aaf9" name="gap_insert_at"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="end_gap"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const codomain_type &amp;</paramtype></parameter></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__map_3_01DomainT_00_01Codomaine6d8f97b4dcc5c305375e8001dca02a6" name="is_interval_container"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__map_3_01DomainT_00_01Codomaine6d8f97b4dcc5c305375e8001dca02a6_1a30a954619a789afb83d1e306b1d339bb" name="type"><type>is_interval_container&lt; <classname>icl::interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__map_3_01DomainT_00_01Codomaine6d8f97b4dcc5c305375e8001dca02a6_1a8a709c9aaea7e1772caeb56a9be5c1ff" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Traits_006f66ab580086c99fbe9343a60a9d3965" name="is_map"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Traits_006f66ab580086c99fbe9343a60a9d3965_1a29bc2476cc784b47d1a09397f95dcc9c" name="type"><type>is_map&lt; <classname>icl::interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Traits_006f66ab580086c99fbe9343a60a9d3965_1a4af505ff4883432abf8bec63823c98c0" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Traits_6dd8973d4f0938b0632946babba13c49" name="is_total"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Traits_6dd8973d4f0938b0632946babba13c49_1ae8c5b9333da084541b3cf1f428d3d054" name="type"><type>is_total&lt; <classname>icl::interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Traits_6dd8973d4f0938b0632946babba13c49_1aca505faf171c6e8e33f0c4331a829aa1" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(Traits::is_total)</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_015f6da6c01bc55bb82d3e2094851d0267" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_015f6da6c01bc55bb82d3e2094851d0267_1ac1b614920d721b792b76b7246dc95823" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.interval__set_8hpp" name="boost/icl/interval_set.hpp">
<namespace name="boost">
<namespace name="icl">
<class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set" name="interval_set"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type><default>ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, Compare)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><inherit access="public">boost::icl::interval_base_set&lt; interval_set&lt; DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;</inherit><purpose>Implements a set as a set of intervals - merging adjoining intervals. </purpose><enum id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a9a53a4119742cd8c03299d2412a9686a" name=""><enumvalue id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a9a53a4119742cd8c03299d2412a9686aa58f6354f8458574adfe20e35fcb167e1" name="fineness"><default>1</default></enumvalue></enum>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a38eaab6ee95a6dbf7d69bb3407ff4775" name="type"><type><classname>interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a659855d54dd22944683a8e9ad36c1f8b" name="base_type"><purpose>The base_type of this class. </purpose><type><classname>interval_base_set</classname>&lt; <classname>type</classname>, DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a20b645c96d50a304eb783070e438e26c" name="overloadable_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a5f8accacbd42647bfaf058120c4d37ff" name="joint_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1ac74f8448490eb18e43a38844ed2a99af" name="key_object_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a1aa3fe41a0f3fd7c7da0db412106123c" name="domain_type"><purpose>The domain type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1ab761a684003e0a727d3ed83606bb1eb7" name="codomain_type"><purpose>The codomaintype is the same as domain_type. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a68c793fa484a08dd42d7836fceb90769" name="element_type"><purpose>The element type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a662948ab5ab4cfa379b62fefd6be233c" name="segment_type"><purpose>The segment type of the set. </purpose><type>interval_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1acdb69ec2d85d4bf1297449b034286857" name="interval_compare"><purpose>Comparison functor for intervals. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a9da208ec13c3f97ad0db6677d608c496" name="key_compare"><purpose>Comparison functor for keys. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a2b9feff2ab6b67dd69422bf68c36079e" name="allocator_type"><purpose>The allocator type of the set. </purpose><type>Alloc&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1aa430130af234bf2ab30e407ff782adf3" name="domain_allocator_type"><purpose>allocator type of the corresponding element set </purpose><type>Alloc&lt; DomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a15209055c6ab9d936a6b7d1effa40910" name="atomized_type"><purpose>The corresponding atomized type representing this interval container of elements. </purpose><type>base_type::atomized_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1aa2729db1b987045417e1f2f134da9c62" name="ImplSetT"><purpose>Container type for the implementation. </purpose><type>base_type::ImplSetT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1acf96d001031f3357f7e197b12b2ad354" name="key_type"><purpose>key type of the implementing container </purpose><type>ImplSetT::key_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a31d1c3dc06f08312baefc5600269317d" name="data_type"><purpose>data type of the implementing container </purpose><type>ImplSetT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1abd05aa808c642b5c87710519d0d652b5" name="value_type"><purpose>value type of the implementing container </purpose><type>ImplSetT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a4ce6fb37d8812c617e1bc1c5aad4431b" name="iterator"><purpose>iterator for iteration over intervals </purpose><type>ImplSetT::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a3245bff0b18b1ed7f250b397d9f8efcb" name="const_iterator"><purpose>const_iterator for iteration over intervals </purpose><type>ImplSetT::const_iterator</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a333a533a34a642bf115d254e31eb7127" name="ICL_INTERVAL_TYPE"><type>typedef</type><parameter name=""><paramtype>Interval</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><parameter name=""><paramtype>Compare</paramtype></parameter><purpose>The interval type of the set. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a50577a9f0af1f23daf9440556f3011be" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><purpose>Comparison functor for domain values. </purpose></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1ad21a16581d0ad58e91f7cb585e3cfc3c"><purpose>Default constructor for the empty object. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a695e48fe630e229c9e9db85423dddb36"><parameter name="src"><paramtype>const <classname>interval_set</classname> &amp;</paramtype></parameter><purpose>Copy constructor. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a9187f36a8f39d3e4e5cbb99ffef9ce85" specifiers="explicit"><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Copy constructor for base_type. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1aded993f4961bf80e7681f639cfadc1f3" specifiers="explicit"><parameter name="value"><paramtype>const domain_type &amp;</paramtype></parameter><purpose>Constructor for a single element. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a3420cdfdb7887bafdfc241710eac2e80" specifiers="explicit"><parameter name="itv"><paramtype>const interval_type &amp;</paramtype></parameter><purpose>Constructor for a single interval. </purpose></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a838eaa5feab77c738e941c919c829712" name="assign"><type>void</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment from a base <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set">interval_set</link>. </purpose></method>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a2d0125bfbf2229e0ea9b15d567cdf674"><type><classname>interval_set</classname> &amp;</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment operator for base type. </purpose></copy-assignment>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1ab5214206f73516698e0934baa9d9492d"><parameter name="src"><paramtype><classname>interval_set</classname> &amp;&amp;</paramtype></parameter><purpose>Move constructor. </purpose></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1aa39bb43defd635eec5536a493bb17156"><type><classname>interval_set</classname> &amp;</type><parameter name="src"><paramtype><classname>interval_set</classname></paramtype></parameter><purpose>Move assignment operator. </purpose></copy-assignment>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a0c92b82507e78839d49160ef2f819cdd" name="handle_inserted"><type>iterator</type><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a44f563fc84523b139b8aa6d350b9fb3e" name="add_over"><type>iterator</type><parameter name="addend"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="last_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a0b342bca965b9436d1987a90fbf967da" name="add_over"><type>iterator</type><parameter name="addend"><paramtype>const interval_type &amp;</paramtype></parameter></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_1f9e54d138dc81647418dc5850e3c655" name="is_interval_container"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_1f9e54d138dc81647418dc5850e3c655_1adf7322fa92a6051f7615e1107958b3ed" name="type"><type>is_interval_container&lt; <classname>icl::interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_1f9e54d138dc81647418dc5850e3c655_1a5bde895f144a5176e478c581701d3a05" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__joiner_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4" name="is_interval_joiner"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__joiner_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1a22715b6f813c80b01b8f8c1ce52e0767" name="type"><type>is_interval_joiner&lt; <classname>icl::interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__joiner_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1a30b1949129bff63aaeb06a90f8087b9c" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4" name="is_set"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1a2fd203525f21941cdf379f356290ca88" name="type"><type>is_set&lt; <classname>icl::interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1a253d703b35a8961b4e1200e4bcde2af8" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1abbb921a0ade134784dd3f0b010768dbe" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.interval__traits_8hpp" name="boost/icl/interval_traits.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1difference__type__of_3_01interval__traits_3_01Type_01_4_01_4" name="difference_type_of"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>interval_traits&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1difference__type__of_3_01interval__traits_3_01Type_01_4_01_4_1abd6ffae23dbe3d7237b19447b660ea11" name="domain_type"><type><classname>interval_traits</classname>&lt; Type &gt;::domain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1difference__type__of_3_01interval__traits_3_01Type_01_4_01_4_1a7366147939d48506bd8b634a6d93076d" name="type"><type>difference_type_of&lt; domain_type &gt;::type</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1domain__type__of_3_01interval__traits_3_01Type_01_4_01_4" name="domain_type_of"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>interval_traits&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1domain__type__of_3_01interval__traits_3_01Type_01_4_01_4_1a87ae8a34c2d17998c83533f90428bd09" name="type"><type><classname>interval_traits</classname>&lt; Type &gt;::domain_type</type></typedef>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits" name="interval_traits"><template>
      <template-type-parameter name="Type"/>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_1a40d540d1fca4fb221903b7783c9d3a96" name="type"><type><classname>interval_traits</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_1a0f7a3c551a353e5cd6b28c79cab97db7" name="domain_type"><type>domain_type_of&lt; Type &gt;::type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_1a26ae4eaf01a6219e29ff2d553ebc00fa" name="construct" specifiers="static"><type>Type</type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_1a69cfa2ef0a508c4dbdc2e7155ea94cf1" name="upper" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const Type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_1a66d56233dd785aa04ea64224a117fb8c" name="lower" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01interval__traits_3_01Type_01_4_01_4" name="size_type_of"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>interval_traits&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01interval__traits_3_01Type_01_4_01_4_1adbe10df51d6ee6fcd1c014c53585acf4" name="domain_type"><type><classname>interval_traits</classname>&lt; Type &gt;::domain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01interval__traits_3_01Type_01_4_01_4_1a12b16056d22f385e2f1d12fefb04825f" name="type"><type>size_type_of&lt; domain_type &gt;::type</type></typedef>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.iterator_8hpp" name="boost/icl/iterator.hpp">
<namespace name="boost">
<namespace name="icl">
<class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator" name="add_iterator"><template>
      <template-type-parameter name="ContainerT"/>
    </template><purpose>Performes an addition using a container's memberfunction add, when operator= is called. </purpose><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1afffa0d13de864b8efcde3624deafff0d" name="container_type"><purpose>The container's type. </purpose><type>ContainerT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1a9ddf3a6c604c49e13fc397678a664676" name="iterator_category"><type>std::output_iterator_tag</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1a8217b8f220626706d28edb6f65549dc7" name="value_type"><type>void</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1a96cf942f1a8df15ebe428ebe0b55ceee" name="difference_type"><type>void</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1a9c65df723363d332b73da0bb584fa108" name="pointer"><type>void</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1a7a76ae25dcacd8d02592ab40f006932d" name="reference"><type>void</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1afa1670fa1e0a1beff909e121f37ded1a"><parameter name="cont"><paramtype>ContainerT &amp;</paramtype></parameter><parameter name="iter"><paramtype>typename ContainerT::iterator</paramtype></parameter><description><para>An <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator">add_iterator</link> is constructed with a container and a position that has to be maintained. </para></description></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1aa5b3e523c40acaa2fcbc81b80104dc25"><type><classname>add_iterator</classname> &amp;</type><parameter name="value"><paramtype>typename ContainerT::const_reference</paramtype></parameter><description><para>This assignment operator adds the <computeroutput>value</computeroutput> before the current position. It maintains it's position by incrementing after addition. <sbr/>
 </para></description></copy-assignment>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1a28235007154cc452580f20e71446ee90" name="operator*"><type><classname>add_iterator</classname> &amp;</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1a408435f1fca79b9a22a7200d570bdf47" name="operator++"><type><classname>add_iterator</classname> &amp;</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1a654ff758e6c501d2b032ce1d7c203595" name="operator++"><type><classname>add_iterator</classname> &amp;</type><parameter name=""><paramtype>int</paramtype></parameter></method>
</method-group>
</class><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator" name="insert_iterator"><template>
      <template-type-parameter name="ContainerT"/>
    </template><purpose>Performes an insertion using a container's memberfunction add, when operator= is called. </purpose><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1acdda3a77f24e9064873650281245192a" name="container_type"><purpose>The container's type. </purpose><type>ContainerT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1a47e2486bbf1e1b37866b1681be73aa0f" name="iterator_category"><type>std::output_iterator_tag</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1a570476c36574ba5956a08b577d5c2b65" name="value_type"><type>void</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1ad4d527418660a823155b58fe6906c3c2" name="difference_type"><type>void</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1ac5faeb304e2ed173b7c5012ecf1d59bf" name="pointer"><type>void</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1af4c6d55ad6c3d989c34bb08a74fe751c" name="reference"><type>void</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1a09e18dc67bf801de4ebdf3b60a99f21d"><parameter name="cont"><paramtype>ContainerT &amp;</paramtype></parameter><parameter name="iter"><paramtype>typename ContainerT::iterator</paramtype></parameter><description><para>An <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator">insert_iterator</link> is constructed with a container and a position that has to be maintained. </para></description></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1adcb608fae8820de59cd1336d0781bf6f"><type><classname>insert_iterator</classname> &amp;</type><parameter name="value"><paramtype>typename ContainerT::const_reference</paramtype></parameter><description><para>This assignment operator adds the <computeroutput>value</computeroutput> before the current position. It maintains it's position by incrementing after addition. <sbr/>
 </para></description></copy-assignment>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1a94e679fa5519c815de2ef89698b98b0e" name="operator*"><type><classname>insert_iterator</classname> &amp;</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1ad00718c56bd949b51c1ca8f4823941d1" name="operator++"><type><classname>insert_iterator</classname> &amp;</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1a6f86f4b98d00ddfdcfb5abfada169c68" name="operator++"><type><classname>insert_iterator</classname> &amp;</type><parameter name=""><paramtype>int</paramtype></parameter></method>
</method-group>
</class>



<function id="doxygen.interval_container_library_reference.iterator_8hpp_1a263c3021400b9da6addea4346bb6d2e7" name="adder"><type><classname>add_iterator</classname>&lt; ContainerT &gt;</type><template>
          <template-type-parameter name="ContainerT"/>
          <template-type-parameter name="IteratorT"/>
        </template><parameter name="cont"><paramtype>ContainerT &amp;</paramtype></parameter><parameter name="iter_"><paramtype>IteratorT</paramtype></parameter><description><para>Function adder creates and initializes an <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator">add_iterator</link> </para></description></function>
<function id="doxygen.interval_container_library_reference.iterator_8hpp_1abf2acdf82fc5926c2d3defdf2d1a46c5" name="inserter"><type><classname>insert_iterator</classname>&lt; ContainerT &gt;</type><template>
          <template-type-parameter name="ContainerT"/>
          <template-type-parameter name="IteratorT"/>
        </template><parameter name="cont"><paramtype>ContainerT &amp;</paramtype></parameter><parameter name="iter_"><paramtype>IteratorT</paramtype></parameter><description><para>Function inserter creates and initializes an <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator">insert_iterator</link> </para></description></function>




</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.left__open__interval_8hpp" name="boost/icl/left_open_interval.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01left__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_bound_type"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>left_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1ae385c629c3c81cc2a244df36bbc654ca" name="type"><type>interval_bound_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a1f72fc7052bde3987c79cf59fcd1f39a" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>interval_bounds::static_left_open</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::left_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a19e92e058c53bcf672a89e8898d4a92d" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a10401830bfaa3e95cd58b8a81318549f" name="interval_type"><type><classname>icl::left_open_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a0014e3129fa1850cd588a855a2efc89c" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a1b4b53511a0ea069cc67826fec0c7e70" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1af99871b61344a3445eca679d888fbf2f" name="lower" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1affa09ea5352c997e03233815d42c8029" name="upper" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval" name="left_open_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
    </template><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1a98c1fefae65dcf2041bea86b139076f0" name="type"><type><classname>left_open_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1a83e88e0b358a50a0c6006f22b6f9e1ae" name="domain_type"><type>DomainT</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1ae56333303a78c9e175dbed4ac9149fb2" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1a36fbe665856f2b5005f2ebf0619c702b"><description><para>Default constructor; yields an empty interval <computeroutput>(0,0]</computeroutput>. </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1a86f0f5e8bf20efd425bb7c3373c46ed9" specifiers="explicit"><parameter name="val"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Constructor for a left-open singleton interval <computeroutput>(val-1,val]</computeroutput> </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1a2e695169f7d391fd236aee89078a1333"><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Interval from <computeroutput>low</computeroutput> to <computeroutput>up</computeroutput> with bounds <computeroutput>bounds</computeroutput> </para></description></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1aeb579374fb7e5b93f07f382befcee1ba" name="lower" cv="const"><type>DomainT</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1aa2b981cca3515d2121aace7be9d0fdea" name="upper" cv="const"><type>DomainT</type></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::left_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a4c54e5202f2218c1b47a0cce560261fc" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="value_size"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::left_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a2898b0205d047e445b562bd893eebcb6" name="apply" specifiers="static"><type>std::size_t</type><parameter name=""><paramtype>const <classname>icl::left_open_interval</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.map_8hpp" name="boost/icl/map.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_d848903fce2dcb02058418d551525a3e" name="absorbs_identities"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_d848903fce2dcb02058418d551525a3e_1a2d62d2a1f07be8ddb2e77fd43c3739b9" name="type"><type>absorbs_identities</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_d848903fce2dcb02058418d551525a3e_1a1fcd90b70d83a7fd2e3518f04eff19ec" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>Traits::absorbs_identities</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Co8cdfe4b7c33a741b02e3d008f445e81b" name="has_inverse"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Co8cdfe4b7c33a741b02e3d008f445e81b_1ac491f983482eb626b209d4b5a5383fdd" name="type"><type>has_inverse&lt; <classname>icl::map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Co8cdfe4b7c33a741b02e3d008f445e81b_1a54ee86ebf006fa50f0f2335be5e8c56f" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(has_inverse&lt; CodomainT &gt;::value)</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Compare08b317b44f13dc95a3a2eb000dfd90b2" name="is_map"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Compare08b317b44f13dc95a3a2eb000dfd90b2_1a053e1e5674e5029427cd0408cc9823a3" name="type"><type>is_map&lt; <classname>icl::map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Compare08b317b44f13dc95a3a2eb000dfd90b2_1a1c448589f07a35816cc27db9e65e9a45" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Compaf73d73db6aca601aa482cf3b6104f7a3" name="is_total"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Compaf73d73db6aca601aa482cf3b6104f7a3_1a9709cd32276f0f44db75b96f86c97e17" name="type"><type>is_total</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Compaf73d73db6aca601aa482cf3b6104f7a3_1adf08bcb9a78eba8b01249b9cd0f5bb39" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>Traits::is_total</default></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map" name="map"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"><default>icl::partial_absorber</default></template-type-parameter>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type><default>ICL_COMBINE_INSTANCE(icl::inplace_plus, CodomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type><default>ICL_SECTION_INSTANCE(icl::inter_section, CodomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><inherit access="private">ICL_IMPL_SPACE::map&lt; DomainT, CodomainT, ICL_COMPARE_DOMAIN(ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), DomainT), std::allocator&lt; std::pair&lt; const DomainT, CodomainT &gt; &gt; &gt;</inherit><purpose>Addable, subractable and intersectable maps. </purpose><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="has_set_semantics"><type>bool</type></template-nontype-parameter>
      <template-nontype-parameter name="absorbs_identities"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01false_00_01false_01_4" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg><template-arg>false</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01false_00_01false_01_4_1a753f0817c3406740bae7e85a312bc63a" name="subtract" specifiers="static"><type>void</type><parameter name=""><paramtype>Type &amp;</paramtype></parameter><parameter name="it_"><paramtype>typename Type::iterator</paramtype></parameter><parameter name=""><paramtype>const typename Type::codomain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01false_00_01true_01_4" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg><template-arg>true</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01false_00_01true_01_4_1a2295b4580b492b8e6684fc5209ffcda7" name="subtract" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="it_"><paramtype>typename Type::iterator</paramtype></parameter><parameter name=""><paramtype>const typename Type::codomain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01true_00_01false_01_4" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg><template-arg>false</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01true_00_01false_01_4_1a55bbb9cfd1e957894f03f17861501dc2" name="inverse_codomain_intersect"><type>Type::inverse_codomain_intersect</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01true_00_01false_01_4_1ad2b886f01b68cdbe1c5deb01a67da164" name="subtract" specifiers="static"><type>void</type><parameter name=""><paramtype>Type &amp;</paramtype></parameter><parameter name="it_"><paramtype>typename Type::iterator</paramtype></parameter><parameter name="co_value"><paramtype>const typename Type::codomain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01true_00_01true_01_4" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg><template-arg>true</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01true_00_01true_01_4_1a3d3731d2feaad359f1c8715493124c0c" name="inverse_codomain_intersect"><type>Type::inverse_codomain_intersect</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01true_00_01true_01_4_1a86901684c3c5473020ac4b887b93c5b4" name="subtract" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="it_"><paramtype>typename Type::iterator</paramtype></parameter><parameter name="co_value"><paramtype>const typename Type::codomain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__definedness" name="on_definedness"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="is_total"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__definedness_3_01Type_00_01false_01_4" name="on_definedness"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__definedness_3_01Type_00_01false_01_4_1a12fcad0e63601eb1f1a8104ca6e29636" name="add_intersection" specifiers="static"><type>void</type><parameter name="section"><paramtype>Type &amp;</paramtype></parameter><parameter name="object"><paramtype>const Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__definedness_3_01Type_00_01true_01_4" name="on_definedness"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__definedness_3_01Type_00_01true_01_4_1a130883f96f62a3c740492c9f7c1f8e33" name="add_intersection" specifiers="static"><type>void</type><parameter name="section"><paramtype>Type &amp;</paramtype></parameter><parameter name="object"><paramtype>const Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible" name="on_invertible"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="is_total_invertible"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01false_01_4" name="on_invertible"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01false_01_4_1ab7e7eb0617fa45aec6534018f9d2a8c3" name="element_type"><type>Type::element_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01false_01_4_1a9b5dee1a5a99361ec1cee8fdc6bc95ca" name="inverse_codomain_combine"><type>Type::inverse_codomain_combine</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01false_01_4_1ab56832f360208c24585c325645143df5" name="subtract" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01true_01_4" name="on_invertible"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01true_01_4_1aab368aeda7f0a9f2ebe6568418332cf8" name="element_type"><type>Type::element_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01true_01_4_1a15c5559c7d7e88e1bb4d7c845eb8c53e" name="inverse_codomain_combine"><type>Type::inverse_codomain_combine</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01true_01_4_1a32184a6ab4e0dd59b707811df1967e4a" name="subtract" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="is_total"><type>bool</type></template-nontype-parameter>
      <template-nontype-parameter name="absorbs_identities"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01false_01_4" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg><template-arg>false</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01false_01_4_1ae5dabfeec8550de348c60bcd2f3bb2de" name="element_type"><type>Type::element_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01false_01_4_1a5f713df1ac202587b38e006e58d06ff2" name="codomain_type"><type>Type::codomain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01false_01_4_1ac8ba9f053069d4b669d9b8e12136d48c" name="iterator"><type>Type::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01false_01_4_1a68f8ba6a10141c3c9e67a64ee2961e9a" name="inverse_codomain_intersect"><type>Type::inverse_codomain_intersect</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01false_01_4_1a74b68b6d59626e5b16e2f37a36c1aa9c" name="flip" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01true_01_4" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg><template-arg>true</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01true_01_4_1a4e61c0343a48d955878a1378168e8668" name="element_type"><type>Type::element_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01true_01_4_1aed49d443b6fda310a566643bb8b30aaa" name="codomain_type"><type>Type::codomain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01true_01_4_1a0a8e02b3c51e5000eefd61974072f48d" name="iterator"><type>Type::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01true_01_4_1a09abfd7ccf6517ce260f323837389020" name="inverse_codomain_intersect"><type>Type::inverse_codomain_intersect</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01true_01_4_1a7861e56f61fb4341f0159abd0fc7c9e8" name="flip" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg><template-arg>false</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4_1a3bd73e08e6e08c0edd69600b03b641d1" name="element_type"><type>Type::element_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4_1af3c5a06339f0d6b81f9719529f478ed8" name="codomain_type"><type>Type::codomain_type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4_1a40705b7210b2f0b2b3156614183e74d0" name="flip" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01true_00_01true_01_4" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg><template-arg>true</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01true_00_01true_01_4_1afb952f39990a7e0c538992f15a4fa449" name="element_type"><type>Type::element_type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01true_00_01true_01_4_1ab27e102eb81e0c609ed33e38e30bd91a" name="flip" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name=""><paramtype>const typename Type::element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a8828e528d53f14e0431ab1e8b80e5f77" name="allocator_type"><type>Alloc&lt; typename std::pair&lt; const DomainT, CodomainT &gt; &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a5ba885dd8351408404ca7ab9c93cd500" name="type"><type><classname>icl::map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1aac01945903de2c1d6e43fcd298898bf3" name="base_type"><type>ICL_IMPL_SPACE::map&lt; DomainT, CodomainT, ICL_COMPARE_DOMAIN(Compare, DomainT), allocator_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1adfdfff860d48568d8e05081ecfdc2aec" name="traits"><type>Traits</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a089f5b21d23a99cca6d528ce31b8db24" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a8f1ad3f4e6db5946e1b815df6ee02754" name="domain_param"><type>boost::call_traits&lt; DomainT &gt;::param_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a13ec0fb13475b11f1ab658f7ca507071" name="key_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a70694342a9432f42a4b8a603466cee30" name="codomain_type"><type>CodomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1aee7f0179bf827dc1b2fe805ca23ef6ac" name="mapped_type"><type>CodomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1aca79460798600de2538978596049d765" name="data_type"><type>CodomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a1aa367b53c47c09ccc93c98f5df771fd" name="element_type"><type>std::pair&lt; const DomainT, CodomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1abadb5327707899229a9467cf85c1f6c7" name="value_type"><type>std::pair&lt; const DomainT, CodomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1af2ac715736de5da96905517362adfba3" name="key_compare"><type>domain_compare</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a419fdd583ff9cdccf47806338651c3b6" name="inverse_codomain_combine"><type><classname>inverse</classname>&lt; codomain_combine &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a65346cb0b8c2f82cf9bdb8d1dfd4238d" name="codomain_intersect"><type>mpl::if_&lt; has_set_semantics&lt; codomain_type &gt;, ICL_SECTION_CODOMAIN(Section, CodomainT), codomain_combine &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a6e26322cb26d45962add47bfd89001d1" name="inverse_codomain_intersect"><type><classname>inverse</classname>&lt; codomain_intersect &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a7eaae17c1969f1ebf1e47eac66642508" name="value_compare"><type>base_type::value_compare</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a4df1db009f7c31cb0cde0830edd67a6f" name="set_type"><type>ICL_IMPL_SPACE::set&lt; DomainT, domain_compare, Alloc&lt; DomainT &gt; &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a6994250e45d6d6b28715e68c91d064c3" name="key_object_type"><type>set_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ac71d44d502776ce2341ffa7a55781d2f" name="on_identity_absorbtion"><type>on_absorbtion&lt; <classname>type</classname>, codomain_combine, Traits::absorbs_identities &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a9c89db86ce1c52af73fed678cb0687a5" name="pointer"><type>base_type::pointer</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a58d2232dac4e1b7f8a28d6f0333d2dea" name="const_pointer"><type>base_type::const_pointer</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ab78c183793feb77ffac71acdd42a541d" name="reference"><type>base_type::reference</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a8edce6055495a0e08f30b09fe573d3bb" name="const_reference"><type>base_type::const_reference</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1abc335c9eed0844a0c8a9e25b7145d9a6" name="iterator"><type>base_type::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a85ebb2a803d4580ee545ec562bd08477" name="const_iterator"><type>base_type::const_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ad8cdd5d6b93a42ebdda0f4325f4f9916" name="size_type"><type>base_type::size_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ac1e8ed361c380cd116b087e3a719eac0" name="difference_type"><type>base_type::difference_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ac9eba314f9f6ba3bb526f1257d0179be" name="reverse_iterator"><type>base_type::reverse_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a02cea355d906f797e3f09bda9d053ebb" name="const_reverse_iterator"><type>base_type::const_reverse_iterator</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a450ef1131c1a47de15d30029c2989422" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a670de8639ea422cd993b624e7f21d5d6" name="ICL_COMBINE_CODOMAIN"><type>typedef</type><parameter name=""><paramtype>Combine</paramtype></parameter><parameter name=""><paramtype>CodomainT</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ab0c73660c14c9c71bc1add5fa6772b04" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>element_type</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a372db6684944790ee73da82ad16b321c" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>_total</paramtype><default>(Traits::is_total)</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1abd448b89c42877a75b67b386d061d05c" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>_absorbs</paramtype><default>(Traits::absorbs_identities)</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1adccbb3f10cc5a08c8ee71717a7c01994" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>total_invertible</paramtype><default>(mpl::and_&lt; is_total&lt; type &gt;, has_inverse&lt; codomain_type &gt; &gt;::value)</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a15d4eb07a3f45b4f5375e6dccb7e7595" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>is_total_invertible</paramtype><default>(Traits::is_total &amp;&amp;has_inverse&lt; codomain_type &gt;::value)</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1af8429f16ab04006e60845fa179f5a7b3" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>fineness</paramtype><default>4</default></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1aa9f57af05ed185dc4c02adc3cfeb3918"/>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ab410f446c3b0dc5b89b22cae8b21b639"><parameter name="comp"><paramtype>const key_compare &amp;</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1aa184086cd491403817fe7e7516dce633"><template>
          <template-type-parameter name="InputIterator"/>
        </template><parameter name="first"><paramtype>InputIterator</paramtype></parameter><parameter name="past"><paramtype>InputIterator</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ab96434c751abee81d6d76e5671ce2ac7"><template>
          <template-type-parameter name="InputIterator"/>
        </template><parameter name="first"><paramtype>InputIterator</paramtype></parameter><parameter name="past"><paramtype>InputIterator</paramtype></parameter><parameter name="comp"><paramtype>const key_compare &amp;</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a8c0d115b2de9304c1d12233556154b64"><parameter name="src"><paramtype>const <classname>map</classname> &amp;</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ae32284da11ca5c516a7d79956a9b70fb" specifiers="explicit"><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a0672fd322b23beba610a556f037fc44b"><parameter name="src"><paramtype><classname>map</classname> &amp;&amp;</paramtype></parameter></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1afc7faf2e5029c25159689f1bdca1c9e9"><type><classname>map</classname> &amp;</type><parameter name="src"><paramtype><classname>map</classname></paramtype></parameter></copy-assignment>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1afa941431ab31254b6ad4dd8959703140" name="swap"><type>void</type><parameter name="src"><paramtype><classname>map</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a1bae2e97d06ae6bdb2c3950f56d63988" name="contains" cv="const"><type>bool</type><template>
          <template-type-parameter name="SubObject"/>
        </template><parameter name="sub"><paramtype>const SubObject &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a66042a0cb7dc4a2cab0a14aa56baa624" name="within" cv="const"><type>bool</type><parameter name="super"><paramtype>const <classname>map</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a88f0618ca8f929849228619ee7b7ab21" name="iterative_size" cv="const"><type>std::size_t</type><description><para><computeroutput><link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a88f0618ca8f929849228619ee7b7ab21">iterative_size()</link></computeroutput> yields the number of elements that is visited throu complete iteration. For interval sets <computeroutput><link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a88f0618ca8f929849228619ee7b7ab21">iterative_size()</link></computeroutput> is different from <computeroutput>size()</computeroutput>. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ac60f976ed30982e8d893bf194e83b64f" name="operator()" cv="const"><type>codomain_type</type><parameter name="key"><paramtype>const domain_type &amp;</paramtype></parameter><description><para>Total select function. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1acc83c29efbeee39d6da5a1c8609dde15" name="add"><type><classname>map</classname> &amp;</type><parameter name="value_pair"><paramtype>const value_type &amp;</paramtype></parameter><description><para><computeroutput>add</computeroutput> inserts <computeroutput>value_pair</computeroutput> into the map if it's key does not exist in the map. If <computeroutput>value_pairs's</computeroutput> key value exists in the map, it's data value is added to the data value already found in the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a686dc07e78206e48c77aba636e99d9c9" name="add"><type>iterator</type><parameter name="prior"><paramtype>iterator</paramtype></parameter><parameter name="value_pair"><paramtype>const value_type &amp;</paramtype></parameter><description><para><computeroutput>add</computeroutput> add <computeroutput>value_pair</computeroutput> into the map using <computeroutput>prior</computeroutput> as a hint to insert <computeroutput>value_pair</computeroutput> after the position <computeroutput>prior</computeroutput> is pointing to. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ad4c8fa8f14ac8c3c206ce6e1188594d9" name="subtract"><type><classname>map</classname> &amp;</type><parameter name="value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>If the <computeroutput>value_pair's</computeroutput> key value is in the map, it's data value is subtraced from the data value stored in the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a55063fdb30a715d5d1bc997f2347dcfb" name="subtract"><type><classname>map</classname> &amp;</type><parameter name="key"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a338b98324caeede0b8877a01adf69c34" name="insert"><type>std::pair&lt; iterator, bool &gt;</type><parameter name="value_pair"><paramtype>const value_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1aa3c0023f3df6b37382f660f16699b4dc" name="insert"><type>iterator</type><parameter name="prior"><paramtype>iterator</paramtype></parameter><parameter name="value_pair"><paramtype>const value_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a4866790648077c795f569406d042610a" name="insert"><type>iterator</type><template>
          <template-type-parameter name="Iterator"/>
        </template><parameter name="first"><paramtype>Iterator</paramtype></parameter><parameter name="last"><paramtype>Iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a37c5a06161055bce7087441e40981f87" name="set"><type><classname>map</classname> &amp;</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>With <computeroutput>key_value_pair = (k,v)</computeroutput> set value <computeroutput>v</computeroutput> for key <computeroutput>k</computeroutput> </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ad3dd1d02c86a06f5674b47a2504bcbce" name="erase"><type>size_type</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>erase <computeroutput>key_value_pair</computeroutput> from the map. Erase only if, the exact value content <computeroutput>val</computeroutput> is stored for the given key. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a136f49340b7da692a4d605000926b1df" name="add_intersection" cv="const"><type>void</type><parameter name="section"><paramtype><classname>map</classname> &amp;</paramtype></parameter><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>The intersection of <computeroutput>key_value_pair</computeroutput> and <computeroutput>*this</computeroutput> map is added to <computeroutput>section</computeroutput>. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a797451316f888ff6ba400c1a5a98ef69" name="flip"><type><classname>map</classname> &amp;</type><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a7b3331e07fbd751c03eb0ceeff14b39d" name="_add"><type><classname>map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Alloc &gt; &amp;</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="addend"><paramtype>const element_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a32e15c4adf85dd266979f1d580787721" name="_subtract"><type><classname>map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Alloc &gt; &amp;</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="minuend"><paramtype>const value_type &amp;</paramtype></parameter></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a54353a2ec56d7030397d6ea555b67c5e" name="_add"><type><classname>map</classname> &amp;</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="value_pair"><paramtype>const element_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a2426aeca96614823f6aff06bd749b6e0" name="_add"><type>iterator</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="prior"><paramtype>iterator</paramtype></parameter><parameter name="value_pair"><paramtype>const element_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ac1243d4cc9b7fa6f2f74e17c1a88ad27" name="_subtract"><type><classname>map</classname> &amp;</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="value_pair"><paramtype>const element_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a23b2e2c92e335d7f223b72efadfb72fa" name="total_add_intersection" cv="const"><type>void</type><template>
          <template-type-parameter name="FragmentT"/>
        </template><parameter name="section"><paramtype><classname>type</classname> &amp;</paramtype></parameter><parameter name="fragment"><paramtype>const FragmentT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1abe746e6f274ba9fb8e16fac2337d4b15" name="partial_add_intersection" cv="const"><type>void</type><parameter name="section"><paramtype><classname>type</classname> &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</class><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__absorber" name="partial_absorber"><enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__absorber_1a6412dfa83b483450c6e0a94a93fa0bdd" name=""><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__absorber_1a6412dfa83b483450c6e0a94a93fa0bdda081fee5e0c9d3f04d1c2679e073c5573" name="absorbs_identities"><default>true</default></enumvalue></enum>
<enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__absorber_1aa7f5f0eba3643ac7f59b9f1a5141f480" name=""><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__absorber_1aa7f5f0eba3643ac7f59b9f1a5141f480aaedde500cdc54c75b00ff69a92f615d5" name="is_total"><default>false</default></enumvalue></enum>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__enricher" name="partial_enricher"><enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__enricher_1a3fc135e997d183e7882495ea89158d6d" name=""><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__enricher_1a3fc135e997d183e7882495ea89158d6dab99f2900520e7c140e9206e1b3071605" name="absorbs_identities"><default>false</default></enumvalue></enum>
<enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__enricher_1abbcb1e9131dadfde3dc3ce139ae8bea3" name=""><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__enricher_1abbcb1e9131dadfde3dc3ce139ae8bea3aad4f5f439c62254a6911271063ed98d5" name="is_total"><default>false</default></enumvalue></enum>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__absorber" name="total_absorber"><enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__absorber_1a455e72ad7b7fe5a2a3f5235345adcaa4" name=""><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__absorber_1a455e72ad7b7fe5a2a3f5235345adcaa4a225e7b212b5561889924429b1364c916" name="absorbs_identities"><default>true</default></enumvalue></enum>
<enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__absorber_1a101f3d5972ca792a11b817dafb4f3242" name=""><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__absorber_1a101f3d5972ca792a11b817dafb4f3242abcfbf239a3fe6bdf8bae6ddb9054cde3" name="is_total"><default>true</default></enumvalue></enum>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__enricher" name="total_enricher"><enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__enricher_1a565524466425cd095918f1077a20d403" name=""><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__enricher_1a565524466425cd095918f1077a20d403adafc4d31d6413fbcd656afd54b5a674d" name="absorbs_identities"><default>false</default></enumvalue></enum>
<enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__enricher_1a94ff38bc72e458fdf099eaaa4a60f305" name=""><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__enricher_1a94ff38bc72e458fdf099eaaa4a60f305a52b2a56bbd0fd16ea6ec7999fc56a914" name="is_total"><default>true</default></enumvalue></enum>
</struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_b94394d96f3b5ccca17e081d667ad073" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Alloc &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_b94394d96f3b5ccca17e081d667ad073_1a6b14f5b2f0970b85dcc802005a98f6b8" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.open__interval_8hpp" name="boost/icl/open_interval.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_bound_type"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a4fc2a70f6df31e88ae6cd3cf4087e755" name="type"><type>interval_bound_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a05889398ae6a7e10a5c947461f1867ed" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>interval_bounds::static_open</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1ae6c1dded5b15749eb9dbcbd4d0dc3802" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a905cf4e2fd49d26bfc9aaad47affe4b0" name="interval_type"><type><classname>icl::open_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a7cf53435052165042c374d42b51dab22" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a2ebb741bbd831b3e8c8f59b3fada9e53" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a7175d340d9df7130a320ce7fdf752741" name="lower" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1ac3478041d4c6b2b77098eb5f8ac58890" name="upper" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval" name="open_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
    </template><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1ac46310b4e31687b20fbdf57bef61b9f7" name="type"><type><classname>open_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1a1b9f8da432d98eee2e2f45ac13050fd6" name="domain_type"><type>DomainT</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1a056f65361233d276e237a2b242261b2e" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1af739730dbd840e85ebe3c26a84563da3"><description><para>Default constructor; yields an empty interval <computeroutput>(0,0)</computeroutput>. </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1af563ab550396ed865b6ada8b32ff2d28" specifiers="explicit"><parameter name="val"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Constructor for an open singleton interval <computeroutput>(val-1,val+1)</computeroutput> </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1a1f5aec79cf72695b722bc77a487b7959"><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Interval from <computeroutput>low</computeroutput> to <computeroutput>up</computeroutput> with bounds <computeroutput>bounds</computeroutput> </para></description></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1a4ddcf95513dcadc497e419f0de7c6a61" name="lower" cv="const"><type>DomainT</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1ac5baa9fb3d63ab5f0413ee3aa19c6664" name="upper" cv="const"><type>DomainT</type></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a579bee96b8d088a0f03c08aa8ad35e7d" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="value_size"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1ae2c07831b82f0778bf0a74217ffd0c96" name="apply" specifiers="static"><type>std::size_t</type><parameter name=""><paramtype>const <classname>icl::open_interval</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.ptime_8hpp" name="boost/icl/ptime.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1difference__type__of_3_01boost_1_1posix__time_1_1ptime_01_4" name="difference_type_of"><template>
    </template><specialization><template-arg>boost::posix_time::ptime</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1difference__type__of_3_01boost_1_1posix__time_1_1ptime_01_4_1a745816d54d557c34f61d1ebdd5954e1f" name="type"><type>boost::posix_time::time_duration</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1posix__time_1_1ptime_01_4" name="has_difference"><template>
    </template><specialization><template-arg>boost::posix_time::ptime</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1posix__time_1_1ptime_01_4_1a248c720c991f23ec80921ed76419f389" name="type"><type>has_difference</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1posix__time_1_1ptime_01_4_1a14a543fe8a1b719893bf4debc3996038" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1posix__time_1_1time__duration_01_4" name="has_difference"><template>
    </template><specialization><template-arg>boost::posix_time::time_duration</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1posix__time_1_1time__duration_01_4_1a063aa45d603068cad4cd7d8808177bd5" name="type"><type>has_difference</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1posix__time_1_1time__duration_01_4_1a7f1a5f8366d7e17fc300cc6506953b4c" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1posix__time_1_1ptime_01_4" name="is_discrete"><template>
    </template><specialization><template-arg>boost::posix_time::ptime</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1posix__time_1_1ptime_01_4_1a06bbd7728ac6221c83ea65e300da43b5" name="type"><type>is_discrete</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1posix__time_1_1ptime_01_4_1aa29a9bae43ec17794d80db1e6e09b91a" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1posix__time_1_1time__duration_01_4" name="is_discrete"><template>
    </template><specialization><template-arg>boost::posix_time::time_duration</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1posix__time_1_1time__duration_01_4_1a7907ffd59df6be8c23167db731170c75" name="type"><type>is_discrete</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1posix__time_1_1time__duration_01_4_1a32ce634b98a6c54457073241cb4c4e09" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1posix__time_1_1ptime_01_4" name="size_type_of"><template>
    </template><specialization><template-arg>boost::posix_time::ptime</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1posix__time_1_1ptime_01_4_1a77dcf8377f20fb4bc85c1bccc2666432" name="type"><type>boost::posix_time::time_duration</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1posix__time_1_1time__duration_01_4" name="size_type_of"><template>
    </template><specialization><template-arg>boost::posix_time::time_duration</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1posix__time_1_1time__duration_01_4_1aad2ba3de482f684a0c12ca9be805652d" name="type"><type>boost::posix_time::time_duration</type></typedef>
</struct-specialization><function id="doxygen.interval_container_library_reference.ptime_8hpp_1aa7d00693fd41952db07bcbc8946243b0" name="operator++"><type>boost::posix_time::ptime</type><parameter name="x"><paramtype>boost::posix_time::ptime &amp;</paramtype></parameter></function>
<function id="doxygen.interval_container_library_reference.ptime_8hpp_1a520f469d73d8700fd9bce9bbb6584d92" name="operator--"><type>boost::posix_time::ptime</type><parameter name="x"><paramtype>boost::posix_time::ptime &amp;</paramtype></parameter></function>
<function id="doxygen.interval_container_library_reference.ptime_8hpp_1a309adf571b170d952c75e11dec1a1629" name="operator++"><type>boost::posix_time::time_duration</type><parameter name="x"><paramtype>boost::posix_time::time_duration &amp;</paramtype></parameter></function>
<function id="doxygen.interval_container_library_reference.ptime_8hpp_1a90ded08522f47ea99448ac453b886375" name="operator--"><type>boost::posix_time::time_duration</type><parameter name="x"><paramtype>boost::posix_time::time_duration &amp;</paramtype></parameter></function>






</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.rational_8hpp" name="boost/icl/rational.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01boost_1_1rational_3_01Integral_01_4_01_4" name="has_inverse"><template>
      <template-type-parameter name="Integral"/>
    </template><specialization><template-arg>boost::rational&lt; Integral &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01boost_1_1rational_3_01Integral_01_4_01_4_1a5c018fd59510e66f04d49d4ac555ab63" name="type"><type>has_inverse</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01boost_1_1rational_3_01Integral_01_4_01_4_1ae8c1fdad96c7cf86cd729f331f44ca39" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(boost::is_signed&lt; Integral &gt;::value)</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__continuous_3_01boost_1_1rational_3_01Integral_01_4_01_4" name="is_continuous"><template>
      <template-type-parameter name="Integral"/>
    </template><specialization><template-arg>boost::rational&lt; Integral &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__continuous_3_01boost_1_1rational_3_01Integral_01_4_01_4_1a7a54f91e34c924f91f30e36fcfcf533a" name="type"><type>is_continuous</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__continuous_3_01boost_1_1rational_3_01Integral_01_4_01_4_1a30865cef8db79a74e5c52c67c336ca91" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1rational_3_01Integral_01_4_01_4" name="is_discrete"><template>
      <template-type-parameter name="Integral"/>
    </template><specialization><template-arg>boost::rational&lt; Integral &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1rational_3_01Integral_01_4_01_4_1a5ef5e602e32a7f0ffc907a82a596bd5b" name="type"><type>is_discrete</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1rational_3_01Integral_01_4_01_4_1a045d4a383725586dfe422ca800ab1b85" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>false</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__numeric_3_01boost_1_1rational_3_01Integral_01_4_01_4" name="is_numeric"><template>
      <template-type-parameter name="Integral"/>
    </template><specialization><template-arg>boost::rational&lt; Integral &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__numeric_3_01boost_1_1rational_3_01Integral_01_4_01_4_1a71a0d101937a941cc727f58fad946cde" name="type"><type>is_numeric</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__numeric_3_01boost_1_1rational_3_01Integral_01_4_01_4_1a77dabd1cda283a7ee7bd5d2bad3e4476" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.right__open__interval_8hpp" name="boost/icl/right_open_interval.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01right__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_bound_type"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>right_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a41a817cb6f16c90050ad4f50c86caf7c" name="type"><type>interval_bound_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a998cd71c2f1d2a9c6c38c9667e8b21f1" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>interval_bounds::static_right_open</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::right_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a4a20fd453b4dafcac96e9d129060e6a7" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a737c84f050a225aff041ee0127b46459" name="interval_type"><type><classname>icl::right_open_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1ac72925b744e4e11f4a842b5ac75bd870" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a0775cee6a2fd08dac05456317647df80" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a2aa581dd05499927bc1f8bda3823bb31" name="lower" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a6e6f8930c5f7a80745549ff1317d8595" name="upper" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval" name="right_open_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
    </template><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1aac2558c3c3c113f21360d1f67395a5da" name="type"><type><classname>right_open_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1a02c7d81deff10cd0676cd9b78bf636db" name="domain_type"><type>DomainT</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1abfccbe2354d86432ca1200a16d1fda4c" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1a6dedb62939bd1d5a38211313435d2d53"><description><para>Default constructor; yields an empty interval <computeroutput>[0,0)</computeroutput>. </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1aff33261f6109e7967326155c323e37e9" specifiers="explicit"><parameter name="val"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Constructor for a singleton interval <computeroutput>[val,val+1)</computeroutput> </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1af6a75838e31db44b8fc453b7c1bd2c58"><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Interval from <computeroutput>low</computeroutput> to <computeroutput>up</computeroutput> with bounds <computeroutput>bounds</computeroutput> </para></description></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1a0d65313b40ebbf8b9b6e64005c82356e" name="lower" cv="const"><type>domain_type</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1a24683247720a17ce8270d93911aa3ba8" name="upper" cv="const"><type>domain_type</type></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::right_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1adb5d7ca7ada9a801f36ac0bb15789bb4" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="value_size"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::right_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a78d9450a9201e1587255a81762544ce5" name="apply" specifiers="static"><type>std::size_t</type><parameter name=""><paramtype>const <classname>icl::right_open_interval</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.separate__interval__set_8hpp" name="boost/icl/separate_interval_set.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1separate__interval__set_3_01DomainT_00_71b40d20ff5772836b8a86132a267170" name="is_interval_container"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::separate_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1separate__interval__set_3_01DomainT_00_71b40d20ff5772836b8a86132a267170_1ae6546810c1d9bcdd6e585780c6b84aaa" name="type"><type>is_interval_container&lt; <classname>icl::separate_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1separate__interval__set_3_01DomainT_00_71b40d20ff5772836b8a86132a267170_1ab0cee8d8023804b90dadfa3a3c85083f" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__separator_3_01icl_1_1separate__interval__set_3_01DomainT_00_6fb331b6ef835fa8d8547391adb530bd" name="is_interval_separator"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::separate_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__separator_3_01icl_1_1separate__interval__set_3_01DomainT_00_6fb331b6ef835fa8d8547391adb530bd_1ad0addd5c37b422beda0fcc5c24bc0d9d" name="type"><type>is_interval_separator&lt; <classname>icl::separate_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__separator_3_01icl_1_1separate__interval__set_3_01DomainT_00_6fb331b6ef835fa8d8547391adb530bd_1a53d79e572e8a585c38b152cb7600c759" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1separate__interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4" name="is_set"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::separate_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1separate__interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1ab2688981a4b2ef6212329b81a75c67e2" name="type"><type>is_set&lt; <classname>icl::separate_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1separate__interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1acb95b78860e03b1ca46bb18316af7adb" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set" name="separate_interval_set"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type><default>ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, Compare)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><inherit access="public">boost::icl::interval_base_set&lt; separate_interval_set&lt; DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;</inherit><purpose>Implements a set as a set of intervals - leaving adjoining intervals separate. </purpose><enum id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a41852dd4980472168867e39636081040" name=""><enumvalue id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a41852dd4980472168867e39636081040ae5583f630ca83a9b0be25d1c9fe09268" name="fineness"><default>2</default></enumvalue></enum>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a58a623e28f6b6c8dcf0a6215a368fc66" name="type"><type><classname>separate_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a86819f81990aad1521a0729ca557cb62" name="base_type"><type><classname>interval_base_set</classname>&lt; <classname>type</classname>, DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ab02951ce583d8f2ae151fe43c92e4bdb" name="overloadable_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1aad5a5f187aaa793fe62e5894a5a3bc2c" name="key_object_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a74c83c208b2c71b01f8db4ce3b1786fa" name="joint_type"><type><classname>interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a022f8fcd5a9d5c4fe5cbab7e870802cc" name="domain_type"><purpose>The domain type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a2a622e18d9edc12795b7ed3b46878ce7" name="codomain_type"><purpose>The codomaintype is the same as domain_type. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a48bc437a56bd0884a2eb6aeac944bc32" name="element_type"><purpose>The element type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a87fba1704841451b846f2b8d54c881bc" name="segment_type"><purpose>The segment type of the set. </purpose><type>interval_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1aa7328f1c9154fc9119625fedd63e6bcb" name="interval_compare"><purpose>Comparison functor for intervals. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a4a879622e33da5ed3407a27d3fefde85" name="key_compare"><purpose>Comparison functor for keys. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1abd04c53542476c9ed145feabd1bcb5fc" name="allocator_type"><purpose>The allocator type of the set. </purpose><type>Alloc&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a590611dc743a49e69daeb0c5c4189fda" name="domain_allocator_type"><purpose>allocator type of the corresponding element set </purpose><type>Alloc&lt; DomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a05e8e8162cc714da646164c884e4ec1d" name="atomized_type"><purpose>The corresponding atomized type representing this interval container of elements. </purpose><type>base_type::atomized_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1af5f69c85fded2577c7d931772109db7b" name="ImplSetT"><purpose>Container type for the implementation. </purpose><type>base_type::ImplSetT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ab317d4624be22b2f86b1b66c7cd70541" name="key_type"><purpose>key type of the implementing container </purpose><type>ImplSetT::key_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1accf280cdc7ec4302f0b658ece1a64dc6" name="data_type"><purpose>data type of the implementing container </purpose><type>ImplSetT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a7b8e66614815091ab50b0e13bbc2e2c7" name="value_type"><purpose>value type of the implementing container </purpose><type>ImplSetT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a050eaa5e81aae88302bf9c1aa30a98d4" name="iterator"><purpose>iterator for iteration over intervals </purpose><type>ImplSetT::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1aa6fa951741f2c79308d49986c4ef7c26" name="const_iterator"><purpose>const_iterator for iteration over intervals </purpose><type>ImplSetT::const_iterator</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ab5fbec0b861cdf8bad53dfc8c10eb53d" name="ICL_INTERVAL_TYPE"><type>typedef</type><parameter name=""><paramtype>Interval</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><parameter name=""><paramtype>Compare</paramtype></parameter><purpose>The interval type of the set. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a6b4550568177181e19d27da5a0654244" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><purpose>Comparison functor for domain values. </purpose></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ad7475e05e5fef6f0e01f20c43c3fb880"><purpose>Default constructor for the empty object. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1aa584e85f3ada5fc1b06a8f26e53df7ad"><parameter name="src"><paramtype>const <classname>separate_interval_set</classname> &amp;</paramtype></parameter><purpose>Copy constructor. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a6a5bd81170508706d18488ddd658543c"><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Copy constructor for base_type. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1aa4e50c7cd226e10b8debd4fae6366b61" specifiers="explicit"><parameter name="elem"><paramtype>const domain_type &amp;</paramtype></parameter><purpose>Constructor for a single element. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a9920a1ba7e976123e807f513b84e2a1d" specifiers="explicit"><parameter name="itv"><paramtype>const interval_type &amp;</paramtype></parameter><purpose>Constructor for a single interval. </purpose></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1adf88c6697969e61bed379302ffbbce0e" name="assign"><type>void</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment from a base <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set">interval_set</link>. </purpose></method>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ae05ad60df303a20b76315814e90b1752"><type><classname>separate_interval_set</classname> &amp;</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment operator for base type. </purpose></copy-assignment>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ad0d3d8ac618e758e71931ddfcbbdefbb"><parameter name="src"><paramtype><classname>separate_interval_set</classname> &amp;&amp;</paramtype></parameter><purpose>Move constructor. </purpose></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a74208a0b2d8573924625b6f430d21052"><type><classname>separate_interval_set</classname> &amp;</type><parameter name="src"><paramtype><classname>separate_interval_set</classname></paramtype></parameter><purpose>Move assignment operator. </purpose></copy-assignment>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a1180a1c1bb363a2a73e6fdb39fe5a404" name="handle_inserted"><type>iterator</type><parameter name="inserted_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a23ac7cea7ac3c5ccf413c2cafe37638d" name="add_over"><type>iterator</type><parameter name="addend"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="last_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1aa5c176e5926fd90784e07abd299acc50" name="add_over"><type>iterator</type><parameter name="addend"><paramtype>const interval_type &amp;</paramtype></parameter></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1separate__interval__set_3_01DomainT_00_01Compad7bee00e4ceddd45e626724bade5258a" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::separate_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1separate__interval__set_3_01DomainT_00_01Compad7bee00e4ceddd45e626724bade5258a_1afb091bf40aecc0395b185c40846643c0" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.set_8hpp" name="boost/icl/set.hpp">
</header>
<header id="doxygen.interval_container_library_reference.split__interval__map_8hpp" name="boost/icl/split_interval_map.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1split__interval__map_3_01DomainT_00_01Codomc27163a55ef5ce9379475ac8d214dae2" name="absorbs_identities"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1split__interval__map_3_01DomainT_00_01Codomc27163a55ef5ce9379475ac8d214dae2_1af4af3e38c40466606f60ad852b731db4" name="type"><type>absorbs_identities&lt; <classname>icl::split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1split__interval__map_3_01DomainT_00_01Codomc27163a55ef5ce9379475ac8d214dae2_1af172512737c0c68c334ce5f382fdc6aa" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(Traits::absorbs_identities)</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_000e353e1e8911b2d5fd9a94369a40c145" name="has_inverse"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_000e353e1e8911b2d5fd9a94369a40c145_1ac2673ca2c9dd51c979a98b056c58780e" name="type"><type>has_inverse&lt; <classname>icl::split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_000e353e1e8911b2d5fd9a94369a40c145_1ad382822f0d00eb13eb8d74afcf2143c9" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(has_inverse&lt; CodomainT &gt;::value)</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1split__interval__map_3_01DomainT_00_01C2fd24e9829ef2ed3435435c826c696eb" name="is_interval_container"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1split__interval__map_3_01DomainT_00_01C2fd24e9829ef2ed3435435c826c696eb_1a0e32dcbecc5341a9595e1ceb398a08e0" name="type"><type>is_interval_container&lt; <classname>icl::split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1split__interval__map_3_01DomainT_00_01C2fd24e9829ef2ed3435435c826c696eb_1a7c3e991023f3ceb5dbe22d40c96debcd" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__splitter_3_01icl_1_1split__interval__map_3_01DomainT_00_01Co21376016c1d82cf2bf61357890481ad0" name="is_interval_splitter"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__splitter_3_01icl_1_1split__interval__map_3_01DomainT_00_01Co21376016c1d82cf2bf61357890481ad0_1a30c4cf78cacc42920916b64b374a48e8" name="type"><type>is_interval_splitter&lt; <classname>icl::split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__splitter_3_01icl_1_1split__interval__map_3_01DomainT_00_01Co21376016c1d82cf2bf61357890481ad0_1a1f6d073f7c60ed6dc83cd95e72a45e61" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_00_01Tr1ca637ca8e97f879c121d4a446c024ed" name="is_map"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_00_01Tr1ca637ca8e97f879c121d4a446c024ed_1aab6befe4b3e7e72066953b70093accd4" name="type"><type>is_map&lt; <classname>icl::split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_00_01Tr1ca637ca8e97f879c121d4a446c024ed_1a109561a7feacf58bae47d35bf188704e" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_00_01740bd492ee95ddc97a08453c1963e979" name="is_total"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_00_01740bd492ee95ddc97a08453c1963e979_1a309271ca60c2938dfcf06944d27da340" name="type"><type>is_total&lt; <classname>icl::split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_00_01740bd492ee95ddc97a08453c1963e979_1a6963e7648085c76ed4de083e00259e96" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(Traits::is_total)</default></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map" name="split_interval_map"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><inherit access="public">boost::icl::interval_base_map&lt; split_interval_map&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</inherit><purpose>implements a map as a map of intervals - on insertion overlapping intervals are split and associated values are combined. </purpose><enum id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a817c69cf536375884168d16a67d9ef1b" name=""><enumvalue id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a817c69cf536375884168d16a67d9ef1ba07bfdfcb59a82fb4839da85f6a2ad2a8" name="fineness"><default>3</default></enumvalue></enum>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1af7c16e557197f2ec0c381b94fa377a21" name="traits"><type>Traits</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a71279e09e87486c2b4063fe725f51642" name="type"><type><classname>split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a78c3ea2c14961ca0a482883d3b5c7429" name="joint_type"><type><classname>interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a11fe57a53976f6cf2b9af76fb189ebd1" name="overloadable_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a998ffe8945fe6489a87af064266c0e02" name="base_type"><type><classname>interval_base_map</classname>&lt; <classname>type</classname>, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a336b1eb0a1ace4f94e2a5d725de68a54" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a723d34285333f97caddf280f0d6d5d2a" name="codomain_type"><type>CodomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a6df820790f92a0051baefe3d093710d9" name="iterator"><type>base_type::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a38b2c5b0b0e97650945e8a3ccf10dbeb" name="value_type"><type>base_type::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a45a012aca2d3cd9e5f4f47611decccb1" name="element_type"><type>base_type::element_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1ab91c4eb0e3fae6c74e5b75b1f16e11ef" name="segment_type"><type>base_type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1ab7a11c604b36a4a1ddf97413de7bc59e" name="domain_mapping_type"><type>base_type::domain_mapping_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a100b0bc26ba1c92e97f42ab678d8651e" name="interval_mapping_type"><type>base_type::interval_mapping_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a4c4b5cd1117262e9d5cf6515de110594" name="ImplMapT"><type>base_type::ImplMapT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1acf69553a5982ad04b547af9850dcdd51" name="codomain_combine"><type>base_type::codomain_combine</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a721edc11f5fa3475aebe9cc0c8445fcd" name="interval_set_type"><type><classname>interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1aaa6361c1f9990a7e570059922ea6502d" name="set_type"><type><classname>interval_set_type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a2c5eb0e9f2fb0a43328f8402f7d185ef" name="key_object_type"><type><classname>set_type</classname></type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1abef26c60f21185de2cd215dee1277bf8" name="ICL_INTERVAL_TYPE"><type>typedef</type><parameter name=""><paramtype>Interval</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><parameter name=""><paramtype>Compare</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a97c2487608c7c5ae1ce2112dff277ee5"><purpose>Default constructor for the empty object. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a4fe725e4506fc0784f4c1bced10dd7d3"><parameter name="src"><paramtype>const <classname>split_interval_map</classname> &amp;</paramtype></parameter><purpose>Copy constructor. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a81a3afa7d646306688de6fa0950d7daf" specifiers="explicit"><parameter name="base_pair"><paramtype>const <classname>domain_mapping_type</classname> &amp;</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a1dbf67857dc252ab1ed955d7471b2058" specifiers="explicit"><parameter name="value_pair"><paramtype>const value_type &amp;</paramtype></parameter></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1affd63c8740d329a7296aaaa65c0fc630" name="assign"><type>void</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment from a base <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map">interval_map</link>. </purpose></method>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1ae8d296f929801bdbe26f8acaded52015"><type><classname>split_interval_map</classname> &amp;</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment operator for base type. </purpose></copy-assignment>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a6a1d797f90712b142eeccd1d109d61d2"><parameter name="src"><paramtype><classname>split_interval_map</classname> &amp;&amp;</paramtype></parameter><purpose>Move constructor. </purpose></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a0f0dafb59097f94cd892e23999c01653"><type><classname>split_interval_map</classname> &amp;</type><parameter name="src"><paramtype><classname>split_interval_map</classname></paramtype></parameter><purpose>Move assignment operator. </purpose></copy-assignment>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a7f8316cea61c1bc0c0ed4aa287299c59" name="handle_inserted" cv="const"><type>iterator</type><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a2e5573f6b63ab0cb4f908b52f32454de" name="handle_inserted" cv="const"><type>void</type><parameter name=""><paramtype>iterator</paramtype></parameter><parameter name=""><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a6daf822712a429513ff57461864bf037" name="handle_left_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a6e0e6a2e29d70e1f047f898082dca261" name="handle_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a036480ec01dc23904f01a2eb78338669" name="handle_preceeded_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a730a02838464743cb35df73732fefaa5" name="handle_succeeded_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator</paramtype></parameter><parameter name=""><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a86d1a7756146b754e438164f8c171963" name="handle_reinserted"><type>void</type><parameter name=""><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1ac4aed4356fd9c104a224d5900b67b7b1" name="gap_insert_at"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="end_gap"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const codomain_type &amp;</paramtype></parameter></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1split__interval__map_3_01DomainT_00_01Codomainaf72ad2f4d27b677b6f16edd4e104d83" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1split__interval__map_3_01DomainT_00_01Codomainaf72ad2f4d27b677b6f16edd4e104d83_1a96305df934bfaff5e8ba09e12e44cde6" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.split__interval__set_8hpp" name="boost/icl/split_interval_set.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1split__interval__set_3_01DomainT_00_01Cc670a6e1f207b111240cc68657f5c652" name="is_interval_container"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1split__interval__set_3_01DomainT_00_01Cc670a6e1f207b111240cc68657f5c652_1a4468d1f9bea2ac3e6f9464d9fbf314d7" name="type"><type>is_interval_container&lt; <classname>icl::split_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1split__interval__set_3_01DomainT_00_01Cc670a6e1f207b111240cc68657f5c652_1a35b1acb192162744592e58196085968d" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__splitter_3_01icl_1_1split__interval__set_3_01DomainT_00_01Co7366f36a04af9dde493373d60a0101ee" name="is_interval_splitter"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__splitter_3_01icl_1_1split__interval__set_3_01DomainT_00_01Co7366f36a04af9dde493373d60a0101ee_1a522201bcd7f5bb03d266ad4c6d0a9d8a" name="type"><type>is_interval_splitter&lt; <classname>icl::split_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__splitter_3_01icl_1_1split__interval__set_3_01DomainT_00_01Co7366f36a04af9dde493373d60a0101ee_1ae0a956173ed1f4cd734018e088cdca65" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1split__interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4" name="is_set"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1split__interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1ad3a38ddf34fd44806cdb63e2b02ba7c4" name="type"><type>is_set&lt; <classname>icl::split_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1split__interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1ad8606635c2149731243b7efa4ca67f62" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set" name="split_interval_set"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type><default>ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, Compare)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><inherit access="public">boost::icl::interval_base_set&lt; split_interval_set&lt; DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;</inherit><purpose>implements a set as a set of intervals - on insertion overlapping intervals are split </purpose><enum id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a1132f5e39a074dcbc16cf5b9f4a098b1" name=""><enumvalue id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a1132f5e39a074dcbc16cf5b9f4a098b1aec9b4584482b208ec2ced86c83805662" name="fineness"><default>3</default></enumvalue></enum>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1ab5004a8d9f022fe76e2e4baa67915867" name="type"><type><classname>split_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1ad8859a8d5b1e3e25c8bbc12cd5689b8d" name="base_type"><type><classname>interval_base_set</classname>&lt; <classname>type</classname>, DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a3a2ae1ec45e705fde947327e672b70b8" name="joint_type"><type><classname>interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1ae4d88b3c9ca2ea6c80ba9b72b8bb2c77" name="overloadable_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a2fc920baeab133c58fd2e0e6683b5759" name="key_object_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a47e688e8d56a5bee3dd6e0ad47f538dc" name="domain_type"><purpose>The domain type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1afa9a5796bd990995acb800e88c99bd32" name="codomain_type"><purpose>The codomaintype is the same as domain_type. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a6332660abd06291aa25022edd65d629d" name="element_type"><purpose>The element type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1ac0294e6ecdd87d5be7554d62a92e612f" name="segment_type"><purpose>The segment type of the set. </purpose><type>interval_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1abfb122bf5d75134112a116cddfd69ddc" name="interval_compare"><purpose>Comparison functor for intervals. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1ad5eb81b2b72313889f6bdc4cc89f82d5" name="key_compare"><purpose>Comparison functor for keys. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a1c797c36fe3de2cd7093d79939ad3830" name="allocator_type"><purpose>The allocator type of the set. </purpose><type>Alloc&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1af18ce81b422df913a2bd3a4f297bed4d" name="domain_allocator_type"><purpose>allocator type of the corresponding element set </purpose><type>Alloc&lt; DomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1ab2afebaaed125ee1d4e1a83b10751f5b" name="atomized_type"><purpose>The corresponding atomized type representing this interval container of elements. </purpose><type>base_type::atomized_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a4154f1fb2295708d0e35dfe040e004e1" name="ImplSetT"><purpose>Container type for the implementation. </purpose><type>base_type::ImplSetT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1ab9e174f77583682b6ddac6de59ae0b24" name="key_type"><purpose>key type of the implementing container </purpose><type>ImplSetT::key_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a49d48c7263c0afd1c5cb36632e986cfd" name="data_type"><purpose>data type of the implementing container </purpose><type>ImplSetT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1adafed672f8a8d66189e51fda05ad10b7" name="value_type"><purpose>value type of the implementing container </purpose><type>ImplSetT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a2f1ec5e87e6ce1be8c664f3a148cf0da" name="iterator"><purpose>iterator for iteration over intervals </purpose><type>ImplSetT::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a4571496b667618824896dff7c9362d77" name="const_iterator"><purpose>const_iterator for iteration over intervals </purpose><type>ImplSetT::const_iterator</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1add3f492643f589f8ae2a64fb175dc0f6" name="ICL_INTERVAL_TYPE"><type>typedef</type><parameter name=""><paramtype>Interval</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><parameter name=""><paramtype>Compare</paramtype></parameter><purpose>The interval type of the set. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a7761781af7eea8fce461e576de2dfbcf" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><purpose>Comparison functor for domain values. </purpose></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1abc4a484eab2e1be76566b67ee74967ab"><purpose>Default constructor for the empty object. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a182b558adc711d3cd7e72c0554806f54"><parameter name="src"><paramtype>const <classname>split_interval_set</classname> &amp;</paramtype></parameter><purpose>Copy constructor. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a2e171eef0141773623d75a2bba402d53"><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Copy constructor for base_type. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a7277a6a982762eb2923912395511c7c4" specifiers="explicit"><parameter name="elem"><paramtype>const interval_type &amp;</paramtype></parameter><purpose>Constructor for a single element. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1adcc340e7c5ba2e4e7cf68b54c56392bf" specifiers="explicit"><parameter name="itv"><paramtype>const domain_type &amp;</paramtype></parameter><purpose>Constructor for a single interval. </purpose></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a65340b998e8394a4230918f7df7269d8" name="assign"><type>void</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment from a base <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set">interval_set</link>. </purpose></method>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a668e78e478f1c79fdd88e5305fc99be7"><type><classname>split_interval_set</classname> &amp;</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment operator for base type. </purpose></copy-assignment>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a5c6bda6bcad996fc2c40c3679ec28232"><parameter name="src"><paramtype><classname>split_interval_set</classname> &amp;&amp;</paramtype></parameter><purpose>Move constructor. </purpose></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a96cd126d47a70c8934716bab4b7905b3"><type><classname>split_interval_set</classname> &amp;</type><parameter name="src"><paramtype><classname>split_interval_set</classname></paramtype></parameter><purpose>Move assignment operator. </purpose></copy-assignment>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a2d18d0435f67baa6328153af5ac618c4" name="handle_inserted"><type>iterator</type><parameter name="inserted_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1af9a189980ba692a116114c9ee2b44f60" name="add_over"><type>iterator</type><parameter name="addend"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="last_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a8db11e0133e507816001746d121e52a8" name="add_over"><type>iterator</type><parameter name="addend"><paramtype>const interval_type &amp;</paramtype></parameter></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1split__interval__set_3_01DomainT_00_01Compare_a9b72ef06ab1142bf57337895ae7b582" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1split__interval__set_3_01DomainT_00_01Compare_a9b72ef06ab1142bf57337895ae7b582_1a82b984d51effae574eb4e5488c3b0156" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
</library-reference>