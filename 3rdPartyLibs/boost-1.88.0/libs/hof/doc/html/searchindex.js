Search.setIndex({"docnames": ["CMakeLists", "LICENSE", "doc/index", "doc/requirements", "doc/src/acknowledgements", "doc/src/adaptors", "doc/src/building", "doc/src/concepts", "doc/src/configurations", "doc/src/decorators", "doc/src/definitions", "doc/src/discussion", "doc/src/example_overloading", "doc/src/example_polymorphic_constructors", "doc/src/example_print", "doc/src/examples", "doc/src/faq", "doc/src/functions", "doc/src/gettingstarted", "doc/src/index", "doc/src/intro", "doc/src/license", "doc/src/more_examples", "doc/src/overview", "doc/src/partialfunctions", "doc/src/point_free", "doc/src/reference", "doc/src/traits", "doc/src/utilities", "include/boost/hof/always", "include/boost/hof/apply", "include/boost/hof/apply_eval", "include/boost/hof/arg", "include/boost/hof/capture", "include/boost/hof/combine", "include/boost/hof/compose", "include/boost/hof/construct", "include/boost/hof/decay", "include/boost/hof/decorate", "include/boost/hof/eval", "include/boost/hof/first_of", "include/boost/hof/fix", "include/boost/hof/flip", "include/boost/hof/flow", "include/boost/hof/fold", "include/boost/hof/function", "include/boost/hof/function_param_limit", "include/boost/hof/identity", "include/boost/hof/if", "include/boost/hof/implicit", "include/boost/hof/indirect", "include/boost/hof/infix", "include/boost/hof/is_invocable", "include/boost/hof/is_unpackable", "include/boost/hof/lambda", "include/boost/hof/lazy", "include/boost/hof/lift", "include/boost/hof/limit", "include/boost/hof/match", "include/boost/hof/mutable", "include/boost/hof/pack", "include/boost/hof/partial", "include/boost/hof/pipable", "include/boost/hof/placeholders", "include/boost/hof/proj", "include/boost/hof/protect", "include/boost/hof/repeat", "include/boost/hof/repeat_while", "include/boost/hof/result", "include/boost/hof/returns", "include/boost/hof/reveal", "include/boost/hof/reverse_fold", "include/boost/hof/rotate", "include/boost/hof/static", "include/boost/hof/tap", "include/boost/hof/unpack", "include/boost/hof/unpack_sequence", "include/boost/hof/version"], "filenames": ["CMakeLists.txt", "LICENSE.md", "doc/index.rst", "doc/requirements.txt", "doc/src/acknowledgements.md", "doc/src/adaptors.rst", "doc/src/building.md", "doc/src/concepts.md", "doc/src/configurations.md", "doc/src/decorators.rst", "doc/src/definitions.md", "doc/src/discussion.rst", "doc/src/example_overloading.md", "doc/src/example_polymorphic_constructors.md", "doc/src/example_print.md", "doc/src/examples.rst", "doc/src/faq.md", "doc/src/functions.rst", "doc/src/gettingstarted.md", "doc/src/index.md", "doc/src/intro.rst", "doc/src/license.md", "doc/src/more_examples.md", "doc/src/overview.rst", "doc/src/partialfunctions.md", "doc/src/point_free.md", "doc/src/reference.rst", "doc/src/traits.rst", "doc/src/utilities.rst", "include/boost/hof/always.hpp", "include/boost/hof/apply.hpp", "include/boost/hof/apply_eval.hpp", "include/boost/hof/arg.hpp", "include/boost/hof/capture.hpp", "include/boost/hof/combine.hpp", "include/boost/hof/compose.hpp", "include/boost/hof/construct.hpp", "include/boost/hof/decay.hpp", "include/boost/hof/decorate.hpp", "include/boost/hof/eval.hpp", "include/boost/hof/first_of.hpp", "include/boost/hof/fix.hpp", "include/boost/hof/flip.hpp", "include/boost/hof/flow.hpp", "include/boost/hof/fold.hpp", "include/boost/hof/function.hpp", "include/boost/hof/function_param_limit.hpp", "include/boost/hof/identity.hpp", "include/boost/hof/if.hpp", "include/boost/hof/implicit.hpp", "include/boost/hof/indirect.hpp", "include/boost/hof/infix.hpp", "include/boost/hof/is_invocable.hpp", "include/boost/hof/is_unpackable.hpp", "include/boost/hof/lambda.hpp", "include/boost/hof/lazy.hpp", "include/boost/hof/lift.hpp", "include/boost/hof/limit.hpp", "include/boost/hof/match.hpp", "include/boost/hof/mutable.hpp", "include/boost/hof/pack.hpp", "include/boost/hof/partial.hpp", "include/boost/hof/pipable.hpp", "include/boost/hof/placeholders.hpp", "include/boost/hof/proj.hpp", "include/boost/hof/protect.hpp", "include/boost/hof/repeat.hpp", "include/boost/hof/repeat_while.hpp", "include/boost/hof/result.hpp", "include/boost/hof/returns.hpp", "include/boost/hof/reveal.hpp", "include/boost/hof/reverse_fold.hpp", "include/boost/hof/rotate.hpp", "include/boost/hof/static.hpp", "include/boost/hof/tap.hpp", "include/boost/hof/unpack.hpp", "include/boost/hof/unpack_sequence.hpp", "include/boost/hof/version.hpp"], "titles": ["Generated by <code class=\"docutils literal notranslate\"><span class=\"pre\">boostdep</span> <span class=\"pre\">--cmake</span> <span class=\"pre\">hof</span></code>", "&lt;no title&gt;", "Boost.HOF", "Copyright (c) 2017 Paul Fultz II", "Acknowledgements", "Function Adaptors", "Building", "Concepts", "Configurations", "Decorators", "Definitions", "Discussion", "Conditional overloading", "Polymorphic constructors", "Print function", "Examples", "FAQ", "Functions", "Getting started", "About", "Introduction", "License", "More examples", "Overview", "Partial function evaluation", "Point-free style programming", "Reference", "Traits", "Utilities", "always", "apply", "apply_eval", "arg", "capture", "combine", "compose", "construct", "decay", "decorate", "eval", "first_of", "fix", "flip", "flow", "fold", "BOOST_HOF_STATIC_FUNCTION", "function_param_limit", "identity", "if", "implicit", "indirect", "infix", "is_invocable", "is_unpackable", "BOOST_HOF_STATIC_LAMBDA", "lazy", "BOOST_HOF_LIFT", "limit", "match", "mutable", "pack", "partial", "pipable", "placeholders", "proj", "protect", "repeat", "repeat_while", "result", "BOOST_HOF_RETURNS", "reveal", "reverse_fold", "rotate", "static", "tap", "unpack", "unpack_sequence", "&lt;no title&gt;"], "terms": {"NOT": [0, 1, 21], "cmake_source_dir": 0, "strequal": 0, "cmake_current_source_dir": 0, "cmake_minimum_requir": 0, "3": [0, 12, 14, 18, 19, 24, 25, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 48, 50, 51, 54, 56, 57, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75], "8": [0, 19, 63], "20": [0, 70], "project": [0, 64, 71], "boost_hof": 0, "boost_superproject_vers": 0, "languag": [0, 1, 19, 21], "cxx": 0, "add_librari": 0, "interfac": [0, 19], "alia": [0, 70], "target_include_directori": 0, "includ": [0, 1, 18, 19, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "target_compile_featur": 0, "cxx_std_11": 0, "els": [0, 12, 46], "2": [0, 3, 14, 16, 18, 22, 24, 25, 29, 30, 31, 32, 33, 34, 38, 41, 42, 44, 45, 48, 50, 51, 54, 57, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75], "list": [0, 7, 33], "append": [0, 10], "cmake_module_path": 0, "foreach": 0, "level": 0, "major": 0, "minor": 0, "patch": 0, "string": [0, 12, 38], "hpp": [0, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "defin": [0, 7, 12, 18, 19, 24, 25, 41, 45, 54, 56, 64, 69, 70, 76], "regex": 0, "boost_hof_": 0, "match": [0, 2, 5, 12, 26, 40, 70], "9": [0, 19, 63, 70], "boost_hof_vers": 0, "endforeach": 0, "checkcxxcompilerflag": 0, "enable_languag": 0, "cmake_cxx_flag": 0, "std": [0, 7, 12, 13, 14, 16, 18, 22, 25, 29, 32, 34, 36, 38, 46, 48, 50, 53, 55, 56, 57, 58, 61, 63, 66, 67, 68, 70, 74, 75, 76], "cmake_host_appl": 0, "check_cxx_compiler_flag": 0, "stdlib": 0, "libc": 0, "compiler_has_cxx_flag_libcxx": 0, "set": [0, 8, 12, 18, 19, 25, 35, 68], "endif": 0, "enable_cxxflags_to_check": 0, "gnu": 0, "17": [0, 12, 18, 45, 54, 56, 75], "1z": 0, "14": [0, 18, 19, 56, 69], "1y": 0, "11": [0, 16, 19], "0x": 0, "flag": 0, "replac": 0, "_": [0, 22, 25, 42, 48, 63, 64, 72], "flag_var": 0, "x": [0, 7, 10, 12, 14, 16, 18, 22, 24, 25, 29, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 60, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76], "compiler_has_cxx_flag": 0, "break": 0, "instal": [0, 2, 20], "directori": [0, 6], "destin": 0, "configure_fil": 0, "pc": 0, "cmake_current_binary_dir": 0, "lib": 0, "pkgconfig": 0, "sphinxdoc": 0, "add_sphinx_doc": 0, "doc": [0, 6, 19], "html_dir": 0, "html": [0, 6, 19], "bcmtest": 0, "include_directori": 0, "glob": 0, "test": [0, 2, 19, 20], "cpp": [0, 70], "get_filename_compon": 0, "base_nam": 0, "name_w": 0, "bcm_add_test": 0, "name": [0, 4, 8, 18, 56, 69], "sourc": [0, 1, 6, 21], "set_tests_properti": 0, "properti": 0, "fail_regular_express": 0, "fail": [0, 53, 58], "static_def": 0, "static_def2": 0, "fail_test": 0, "compile_onli": 0, "will_fail": 0, "header": [0, 19], "bcm_test_head": 0, "static": [0, 2, 5, 16, 18, 23, 25, 26, 45, 49, 69, 76], "function": [0, 2, 4, 7, 8, 11, 12, 13, 15, 19, 20, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "extract_doc": 0, "outputvar": 0, "read": [0, 22, 57], "content": 0, "n": [0, 25, 32, 40, 57], "parent_scop": 0, "endfunct": 0, "build_exampl": 0, "sectioncont": 0, "md5": 0, "md5_section": 0, "target_nam": 0, "exampl": [0, 2, 12, 14, 16, 18, 20, 24, 25], "line": [0, 25], "substr": 0, "4": [0, 14, 19, 25, 29, 32, 35, 41, 43, 44, 56, 63, 70, 71], "output_lin": 0, "semicolon": 0, "int": [0, 14, 16, 18, 22, 24, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "main": [0, 16, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "messag": [0, 38, 45, 54, 70], "statu": 0, "ad": [0, 14], "extract_exampl": 0, "section": 0, "prevlin": 0, "append_sect": 0, "off": [0, 64], "OR": [0, 1, 21], "elseif": 0, "AND": [0, 1, 21], "One": [0, 12, 14, 18, 45], "cach": 0, "bool": [0, 48, 67], "thi": [0, 1, 8, 10, 12, 13, 14, 16, 18, 19, 21, 22, 24, 25, 29, 39, 40, 41, 45, 46, 51, 53, 54, 55, 56, 58, 59, 61, 62, 64, 70, 73, 74, 76], "build": [0, 2, 19, 20, 63], "copyright": [1, 21], "paul": [1, 2], "fultz": [1, 2], "ii": [1, 2], "2016": 1, "2018": 1, "boost": [1, 4, 6, 8, 12, 14, 16, 18, 21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "softwar": [1, 21], "licens": [1, 2], "version": [1, 18, 19, 21, 25, 29, 48, 55, 57], "1": [1, 14, 16, 18, 21, 24, 25, 29, 30, 31, 32, 33, 34, 35, 38, 41, 43, 45, 48, 49, 54, 55, 57, 58, 61, 62, 63, 64, 66, 67, 69, 70, 74], "0": [1, 16, 18, 21, 25, 35, 40, 41, 43, 48, 66], "august": [1, 21], "17th": [1, 21], "2003": [1, 21], "permiss": [1, 21], "i": [1, 2, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 21, 22, 24, 25, 29, 31, 32, 33, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 68, 69, 70, 71, 73, 74, 76], "herebi": [1, 21], "grant": [1, 21], "free": [1, 2, 19, 20, 21], "charg": [1, 21], "ani": [1, 7, 18, 21, 25, 73], "person": [1, 21, 22], "organ": [1, 21], "obtain": [1, 21], "copi": [1, 6, 16, 21, 59], "accompani": [1, 21], "document": [1, 2, 10, 19, 20, 21], "cover": [1, 21], "us": [1, 4, 6, 8, 10, 12, 14, 16, 18, 19, 21, 22, 24, 25, 29, 32, 33, 35, 36, 38, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75], "reproduc": [1, 21], "displai": [1, 21], "distribut": [1, 21], "execut": [1, 21, 22], "transmit": [1, 21], "prepar": [1, 21], "deriv": [1, 21], "work": [1, 12, 14, 16, 18, 21, 22, 31], "permit": [1, 21], "third": [1, 19, 21], "parti": [1, 19, 21], "whom": [1, 21], "furnish": [1, 21], "do": [1, 14, 18, 21, 25, 33, 61], "so": [1, 10, 12, 14, 16, 18, 21, 22, 24, 25, 32, 35, 39, 40, 43, 55, 56, 59, 65, 69, 70], "all": [1, 10, 13, 18, 21, 25, 29, 45, 54, 55, 59, 61, 64, 75], "subject": [1, 21], "follow": [1, 7, 18, 21, 25, 69], "The": [1, 6, 7, 8, 10, 12, 13, 14, 16, 18, 21, 22, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "notic": [1, 21], "entir": [1, 18, 19, 21, 25], "statement": [1, 21], "abov": [1, 10, 13, 21, 25], "restrict": [1, 16, 21], "disclaim": [1, 21], "must": [1, 7, 18, 21, 25, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 55, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75], "whole": [1, 21], "part": [1, 10, 18, 19, 21], "unless": [1, 21], "ar": [1, 8, 10, 12, 14, 16, 18, 19, 21, 22, 25, 29, 33, 40, 59, 62, 64, 69], "sole": [1, 21], "form": [1, 7, 10, 21, 55], "machin": [1, 21], "object": [1, 2, 4, 7, 10, 11, 19, 20, 21, 22, 29, 32, 35, 36, 37, 40, 45, 47, 50, 54, 55, 56, 59, 60, 70, 73], "code": [1, 12, 21, 69], "gener": [1, 6, 12, 18, 19, 21, 22, 39, 40, 56, 58], "processor": [1, 21], "THE": [1, 21], "provid": [1, 10, 14, 16, 18, 19, 21, 33, 35, 38, 43, 44, 56, 62, 63, 68, 69, 70, 71, 76], "AS": [1, 21], "without": [1, 4, 18, 21, 22, 24, 62, 70], "warranti": [1, 21], "OF": [1, 21], "kind": [1, 21], "express": [1, 7, 8, 10, 12, 14, 19, 21, 45, 54, 55, 63, 65, 69, 70], "impli": [1, 16, 21], "BUT": [1, 21], "limit": [1, 2, 8, 9, 18, 19, 21, 24, 26, 41, 46, 54], "TO": [1, 21], "merchant": [1, 21], "fit": [1, 21, 59], "FOR": [1, 21], "A": [1, 4, 10, 18, 21, 36, 38], "particular": [1, 21], "purpos": [1, 12, 19, 21], "titl": [1, 21], "non": [1, 16, 21, 41, 54, 59, 69, 73], "infring": [1, 21], "IN": [1, 21], "NO": [1, 21], "event": [1, 21], "shall": [1, 21], "holder": [1, 21], "anyon": [1, 21], "BE": [1, 21], "liabl": [1, 21], "damag": [1, 21], "other": [1, 12, 18, 21, 25], "liabil": [1, 21], "whether": [1, 8, 12, 14, 21, 24, 53], "contract": [1, 21], "tort": [1, 21], "otherwis": [1, 7, 12, 14, 21, 44, 71], "aris": [1, 21], "from": [1, 12, 14, 21, 22, 25, 31, 36, 45, 46, 63, 64, 69, 70, 75], "out": [1, 14, 21, 24, 25, 38], "connect": [1, 21], "WITH": [1, 21], "deal": [1, 68], "introduct": 2, "about": [2, 12, 18, 20, 22, 70], "motiv": [2, 20], "requir": [2, 6, 10, 11, 18, 20, 22], "contexpr": [2, 20], "support": [2, 8, 16, 18, 20, 22, 24, 29, 56, 63], "noexcept": [2, 20, 69], "get": [2, 7, 16, 20, 24, 70], "start": [2, 14, 20, 32, 70], "higher": [2, 20, 51, 56, 60], "order": [2, 14, 19, 20, 31, 39, 40, 41, 43, 45, 49, 56, 58, 60, 64], "lift": [2, 20, 56], "declar": [2, 10, 20, 54, 56, 69], "adaptor": [2, 14, 16, 19, 20, 22, 23, 24, 25, 26, 34, 35, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51, 54, 55, 58, 59, 61, 62, 64, 65, 68, 70, 71, 72, 73, 75], "lambda": [2, 12, 14, 16, 19, 20, 22, 33, 54, 55, 56, 70], "print": [2, 15, 16, 20, 38, 40, 64, 70, 71, 74], "condit": [2, 15, 20, 40, 48], "overload": [2, 15, 16, 18, 19, 20, 22, 25, 39, 40, 58, 59, 68, 70], "polymorph": [2, 15, 20], "constructor": [2, 15, 20, 73], "more": [2, 12, 14, 15, 19, 20, 33, 42, 70], "point": [2, 4, 14, 19, 20, 22, 24, 41], "style": [2, 19, 20], "program": [2, 4, 19, 20, 71], "variad": [2, 20, 44, 64, 71], "sum": [2, 16, 18, 20, 24, 38, 44, 45, 50, 57, 60, 61, 62, 63, 69, 74, 75], "overview": 2, "definit": [2, 18, 22, 23, 45], "decor": [2, 5, 12, 19, 23, 24, 26, 33, 46, 48, 57, 66, 67], "semant": [2, 23], "signatur": [2, 23], "concept": [2, 23], "constfunctionobject": [2, 23, 41, 49, 67, 73], "nullaryfunctionobject": [2, 23], "unaryfunctionobject": [2, 23], "binaryfunctionobject": [2, 23], "mutablefunctionobject": [2, 23, 59], "evaluatablefunctionobject": [2, 23, 31, 39], "invoc": [2, 23, 30, 42, 52], "constinvoc": [2, 23, 31, 34, 35, 38, 40, 43, 48, 55, 57, 58, 61, 62, 64, 65, 68, 70, 72, 75], "unaryinvoc": [2, 23, 64, 74], "binaryinvoc": [2, 23, 42, 44, 51, 71], "metafunct": [2, 23, 36, 46, 52], "metafunctionclass": [2, 23, 36], "refer": [2, 18, 33, 36, 45, 60, 69], "combin": [2, 5, 14, 26, 40, 41, 58], "compos": [2, 5, 12, 18, 25, 26, 43], "first_of": [2, 5, 12, 14, 26, 48, 58, 70], "fix": [2, 5, 14, 26, 70], "flip": [2, 5, 26], "flow": [2, 5, 18, 22, 25, 26], "fold": [2, 5, 25, 26, 30, 71], "implicit": [2, 5, 26], "indirect": [2, 5, 16, 26], "infix": [2, 5, 18, 19, 26], "lazi": [2, 5, 26, 65], "mutabl": [2, 5, 7, 16, 18, 26], "partial": [2, 5, 11, 18, 26, 45, 46, 57], "pipabl": [2, 5, 18, 22, 24, 26, 74], "proj": [2, 5, 14, 16, 22, 25, 26, 70], "protect": [2, 5, 26], "result": [2, 5, 7, 26, 39, 41, 49, 74], "reveal": [2, 5, 26, 45, 54], "reverse_fold": [2, 5, 26], "rotat": [2, 5, 26], "unpack": [2, 4, 5, 8, 14, 26, 53, 60, 70, 76], "captur": [2, 9, 26, 34, 54, 55, 60, 61], "repeat": [2, 9, 26, 69], "repeat_whil": [2, 9, 26], "alwai": [2, 12, 17, 18, 26, 31, 45, 48, 64], "arg": [2, 7, 13, 17, 26], "construct": [2, 4, 10, 12, 13, 17, 18, 19, 22, 26, 34, 45, 49, 69, 73], "decai": [2, 13, 17, 26, 33, 36, 60], "ident": [2, 7, 12, 17, 26, 39, 65], "placehold": [2, 17, 25, 26], "unam": [2, 17, 26], "trait": [2, 26, 46, 53, 57], "function_param_limit": [2, 26, 27, 57], "is_invoc": [2, 26, 27], "is_unpack": [2, 26, 27, 76], "unpack_sequ": [2, 26, 27, 75], "util": [2, 19, 22, 26, 34], "appli": [2, 7, 14, 16, 26, 28, 31, 36, 44, 64, 65, 66, 67, 71, 75, 76], "apply_ev": [2, 22, 26, 28], "eval": [2, 12, 26, 28, 31], "boost_hof_static_funct": [2, 13, 16, 18, 19, 22, 25, 26, 28, 38, 57], "boost_hof_static_lambda": [2, 11, 26, 28], "boost_hof_static_lambda_funct": [2, 12, 14, 16, 18, 19, 22, 26, 28, 70], "boost_hof_lift": [2, 12, 18, 25, 26, 28], "pack": [2, 4, 10, 26, 28], "boost_hof_return": [2, 12, 14, 26, 28, 70, 76], "tap": [2, 26, 28], "configur": [2, 6], "discuss": [2, 12], "evalu": [2, 11, 19, 39, 43, 46, 57, 63, 64, 65, 67], "faq": [2, 11], "q": [2, 11], "why": [2, 11, 70], "const": [2, 7, 10, 11, 12, 14, 18, 22, 25, 30, 31, 33, 35, 37, 38, 40, 43, 44, 45, 48, 50, 51, 52, 54, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 73, 74, 75], "call": [2, 7, 11, 12, 14, 18, 22, 24, 25, 30, 31, 33, 34, 36, 38, 40, 48, 50, 53, 55, 58, 59, 61, 62, 64, 70, 73], "oper": [2, 4, 7, 10, 11, 12, 18, 19, 22, 30, 31, 33, 35, 37, 38, 40, 43, 44, 45, 48, 49, 50, 52, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 73, 74, 75], "reinterpret": [2, 11, 69], "cast": [2, 11, 18, 69], "undefin": [2, 11], "behaviour": [2, 11, 69], "acknowledg": 2, "sphinx": [3, 6], "5": [3, 14, 19, 25, 29, 32, 36, 41, 42, 44, 49, 50, 51, 55, 60, 63, 66, 70, 71, 72, 74, 75], "myst": 3, "parser": 3, "18": 3, "git": 3, "github": [3, 19], "com": [3, 19], "pfultz2": [3, 19], "8ad7d424c6b613864976546d801439c34a27e3f6": 3, "egg": 4, "veri": [4, 40, 70], "power": 4, "librari": [4, 6, 8, 16, 18, 19, 22, 24], "c": [4, 8, 12, 16, 18, 19, 24, 25, 33, 39, 40, 45, 54, 56, 58, 63, 69, 73, 75], "98": 4, "shunsuk": 4, "sogam": 4, "hana": 4, "metaprogram": [4, 12, 19, 22], "mani": [4, 16, 18, 19, 22, 24, 59], "loui": 4, "dionn": 4, "creat": [4, 6, 12, 25, 38, 63], "konrad": 4, "rudolph": 4, "tupl": [4, 13, 34, 53, 70, 75, 76], "jambore": 4, "for_each_argu": 4, "sean": 4, "parent": 4, "suggest": 4, "design": 4, "custom": [4, 18, 70], "eric": 4, "niebler": 4, "fc": 4, "brian": 4, "mcnamara": 4, "yanni": 4, "smaragdaki": 4, "phoenix": 4, "joel": 4, "de": 4, "guzman": 4, "dan": 4, "marsden": 4, "thoma": 4, "heller": 4, "john": 4, "fletcher": 4, "higherorderfunct": [6, 8, 12, 14, 18, 19, 22], "cmake": 6, "To": [6, 18, 76], "run": 6, "mkdir": 6, "cd": 6, "just": [6, 12, 14, 16, 18, 19, 25, 55, 61, 64], "target": 6, "can": [6, 7, 8, 10, 12, 13, 14, 16, 18, 19, 22, 24, 25, 36, 39, 40, 41, 44, 46, 48, 49, 53, 55, 56, 57, 59, 60, 61, 62, 63, 65, 68, 70, 71, 73, 75, 76], "built": 6, "check": [6, 8, 12, 39, 52], "also": [6, 12, 14, 19, 22, 36, 39, 51, 54, 64, 69, 70], "ran": 6, "tree": 6, "b2": 6, "first": [6, 12, 14, 18, 19, 29, 39, 40, 42, 44, 62, 71, 72, 74], "need": [6, 14, 16, 18, 19, 25, 73, 76], "pip": 6, "r": [6, 14, 22, 35, 41, 42, 43, 50, 51, 60, 70, 72, 74, 75], "txt": 6, "Then": [6, 14, 18, 25], "b": [6, 22, 25, 48], "final": [6, 12, 61], "folder": 6, "an": [7, 10, 12, 14, 16, 18, 19, 24, 34, 41, 43, 44, 45, 47, 48, 51, 57, 62, 67, 69, 70, 71], "templat": [7, 8, 10, 12, 13, 14, 16, 18, 19, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "class": [7, 10, 12, 13, 14, 16, 18, 19, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "t": [7, 10, 12, 13, 14, 16, 18, 19, 25, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 73, 74, 75], "auto": [7, 10, 12, 14, 16, 18, 22, 24, 25, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 48, 54, 55, 56, 57, 60, 63, 65, 66, 67, 68, 69, 70, 76], "type": [7, 10, 13, 18, 19, 25, 29, 36, 37, 41, 46, 49, 53, 65, 68, 69, 70], "f": [7, 10, 14, 18, 22, 24, 25, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76], "satisfi": 7, "is_object": 7, "given": [7, 29, 30, 36, 37, 47, 64, 66], "suitabl": 7, "argument": [7, 14, 18, 25, 30, 31, 32, 33, 34, 39, 44, 64, 71, 74, 75], "which": [7, 12, 14, 16, 18, 19, 22, 24, 25, 36, 39, 40, 58, 68, 69, 70, 76], "mai": [7, 10, 12, 24], "empti": [7, 16, 29], "perform": [7, 74], "accept": 7, "paramet": [7, 10, 12, 18, 25, 29, 36, 38, 39, 42, 46, 49, 52, 57, 61, 62, 64, 68, 72, 76], "one": [7, 12, 14, 18, 25, 35, 58, 64, 67, 76], "singl": [7, 14], "two": [7, 12, 42], "u": [7, 14, 18, 24, 30, 31, 33, 38, 44, 45, 49, 50, 51, 60, 61, 62, 69, 70, 71, 74, 75], "arg1": 7, "arg2": 7, "either": [7, 12, 18, 39], "unaryfuntionobject": 7, "Or": [7, 18, 42, 66], "invok": [7, 8, 38, 55, 74], "valid": [7, 12, 14, 70], "declval": [7, 12, 70], "well": [7, 12, 14, 25, 40, 55, 60, 69], "unevalu": 7, "context": [7, 55, 73], "where": [7, 10, 12, 16, 25], "pointer": [7, 12, 18, 19, 46], "member": [7, 12, 18, 19, 45, 64], "If": [7, 12, 40, 61, 67, 70, 73], "is_base_of": 7, "decay_t": 7, "decltyp": [7, 12, 14, 36, 38, 41, 58, 67, 68, 69, 70], "true": [7, 12, 29, 48, 67, 68], "equival": [7, 10, 25, 35, 43, 55, 69], "special": [7, 76], "reference_wrapp": [7, 13], "doe": [7, 8, 19, 22, 25, 69], "previou": 7, "item": [7, 25], "data": [7, 14, 16], "There": [8, 16, 18, 19, 41], "sever": [8, 14, 34, 40, 58], "macro": [8, 18, 45, 54, 56, 69], "control": 8, "behavior": 8, "descript": 8, "boost_hof_check_unpack_sequ": 8, "ha": [8, 10, 12, 13, 18, 19, 54, 59, 70], "extra": [8, 10, 14], "ensur": [8, 22, 54], "sequenc": [8, 14, 60, 70, 75, 76], "help": [8, 22, 38, 39, 54, 69, 70], "improv": [8, 19, 24, 45, 54, 57, 70], "error": [8, 12, 24, 45, 54, 57, 59, 67, 70], "report": [8, 57], "slow": 8, "down": 8, "compil": [8, 10, 12, 16, 18, 19, 22, 24, 29, 39, 41, 45, 54, 56, 67, 69, 70], "enabl": [8, 19], "default": [8, 41, 45, 49, 54, 55, 61, 70, 73, 76], "boost_hof_no_expression_sfina": 8, "sfina": [8, 70], "detect": [8, 12, 53], "callabl": [8, 12, 14, 24, 40, 48, 52], "On": [8, 19, 29, 69, 70], "msvc": [8, 18, 19, 54], "sinc": [8, 10, 16, 25, 49, 59, 68], "have": [8, 10, 16, 18, 19, 22, 24, 51, 54], "full": 8, "boost_hof_recursive_constexpr_depth": [8, 41], "becaus": [8, 12, 16, 18, 25, 40, 69, 73], "instanti": [8, 41, 70], "constexpr": [8, 10, 12, 16, 18, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76], "eagerli": 8, "recurs": [8, 25, 41], "caus": [8, 70], "reach": [8, 41], "its": [8, 18, 24, 25, 30, 31, 37, 55, 61, 64], "intern": [8, 59], "depth": [8, 41], "avoid": [8, 12, 18, 22, 25, 41, 45], "infinit": 8, "16": [8, 41], "increas": 8, "time": [8, 12, 16, 18, 22, 39, 45, 54, 55, 66, 67], "take": [10, 12, 13, 18, 19, 22, 38, 39, 44, 60, 70, 71, 75], "return": [10, 12, 13, 14, 16, 18, 19, 22, 24, 25, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 60, 61, 62, 66, 67, 68, 69, 70, 71, 73, 74, 75], "new": [10, 18, 24, 25, 38], "enhanc": [10, 18, 19], "capabl": [10, 19], "each": [10, 14, 25, 31, 33, 34, 36, 63, 64, 70, 75], "correspond": 10, "_adaptor": 10, "functionadaptor_adaptor": 10, "functionadaptor": 10, "both": [10, 19, 65], "doesn": [10, 16, 56, 70], "It": [10, 18, 19, 22, 25, 32, 33, 34, 35, 43, 45, 48, 54, 55, 61, 69, 70], "onli": [10, 12, 18, 19, 67], "addit": [10, 12, 14, 18, 19, 22, 39, 41], "defaultconstruct": [10, 49, 73], "staticfunctionadaptor": 10, "unspecifi": [10, 63], "privat": [10, 29], "some": [10, 12, 14, 16, 22, 24, 38, 41, 59, 69, 70], "mean": [10, 51], "here": [10, 12, 24], "guid": [10, 70], "those": [10, 12, 18, 22], "symbol": 10, "g": [10, 25, 34, 35, 38, 43, 51, 55, 65], "p": [10, 64], "y": [10, 16, 18, 22, 24, 25, 30, 31, 33, 38, 42, 44, 45, 48, 50, 51, 55, 57, 60, 61, 62, 69, 70, 71, 74, 75, 76], "repres": 10, "varidiac": [10, 19, 25], "global": [10, 18, 22, 45, 54], "except": [10, 31, 43, 55], "explicit": [10, 16, 18, 41, 49], "older": [10, 19, 45, 56, 69], "howev": [10, 12, 14, 16, 18, 19, 22, 24, 45, 51, 70], "still": [10, 12, 14, 22, 62, 70], "show": [10, 70], "tradit": [10, 62], "much": [10, 12, 18, 19, 22], "clearer": 10, "instead": [10, 12, 14, 16, 18, 22, 25, 29, 40, 48, 55, 56, 57, 61, 65, 69], "write": [10, 12, 13, 14, 18, 22, 24, 25, 41], "struct": [10, 12, 13, 16, 18, 30, 31, 33, 35, 37, 38, 40, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76], "if_f": 10, "integralconst": [10, 32, 48, 57, 66], "if_": [10, 12, 48], "direct": 10, "written": [10, 12, 13, 18, 22], "even": [10, 14, 40, 70], "though": [10, 14, 40], "actual": [10, 32], "like": [10, 12, 13, 14, 18, 22, 25, 31, 55, 61, 70], "Its": 10, "usag": 10, "same": [10, 18, 22, 45, 68], "benefit": 10, "directli": [10, 14, 18, 48, 57, 59], "pass": [10, 12, 14, 18, 25, 29, 32, 39, 44, 56, 60, 68, 70, 71, 74, 75], "anoth": [10, 12, 16, 18, 25, 40, 61, 64], "wai": [12, 14, 18, 33, 62], "resolv": [12, 58], "ambigu": [12, 40], "importantli": 12, "allow": [12, 14, 18, 22, 45, 51, 54, 59, 61, 73], "altern": [12, 16, 18, 43], "when": [12, 19, 22, 24, 36, 38, 40, 41, 43, 48, 54, 61, 62, 68], "look": [12, 22], "stackoverflow": 12, "user": [12, 14, 22, 38, 45], "would": [12, 14, 16, 18, 22, 24, 25], "to_str": 12, "applic": [12, 18, 61], "fallback": 12, "sstream": 12, "convert": [12, 49], "most": [12, 19, 55], "top": [12, 19], "answer": 12, "usual": 12, "involv": [12, 25], "amount": 12, "void_t": 12, "is_detect": 12, "see": 12, "n4502": 12, "to_string_t": 12, "has_to_str": 12, "experiment": 12, "typenam": [12, 13, 37], "enable_if": [12, 40], "static_cast": 12, "ostringstream": 12, "str": 12, "simpli": [12, 13, 18], "deduc": [12, 19, 36, 49, 69], "constrain": [12, 14, 69], "try": [12, 19, 24, 40, 70], "possibl": [12, 14, 18, 45, 54], "second": [12, 14, 35], "stream": [12, 25], "although": 12, "seem": 12, "unnecessari": 12, "make": [12, 14, 16, 18, 22, 25, 48, 65], "we": [12, 14, 18, 22, 24, 25, 70], "could": [12, 14, 16, 18, 24, 25, 40], "serial": 12, "tri": [12, 70], "In": [12, 16, 18, 22, 25, 41, 45, 49, 56, 59, 73], "hof": [12, 16, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "pre": [12, 18, 54], "For": [12, 16, 18, 24, 25, 46], "baptist": 12, "wicht": 12, "how": [12, 40, 76], "he": 12, "want": [12, 14, 18, 25], "abl": [12, 18], "void": [12, 14, 25, 29, 40, 52, 70, 76], "decrement_kindof": 12, "valu": [12, 16, 24, 25, 29, 33, 36, 49, 53, 55, 58, 60, 61, 64, 67, 68], "is_sam": [12, 58, 67, 68], "pop_back": 12, "isn": 12, "befor": [12, 18, 34, 50, 60], "With": [12, 25], "id": [12, 68], "As": [12, 19, 22, 25, 56, 61, 74], "explain": 12, "articl": 12, "delai": [12, 39], "lookup": [12, 14], "depend": [12, 19, 39, 68], "e": [12, 14, 29], "necessari": 12, "advantag": [12, 19, 25], "solut": [12, 24], "": [12, 44, 69, 71, 76], "blog": 12, "than": [12, 16, 19, 22, 24, 33, 40, 42, 58, 69, 73], "wa": [12, 22], "is_stack": 12, "pop": 12, "furthermor": 12, "techniqu": [12, 16], "jen": 12, "weller": 12, "operand": 12, "accomplish": [12, 41], "op": 12, "has_pointer_memb": 12, "true_typ": 12, "has_pointer_oper": 12, "bool_const": 12, "is_void": 12, "false_typ": 12, "is_dereferenc": 12, "simpler": [12, 19, 22], "implement": [12, 14, 16, 19, 25, 41, 76], "were": [12, 14, 24, 70], "next": [12, 25, 40], "dereferenc": [12, 50], "none": 12, "last": [12, 29, 72], "make_tupl": [13, 14, 34, 75], "boilerpl": 13, "over": [13, 14, 25], "again": [13, 24], "unwrap_refwrapp": 13, "typedef": [13, 58, 67], "unwrap_ref_decai": 13, "forward": [13, 19, 37, 38, 56], "care": 13, "sai": [14, 25], "cout": [14, 16, 25, 38, 70, 74], "endl": [14, 16, 38, 70], "lot": [14, 62], "thing": [14, 18, 22], "don": [14, 19, 29, 56], "vector": [14, 18, 36, 70], "iter": [14, 25, 29], "structur": 14, "element": [14, 60, 75], "them": [14, 18, 22, 58], "pick": 14, "base": [14, 22, 24, 25, 32, 58, 64], "import": [14, 40], "add": [14, 18, 55], "rang": [14, 22, 70], "now": [14, 16, 18, 22, 24, 25, 70], "v": [14, 18, 36, 70], "loop": 14, "begin": [14, 18, 22, 70], "end": [14, 18, 22], "helper": 14, "adl": [14, 70], "namespac": [14, 18, 29, 32, 35, 38, 40, 43, 49, 50, 51, 52, 55, 57, 58, 60, 61, 62, 63, 64, 65, 70, 73, 74, 75, 76], "adl_begin": [14, 70], "And": [14, 18, 42], "extend": [14, 25], "coupl": 14, "for_each_tupl": [14, 70], "let": [14, 22, 24], "integr": [14, 48, 57, 66], "our": [14, 18], "nest": [14, 62, 65, 68, 70], "what": [14, 19, 22, 29, 37, 47], "itself": 14, "easili": 14, "self": [14, 70], "m": [14, 25], "output": [14, 25, 35], "everi": 14, "alreadi": [14, 76], "renam": 14, "origin": 14, "simple_print": [14, 25], "hello": [14, 25], "world": [14, 25], "prohibit": 16, "thei": [16, 22], "mutable_": [16, 18, 59], "reason": 16, "lead": [16, 24, 40], "supris": 16, "everywher": 16, "counter": 16, "won": [16, 18, 40], "ever": [16, 40], "yield": 16, "expect": 16, "mutat": 16, "ref": [16, 25, 55, 61], "should": [16, 18, 58, 59], "imposs": 16, "made": [16, 62], "consid": [16, 69], "pitfal": 16, "better": [16, 18, 40], "rather": [16, 24, 25, 73], "Not": [16, 52, 68], "realli": 16, "access": 16, "assert": [16, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75], "guard": 16, "against": 16, "insan": 16, "perhap": 16, "strang": 16, "differ": [16, 40, 58, 69], "quit": [16, 22], "unlik": 16, "probabl": 16, "inlin": [16, 18, 45], "variabl": [16, 18, 45, 49, 55, 61, 69], "futur": 16, "factori": [16, 41], "pattern": 16, "sum_factori": 16, "core": 18, "accumul": 18, "binari": [18, 44, 63, 71], "had": 18, "own": [18, 25], "total": 18, "select": 18, "sum_int": 18, "integ": 18, "algorithm": [18, 22, 29, 56], "abil": 18, "encapsul": 18, "done": [18, 19, 22, 69, 70], "overrid": 18, "sum_f": [18, 30, 31, 33, 38, 45, 48, 57, 70, 74], "few": 18, "note": [18, 40, 54, 59, 63, 64, 69, 70], "secondli": 18, "three": [18, 19], "plu": [18, 24, 51], "futhermor": 18, "turn": 18, "due": [18, 19, 24, 40, 41, 54, 56], "preserv": [18, 56], "case": [18, 22, 25, 41], "local": 18, "avail": 18, "scope": [18, 22], "best": [18, 45], "practic": [18, 45], "outlin": [18, 45], "n4381": [18, 45], "state": [18, 44, 45, 59, 71], "initi": [18, 19, 44, 45, 54, 60, 71, 73], "fiasco": [18, 45], "extern": [18, 45], "address": [18, 22, 45, 54], "across": [18, 22, 45, 54], "translat": [18, 22, 45, 54], "unit": [18, 22, 45, 54], "rule": [18, 40, 45], "odr": [18, 22, 45, 54], "violat": [18, 22, 45, 54], "achiev": [18, 19, 22, 45], "portabl": 18, "extens": [18, 19, 62], "method": [18, 19, 62], "propos": [18, 22, 37, 39, 40, 58], "n4165": [18, 22], "unifi": [18, 22], "syntax": [18, 22], "ufc": [18, 22], "becom": [18, 22, 35], "transform": [18, 22], "pipe": [18, 24, 43, 62], "chain": [18, 22, 43, 74], "mutlipl": 18, "four": 18, "togeth": [18, 22, 25, 34, 40, 58, 60], "simpl": [18, 19, 22, 38, 55, 63], "composit": [18, 25, 35, 43], "add_1": [18, 69], "add_2": 18, "littl": [18, 22, 70], "verbos": 18, "terser": 18, "Of": [18, 22, 24, 25, 70], "cours": [18, 22, 24, 25, 70], "addition": [18, 44, 63, 71], "solv": [19, 22], "problem": [19, 22], "tradition": [19, 22], "been": [19, 22], "modern": 19, "featur": 19, "deduct": [19, 69], "perfect": [19, 33], "relev": 19, "programm": 19, "lightweight": 19, "abstract": 19, "subscrib": 19, "framework": 19, "you": 19, "divid": 19, "compon": 19, "These": [19, 69], "specif": 19, "http": [19, 71], "io": 19, "citzen": 19, "simplifi": 19, "workaround": [19, 69], "clang": 19, "gcc": [19, 69], "6": [19, 55, 63, 66, 67, 73], "7": [19, 34, 63], "visual": 19, "studio": 19, "2015": 19, "2017": 19, "bug": 19, "newer": 19, "later": 19, "collect": 22, "relat": [22, 51], "kei": 22, "platform": 22, "uniqu": [22, 54], "therebi": 22, "reduc": [22, 69], "bloat": 22, "potenti": 22, "manner": 22, "compact": 22, "who": 22, "prefer": 22, "find": 22, "multipl": [22, 60, 68, 70, 75], "sort": [22, 64], "peopl": 22, "year_of_birth": 22, "comparison": 22, "foo": [22, 58, 64, 70], "bar": 22, "standard": 22, "guarante": [22, 54], "left": [22, 25, 31, 51, 64], "right": [22, 25, 31, 51, 64, 71], "hard": 22, "filter": 22, "number": [22, 46, 57, 66, 70], "nice": [22, 24], "reject": 22, "comitte": 22, "feel": 22, "worri": 22, "bitwis": 22, "No": [22, 24], "fanci": 22, "confus": [22, 24], "everyth": [22, 46, 60], "readabl": 22, "option": [24, 44, 71], "adapt": 24, "j": 24, "decid": 24, "ariti": 24, "hand": 24, "never": 24, "produc": [24, 35, 63], "annot": [24, 46, 57], "max": [24, 25, 56, 57], "limit_c": [24, 57], "situat": 24, "tripl": 24, "z": [24, 30, 44, 51, 71], "until": [24, 61], "goal": 24, "current": 24, "good": 24, "tacit": 25, "explic": 25, "manipul": 25, "machineri": 25, "someth": 25, "helloworld": 25, "put": 25, "further": [25, 70], "print_lin": 25, "integral_const": [25, 32, 46, 66, 67], "char": 25, "That": 25, "newlin": 25, "charact": 25, "recogn": [25, 65], "grab": 25, "handl": 25, "By": [25, 45, 54, 55, 61, 70, 76], "matter": 29, "nullari": [29, 39], "specifi": [29, 41], "boost_hof_always_void_return": 29, "copyconstruct": [29, 44, 71], "cassert": [29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "ten": 29, "10": 29, "count": 29, "count_if": 29, "nth": 32, "zero": 32, "index": 32, "size_t": [32, 46, 57], "arg_c": 32, "flexibl": 33, "move": [33, 72], "prepend": 33, "lvalu": [33, 36, 60], "rvalu": [33, 36, 60], "capture_forward": 33, "capture_bas": 33, "add_on": [33, 54], "essenti": 34, "zip": 34, "combine_adaptor": 34, "moveconstruct": [34, 35, 36, 38, 40, 41, 42, 43, 44, 48, 50, 51, 55, 57, 58, 59, 61, 62, 64, 65, 67, 68, 70, 71, 72, 75], "pair": 34, "make_pair": 34, "ie": [35, 51, 71], "input": 35, "compose_adaptor": 35, "increment": [35, 43, 55, 66, 67], "decrement": [35, 43], "construct_meta": 36, "construct_forward": 36, "construct_bas": 36, "metafunctiontempl": 36, "size": 36, "unari": [37, 39, 47, 63], "after": 37, "n3255": 37, "decay_copi": 37, "wherea": 38, "eventu": 38, "decorate_adaptor": 38, "iostream": [38, 40, 74], "logger_f": 38, "logger": 38, "thunk": 39, "compili": 39, "poo51": [39, 40, 58], "static_if": [39, 48], "constraint": 40, "regardless": [40, 45], "first_of_adaptor": [40, 70], "for_int": 40, "printf": 40, "for_float": 40, "float": [40, 49], "convers": 40, "chosen": 40, "limiti": 41, "eager": 41, "fix_adaptor": [41, 70], "swap": 42, "flip_adaptor": 42, "least": 42, "argur": 42, "similiar": 43, "revers": [43, 71], "flow_adaptor": 43, "fold_adaptor": 44, "max_f": [44, 56, 71], "keyword": 45, "partial_sum": 45, "retriev": 46, "maximum": 46, "size_max": 46, "chang": 46, "inherit": [46, 70], "boolean": [48, 67], "if_c": 48, "give": [48, 57, 70], "reli": [48, 57, 59], "constant": [48, 57], "fals": 48, "subtitut": 48, "failur": 48, "is_integr": 48, "determin": 49, "essenc": 49, "assign": [49, 63], "auto_cast": 49, "auto_caster_foo": 49, "i_": 49, "derefer": 50, "indirect_adaptor": 50, "memori": 50, "make_uniqu": 50, "place": 51, "insid": [51, 59, 69, 70], "angl": 51, "bracket": 51, "infix_adaptor": 51, "lower": 51, "associ": 51, "plus_f": 51, "certain": 52, "is_invocable_class": 52, "static_assert": [52, 53, 58, 67, 68], "contain": 54, "prevent": 54, "wrapper": 55, "friendli": [55, 70], "bind": [55, 61, 63, 65], "ultim": 55, "compat": [55, 63], "interchang": 55, "lazy_adaptor": 55, "_1": [55, 63, 65], "boost_hof_lift_class": 56, "wrap": 56, "yet": 56, "my_max": 56, "resolut": 58, "match_adaptor": 58, "int_class": 58, "foo_class": 58, "fun": 58, "couldn": 59, "caution": 59, "share": 59, "prone": 59, "mutable_adaptor": 59, "unpack_adaptor": [60, 75], "pack_join": 60, "join": 60, "pack_forward": 60, "pack_bas": 60, "repeatedli": [61, 66, 67], "aprtial": 61, "partial_adaptor": 61, "curri": 61, "especi": 62, "conveni": 62, "pipable_adaptor": [62, 74], "basic": 63, "_2": 63, "_3": 63, "_4": 63, "_5": 63, "_6": 63, "_7": 63, "_8": 63, "_9": 63, "onto": 64, "field": 64, "proj_adaptor": 64, "x_": 64, "treat": 65, "normal": 65, "eargerli": 65, "mask": [65, 70], "longer": [65, 68], "protect_adaptor": 65, "lazy_id": 65, "lazy_appli": 65, "increment_by_5": 66, "while": [67, 70], "predic": 67, "intergralconst": 67, "not_6": 67, "six": 67, "increment_until_6": 67, "result_adaptor": 68, "result_typ": 68, "int_result": 68, "trail": 69, "claus": 69, "bodi": 69, "duplic": 69, "conform": 69, "cannot": [69, 73], "issu": 69, "boost_hof_returns_class": 69, "boost_hof_thi": 69, "boost_hof_const_thi": 69, "properli": 69, "explicitli": 69, "boost_hof_mangle_cast": 69, "boost_hof_returns_c_cast": 69, "boost_hof_returns_reinterpret_cast": 69, "boost_hof_returns_static_cast": 69, "boost_hof_returns_construct": 69, "sometim": 70, "substitut": 70, "remov": 70, "backtrac": 70, "expos": 70, "keep": 70, "quick": 70, "49": 70, "29": [70, 71], "33": 70, "37": 70, "158": 70, "candid": 70, "ignor": 70, "boost_hof_sfinae_return": 70, "short": 70, "inform": 70, "info": 70, "reveal_adaptor": 70, "149": 70, "detail": 70, "as_failur": 70, "with_failur": 70, "falur": 70, "failure_for": 70, "get_failur": 70, "sum_failur": 70, "en": 71, "wikipedia": 71, "org": 71, "wiki": 71, "fold_": 71, "28higher": 71, "order_funct": 71, "term": 71, "reverse_fold_adaptor": 71, "rotate_adaptor": 72, "static_": 73, "trivial": 73, "times_funct": 73, "doubl": 73, "factor": 73, "times2": 73, "intermedi": 74, "my_sequ": 76}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"gener": 0, "boostdep": 0, "cmake": 0, "hof": [0, 2], "copyright": [0, 3], "2020": 0, "2021": 0, "peter": 0, "dimov": 0, "distribut": [0, 3], "under": [0, 3], "boost": [0, 2, 3], "softwar": [0, 3], "licens": [0, 3, 21], "version": [0, 3], "1": [0, 3], "0": [0, 3], "http": [0, 3], "www": [0, 3], "org": [0, 3], "license_1_0": [0, 3], "txt": [0, 3], "c": [0, 3], "2017": [0, 3], "paul": [0, 3], "fultz": [0, 3], "ii": [0, 3], "cmakelist": 0, "see": [0, 3, 46, 57, 60, 65, 76], "accompani": [0, 3], "file": [0, 3], "copi": [0, 3], "requir": [3, 7, 16, 19, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 55, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75], "acknowledg": 4, "function": [5, 10, 14, 16, 17, 18, 24], "adaptor": [5, 10, 18], "build": 6, "instal": 6, "test": 6, "document": 6, "concept": 7, "constfunctionobject": 7, "nullaryfunctionobject": 7, "unaryfunctionobject": 7, "binaryfunctionobject": 7, "mutablefunctionobject": 7, "evaluatablefunctionobject": 7, "invoc": 7, "constinvoc": 7, "unaryinvoc": 7, "binaryinvoc": 7, "metafunct": 7, "metafunctionclass": 7, "configur": 8, "decor": [9, 10, 38], "definit": 10, "static": [10, 73], "semant": [10, 29, 30, 31, 33, 34, 35, 36, 38, 41, 42, 43, 44, 47, 49, 50, 51, 55, 60, 61, 62, 64, 65, 66, 71, 72], "signatur": 10, "discuss": 11, "condit": 12, "overload": [12, 14, 69], "stringifi": 12, "static_if": 12, "type": 12, "trait": [12, 27], "polymorph": 13, "constructor": 13, "print": [14, 25], "tupl": 14, "recurs": 14, "variad": [14, 25], "exampl": [15, 22, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "faq": 16, "q": 16, "why": 16, "i": 16, "const": 16, "call": 16, "oper": [16, 51, 63], "object": [16, 18], "reinterpret": 16, "cast": 16, "boost_hof_static_lambda": [16, 54], "undefin": 16, "behaviour": 16, "get": 18, "start": 18, "higher": 18, "order": [18, 22], "lift": 18, "declar": 18, "lambda": 18, "about": 19, "motiv": 19, "contexpr": 19, "support": 19, "noexcept": 19, "introduct": 20, "more": 22, "initi": 22, "project": 22, "evalu": [22, 24], "argument": 22, "extens": 22, "method": 22, "overview": 23, "partial": [24, 61], "point": 25, "free": 25, "style": 25, "program": 25, "sum": 25, "refer": [26, 35, 37, 39, 40, 41, 43, 44, 48, 55, 58, 61, 62, 64, 71, 75], "util": 28, "alwai": 29, "header": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "descript": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "synopsi": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "appli": 30, "apply_ev": 31, "arg": 32, "captur": 33, "combin": 34, "compos": 35, "construct": 36, "decai": 37, "eval": 39, "first_of": 40, "fix": 41, "flip": 42, "flow": 43, "fold": 44, "boost_hof_static_funct": 45, "function_param_limit": 46, "also": [46, 57, 60, 65, 76], "ident": 47, "implicit": 49, "indirect": 50, "infix": 51, "preced": 51, "is_invoc": 52, "is_unpack": 53, "boost_hof_static_lambda_funct": 54, "lazi": 55, "boost_hof_lift": 56, "limit": [56, 57], "match": 58, "mutabl": 59, "pack": 60, "pipabl": 62, "placehold": 63, "unam": 63, "proj": 64, "protect": 65, "repeat": 66, "repeat_whil": 67, "result": 68, "boost_hof_return": 69, "incomplet": 69, "thi": 69, "mangl": 69, "reveal": 70, "sampl": 70, "report": 70, "failur": 70, "reverse_fold": 71, "rotat": 72, "tap": 74, "unpack": 75, "unpack_sequ": 76}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Generated by boostdep --cmake hof": [[0, "generated-by-boostdep-cmake-hof"]], "Copyright 2020, 2021 Peter Dimov": [[0, "copyright-2020-2021-peter-dimov"]], "Distributed under the Boost Software License, Version 1.0.": [[0, "distributed-under-the-boost-software-license-version-1-0"]], "https://www.boost.org/LICENSE_1_0.txt": [[0, "https-www-boost-org-license-1-0-txt"]], "Copyright (c) 2017 Paul Fultz II": [[0, "copyright-c-2017-paul-fultz-ii"], [3, "copyright-c-2017-paul-fultz-ii"]], "CMakeLists.txt": [[0, "cmakelists-txt"]], "Distributed under the Boost Software License, Version 1.0. (See accompanying": [[0, "distributed-under-the-boost-software-license-version-1-0-see-accompanying"], [3, "distributed-under-the-boost-software-license-version-1-0-see-accompanying"]], "file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)": [[0, "file-license-1-0-txt-or-copy-at-http-www-boost-org-license-1-0-txt"], [3, "file-license-1-0-txt-or-copy-at-http-www-boost-org-license-1-0-txt"]], "Boost.HOF": [[2, "boost-hof"]], "requirements.txt": [[3, "requirements-txt"]], "Acknowledgements": [[4, "acknowledgements"]], "Function Adaptors": [[5, "function-adaptors"]], "Building": [[6, "building"]], "Installing": [[6, "installing"]], "Tests": [[6, "tests"]], "Documentation": [[6, "documentation"]], "Concepts": [[7, "concepts"]], "ConstFunctionObject": [[7, "constfunctionobject"]], "Requirements:": [[7, "requirements"], [7, "id1"], [7, "id2"], [7, "id3"], [7, "id4"], [7, "id5"], [7, "id6"], [7, "id7"], [7, "id8"], [7, "id9"]], "NullaryFunctionObject": [[7, "nullaryfunctionobject"]], "UnaryFunctionObject": [[7, "unaryfunctionobject"]], "BinaryFunctionObject": [[7, "binaryfunctionobject"]], "MutableFunctionObject": [[7, "mutablefunctionobject"]], "EvaluatableFunctionObject": [[7, "evaluatablefunctionobject"]], "Invocable": [[7, "invocable"]], "ConstInvocable": [[7, "constinvocable"]], "UnaryInvocable": [[7, "unaryinvocable"]], "BinaryInvocable": [[7, "binaryinvocable"]], "Metafunction": [[7, "metafunction"]], "MetafunctionClass": [[7, "metafunctionclass"]], "Configurations": [[8, "configurations"]], "Decorators": [[9, "decorators"]], "Definitions": [[10, "definitions"]], "Function Adaptor": [[10, "function-adaptor"]], "Static Function Adaptor": [[10, "static-function-adaptor"]], "Decorator": [[10, "decorator"]], "Semantics": [[10, "semantics"], [29, "semantics"], [30, "semantics"], [31, "semantics"], [33, "semantics"], [34, "semantics"], [35, "semantics"], [36, "semantics"], [38, "semantics"], [41, "semantics"], [42, "semantics"], [43, "semantics"], [44, "semantics"], [47, "semantics"], [49, "semantics"], [50, "semantics"], [51, "semantics"], [55, "semantics"], [60, "semantics"], [61, "semantics"], [62, "semantics"], [64, "semantics"], [65, "semantics"], [66, "semantics"], [71, "semantics"], [72, "semantics"]], "Signatures": [[10, "signatures"]], "Discussion": [[11, "discussion"]], "Conditional overloading": [[12, "conditional-overloading"]], "Stringify": [[12, "stringify"]], "static_if": [[12, "static-if"]], "Type traits": [[12, "type-traits"]], "Polymorphic constructors": [[13, "polymorphic-constructors"]], "Print function": [[14, "print-function"]], "Overloading": [[14, "overloading"]], "Tuples": [[14, "tuples"]], "Recursive": [[14, "recursive"]], "Variadic": [[14, "variadic"]], "Examples": [[15, "examples"]], "FAQ": [[16, "faq"]], "Q: Why is const required for the call operator on function objects?": [[16, "q-why-is-const-required-for-the-call-operator-on-function-objects"]], "Q: Is the reinterpret cast in BOOST_HOF_STATIC_LAMBDA undefined behaviour?": [[16, "q-is-the-reinterpret-cast-in-boost-hof-static-lambda-undefined-behaviour"]], "Functions": [[17, "functions"]], "Getting started": [[18, "getting-started"]], "Higher-order functions": [[18, "higher-order-functions"]], "Function Objects": [[18, "function-objects"]], "Lifting functions": [[18, "lifting-functions"]], "Declaring functions": [[18, "declaring-functions"]], "Adaptors": [[18, "adaptors"]], "Lambdas": [[18, "lambdas"]], "About": [[19, "about"]], "Motivation": [[19, "motivation"]], "Requirements": [[19, "requirements"], [29, "requirements"], [30, "requirements"], [31, "requirements"], [34, "requirements"], [35, "requirements"], [36, "requirements"], [38, "requirements"], [39, "requirements"], [40, "requirements"], [41, "requirements"], [42, "requirements"], [43, "requirements"], [44, "requirements"], [48, "requirements"], [49, "requirements"], [50, "requirements"], [51, "requirements"], [52, "requirements"], [55, "requirements"], [57, "requirements"], [58, "requirements"], [59, "requirements"], [61, "requirements"], [62, "requirements"], [64, "requirements"], [65, "requirements"], [66, "requirements"], [67, "requirements"], [68, "requirements"], [70, "requirements"], [71, "requirements"], [72, "requirements"], [73, "requirements"], [74, "requirements"], [75, "requirements"]], "Contexpr support": [[19, "contexpr-support"]], "Noexcept support": [[19, "noexcept-support"]], "Introduction": [[20, "introduction"]], "License": [[21, "license"]], "More examples": [[22, "more-examples"]], "Initialization": [[22, "initialization"]], "Projections": [[22, "projections"]], "Ordering evaluation of arguments": [[22, "ordering-evaluation-of-arguments"]], "Extension methods": [[22, "extension-methods"]], "Overview": [[23, "overview"]], "Partial function evaluation": [[24, "partial-function-evaluation"]], "Point-free style programming": [[25, "point-free-style-programming"]], "Variadic print": [[25, "variadic-print"]], "Variadic sum": [[25, "variadic-sum"]], "Reference": [[26, "reference"]], "Traits": [[27, "traits"]], "Utilities": [[28, "utilities"]], "always": [[29, "always"]], "Header": [[29, "header"], [30, "header"], [31, "header"], [32, "header"], [33, "header"], [34, "header"], [35, "header"], [36, "header"], [37, "header"], [38, "header"], [39, "header"], [40, "header"], [41, "header"], [42, "header"], [43, "header"], [44, "header"], [45, "header"], [46, "header"], [47, "header"], [48, "header"], [49, "header"], [50, "header"], [51, "header"], [52, "header"], [53, "header"], [54, "header"], [54, "id1"], [55, "header"], [56, "header"], [57, "header"], [58, "header"], [59, "header"], [60, "header"], [61, "header"], [62, "header"], [63, "header"], [63, "id1"], [64, "header"], [65, "header"], [66, "header"], [67, "header"], [68, "header"], [69, "header"], [70, "header"], [71, "header"], [72, "header"], [73, "header"], [74, "header"], [75, "header"], [76, "header"]], "Description": [[29, "description"], [30, "description"], [31, "description"], [32, "description"], [33, "description"], [34, "description"], [35, "description"], [36, "description"], [37, "description"], [38, "description"], [39, "description"], [40, "description"], [41, "description"], [42, "description"], [43, "description"], [44, "description"], [45, "description"], [46, "description"], [47, "description"], [48, "description"], [49, "description"], [50, "description"], [51, "description"], [52, "description"], [54, "description"], [54, "id2"], [55, "description"], [56, "description"], [57, "description"], [58, "description"], [59, "description"], [60, "description"], [61, "description"], [62, "description"], [63, "description"], [63, "id2"], [64, "description"], [65, "description"], [66, "description"], [67, "description"], [68, "description"], [69, "description"], [69, "id1"], [69, "id4"], [70, "description"], [71, "description"], [72, "description"], [73, "description"], [74, "description"], [75, "description"]], "Synopsis": [[29, "synopsis"], [30, "synopsis"], [31, "synopsis"], [32, "synopsis"], [33, "synopsis"], [34, "synopsis"], [35, "synopsis"], [36, "synopsis"], [37, "synopsis"], [38, "synopsis"], [39, "synopsis"], [40, "synopsis"], [41, "synopsis"], [42, "synopsis"], [43, "synopsis"], [44, "synopsis"], [46, "synopsis"], [47, "synopsis"], [48, "synopsis"], [49, "synopsis"], [50, "synopsis"], [51, "synopsis"], [52, "synopsis"], [53, "synopsis"], [55, "synopsis"], [56, "synopsis"], [57, "synopsis"], [58, "synopsis"], [59, "synopsis"], [60, "synopsis"], [61, "synopsis"], [62, "synopsis"], [63, "synopsis"], [63, "id3"], [64, "synopsis"], [65, "synopsis"], [66, "synopsis"], [67, "synopsis"], [68, "synopsis"], [69, "synopsis"], [69, "id2"], [69, "id5"], [70, "synopsis"], [70, "id1"], [71, "synopsis"], [72, "synopsis"], [73, "synopsis"], [74, "synopsis"], [75, "synopsis"], [76, "synopsis"]], "Example": [[29, "example"], [30, "example"], [31, "example"], [32, "example"], [33, "example"], [34, "example"], [35, "example"], [36, "example"], [38, "example"], [39, "example"], [40, "example"], [41, "example"], [42, "example"], [43, "example"], [44, "example"], [45, "example"], [48, "example"], [49, "example"], [50, "example"], [51, "example"], [52, "example"], [53, "example"], [54, "example"], [54, "id3"], [55, "example"], [56, "example"], [57, "example"], [58, "example"], [60, "example"], [61, "example"], [62, "example"], [63, "example"], [63, "id4"], [64, "example"], [65, "example"], [66, "example"], [67, "example"], [68, "example"], [69, "example"], [69, "id3"], [70, "example"], [71, "example"], [72, "example"], [73, "example"], [74, "example"], [75, "example"], [76, "example"]], "apply": [[30, "apply"]], "apply_eval": [[31, "apply-eval"]], "arg": [[32, "arg"]], "capture": [[33, "capture"]], "combine": [[34, "combine"]], "compose": [[35, "compose"]], "References": [[35, "references"], [37, "references"], [39, "references"], [40, "references"], [41, "references"], [43, "references"], [44, "references"], [48, "references"], [55, "references"], [58, "references"], [61, "references"], [62, "references"], [64, "references"], [71, "references"], [75, "references"]], "construct": [[36, "construct"]], "decay": [[37, "decay"]], "decorate": [[38, "decorate"]], "eval": [[39, "eval"]], "first_of": [[40, "first-of"]], "fix": [[41, "fix"]], "flip": [[42, "flip"]], "flow": [[43, "flow"]], "fold": [[44, "fold"]], "BOOST_HOF_STATIC_FUNCTION": [[45, "boost-hof-static-function"]], "function_param_limit": [[46, "function-param-limit"]], "See Also": [[46, "see-also"], [57, "see-also"], [60, "see-also"], [65, "see-also"], [76, "see-also"]], "identity": [[47, "identity"]], "if": [[48, "if"]], "implicit": [[49, "implicit"]], "indirect": [[50, "indirect"]], "infix": [[51, "infix"]], "Operator precedence": [[51, "operator-precedence"]], "is_invocable": [[52, "is-invocable"]], "is_unpackable": [[53, "is-unpackable"]], "BOOST_HOF_STATIC_LAMBDA": [[54, "boost-hof-static-lambda"]], "BOOST_HOF_STATIC_LAMBDA_FUNCTION": [[54, "boost-hof-static-lambda-function"]], "lazy": [[55, "lazy"]], "BOOST_HOF_LIFT": [[56, "boost-hof-lift"]], "Limitation": [[56, "limitation"]], "limit": [[57, "limit"]], "match": [[58, "match"]], "mutable": [[59, "mutable"]], "pack": [[60, "pack"]], "partial": [[61, "partial"]], "pipable": [[62, "pipable"]], "placeholders": [[63, "placeholders"]], "Operators": [[63, "operators"]], "unamed placeholder": [[63, "unamed-placeholder"]], "proj": [[64, "proj"]], "protect": [[65, "protect"]], "repeat": [[66, "repeat"]], "repeat_while": [[67, "repeat-while"]], "result": [[68, "result"]], "BOOST_HOF_RETURNS": [[69, "boost-hof-returns"]], "Incomplete this": [[69, "incomplete-this"]], "Mangling overloads": [[69, "mangling-overloads"]], "reveal": [[70, "reveal"]], "Sample": [[70, "sample"]], "Reporting Failures": [[70, "reporting-failures"]], "reverse_fold": [[71, "reverse-fold"]], "rotate": [[72, "rotate"]], "static": [[73, "static"]], "tap": [[74, "tap"]], "unpack": [[75, "unpack"]], "unpack_sequence": [[76, "unpack-sequence"]]}, "indexentries": {}})