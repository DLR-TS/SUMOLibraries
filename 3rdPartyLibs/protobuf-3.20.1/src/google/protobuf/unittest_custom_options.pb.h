// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_custom_options.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
namespace protobuf_unittest {
class Aggregate;
struct AggregateDefaultTypeInternal;
extern AggregateDefaultTypeInternal _Aggregate_default_instance_;
class AggregateMessage;
struct AggregateMessageDefaultTypeInternal;
extern AggregateMessageDefaultTypeInternal _AggregateMessage_default_instance_;
class AggregateMessageSet;
struct AggregateMessageSetDefaultTypeInternal;
extern AggregateMessageSetDefaultTypeInternal _AggregateMessageSet_default_instance_;
class AggregateMessageSetElement;
struct AggregateMessageSetElementDefaultTypeInternal;
extern AggregateMessageSetElementDefaultTypeInternal _AggregateMessageSetElement_default_instance_;
class ComplexOpt6;
struct ComplexOpt6DefaultTypeInternal;
extern ComplexOpt6DefaultTypeInternal _ComplexOpt6_default_instance_;
class ComplexOptionType1;
struct ComplexOptionType1DefaultTypeInternal;
extern ComplexOptionType1DefaultTypeInternal _ComplexOptionType1_default_instance_;
class ComplexOptionType2;
struct ComplexOptionType2DefaultTypeInternal;
extern ComplexOptionType2DefaultTypeInternal _ComplexOptionType2_default_instance_;
class ComplexOptionType2_ComplexOptionType4;
struct ComplexOptionType2_ComplexOptionType4DefaultTypeInternal;
extern ComplexOptionType2_ComplexOptionType4DefaultTypeInternal _ComplexOptionType2_ComplexOptionType4_default_instance_;
class ComplexOptionType3;
struct ComplexOptionType3DefaultTypeInternal;
extern ComplexOptionType3DefaultTypeInternal _ComplexOptionType3_default_instance_;
class ComplexOptionType3_ComplexOptionType5;
struct ComplexOptionType3_ComplexOptionType5DefaultTypeInternal;
extern ComplexOptionType3_ComplexOptionType5DefaultTypeInternal _ComplexOptionType3_ComplexOptionType5_default_instance_;
class CustomOptionFooClientMessage;
struct CustomOptionFooClientMessageDefaultTypeInternal;
extern CustomOptionFooClientMessageDefaultTypeInternal _CustomOptionFooClientMessage_default_instance_;
class CustomOptionFooRequest;
struct CustomOptionFooRequestDefaultTypeInternal;
extern CustomOptionFooRequestDefaultTypeInternal _CustomOptionFooRequest_default_instance_;
class CustomOptionFooResponse;
struct CustomOptionFooResponseDefaultTypeInternal;
extern CustomOptionFooResponseDefaultTypeInternal _CustomOptionFooResponse_default_instance_;
class CustomOptionFooServerMessage;
struct CustomOptionFooServerMessageDefaultTypeInternal;
extern CustomOptionFooServerMessageDefaultTypeInternal _CustomOptionFooServerMessage_default_instance_;
class CustomOptionMaxIntegerValues;
struct CustomOptionMaxIntegerValuesDefaultTypeInternal;
extern CustomOptionMaxIntegerValuesDefaultTypeInternal _CustomOptionMaxIntegerValues_default_instance_;
class CustomOptionMinIntegerValues;
struct CustomOptionMinIntegerValuesDefaultTypeInternal;
extern CustomOptionMinIntegerValuesDefaultTypeInternal _CustomOptionMinIntegerValues_default_instance_;
class CustomOptionOtherValues;
struct CustomOptionOtherValuesDefaultTypeInternal;
extern CustomOptionOtherValuesDefaultTypeInternal _CustomOptionOtherValues_default_instance_;
class DummyMessageContainingEnum;
struct DummyMessageContainingEnumDefaultTypeInternal;
extern DummyMessageContainingEnumDefaultTypeInternal _DummyMessageContainingEnum_default_instance_;
class DummyMessageInvalidAsOptionType;
struct DummyMessageInvalidAsOptionTypeDefaultTypeInternal;
extern DummyMessageInvalidAsOptionTypeDefaultTypeInternal _DummyMessageInvalidAsOptionType_default_instance_;
class NestedOptionType;
struct NestedOptionTypeDefaultTypeInternal;
extern NestedOptionTypeDefaultTypeInternal _NestedOptionType_default_instance_;
class NestedOptionType_NestedMessage;
struct NestedOptionType_NestedMessageDefaultTypeInternal;
extern NestedOptionType_NestedMessageDefaultTypeInternal _NestedOptionType_NestedMessage_default_instance_;
class NewOptionType;
struct NewOptionTypeDefaultTypeInternal;
extern NewOptionTypeDefaultTypeInternal _NewOptionType_default_instance_;
class OldOptionType;
struct OldOptionTypeDefaultTypeInternal;
extern OldOptionTypeDefaultTypeInternal _OldOptionType_default_instance_;
class SettingRealsFromNegativeInts;
struct SettingRealsFromNegativeIntsDefaultTypeInternal;
extern SettingRealsFromNegativeIntsDefaultTypeInternal _SettingRealsFromNegativeInts_default_instance_;
class SettingRealsFromPositiveInts;
struct SettingRealsFromPositiveIntsDefaultTypeInternal;
extern SettingRealsFromPositiveIntsDefaultTypeInternal _SettingRealsFromPositiveInts_default_instance_;
class TestMessageWithCustomOptions;
struct TestMessageWithCustomOptionsDefaultTypeInternal;
extern TestMessageWithCustomOptionsDefaultTypeInternal _TestMessageWithCustomOptions_default_instance_;
class TestMessageWithCustomOptions_MapFieldEntry_DoNotUse;
struct TestMessageWithCustomOptions_MapFieldEntry_DoNotUseDefaultTypeInternal;
extern TestMessageWithCustomOptions_MapFieldEntry_DoNotUseDefaultTypeInternal _TestMessageWithCustomOptions_MapFieldEntry_DoNotUse_default_instance_;
class TestMessageWithRequiredEnumOption;
struct TestMessageWithRequiredEnumOptionDefaultTypeInternal;
extern TestMessageWithRequiredEnumOptionDefaultTypeInternal _TestMessageWithRequiredEnumOption_default_instance_;
class VariousComplexOptions;
struct VariousComplexOptionsDefaultTypeInternal;
extern VariousComplexOptionsDefaultTypeInternal _VariousComplexOptions_default_instance_;
}  // namespace protobuf_unittest
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf_unittest::Aggregate* Arena::CreateMaybeMessage<::protobuf_unittest::Aggregate>(Arena*);
template<> ::protobuf_unittest::AggregateMessage* Arena::CreateMaybeMessage<::protobuf_unittest::AggregateMessage>(Arena*);
template<> ::protobuf_unittest::AggregateMessageSet* Arena::CreateMaybeMessage<::protobuf_unittest::AggregateMessageSet>(Arena*);
template<> ::protobuf_unittest::AggregateMessageSetElement* Arena::CreateMaybeMessage<::protobuf_unittest::AggregateMessageSetElement>(Arena*);
template<> ::protobuf_unittest::ComplexOpt6* Arena::CreateMaybeMessage<::protobuf_unittest::ComplexOpt6>(Arena*);
template<> ::protobuf_unittest::ComplexOptionType1* Arena::CreateMaybeMessage<::protobuf_unittest::ComplexOptionType1>(Arena*);
template<> ::protobuf_unittest::ComplexOptionType2* Arena::CreateMaybeMessage<::protobuf_unittest::ComplexOptionType2>(Arena*);
template<> ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* Arena::CreateMaybeMessage<::protobuf_unittest::ComplexOptionType2_ComplexOptionType4>(Arena*);
template<> ::protobuf_unittest::ComplexOptionType3* Arena::CreateMaybeMessage<::protobuf_unittest::ComplexOptionType3>(Arena*);
template<> ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* Arena::CreateMaybeMessage<::protobuf_unittest::ComplexOptionType3_ComplexOptionType5>(Arena*);
template<> ::protobuf_unittest::CustomOptionFooClientMessage* Arena::CreateMaybeMessage<::protobuf_unittest::CustomOptionFooClientMessage>(Arena*);
template<> ::protobuf_unittest::CustomOptionFooRequest* Arena::CreateMaybeMessage<::protobuf_unittest::CustomOptionFooRequest>(Arena*);
template<> ::protobuf_unittest::CustomOptionFooResponse* Arena::CreateMaybeMessage<::protobuf_unittest::CustomOptionFooResponse>(Arena*);
template<> ::protobuf_unittest::CustomOptionFooServerMessage* Arena::CreateMaybeMessage<::protobuf_unittest::CustomOptionFooServerMessage>(Arena*);
template<> ::protobuf_unittest::CustomOptionMaxIntegerValues* Arena::CreateMaybeMessage<::protobuf_unittest::CustomOptionMaxIntegerValues>(Arena*);
template<> ::protobuf_unittest::CustomOptionMinIntegerValues* Arena::CreateMaybeMessage<::protobuf_unittest::CustomOptionMinIntegerValues>(Arena*);
template<> ::protobuf_unittest::CustomOptionOtherValues* Arena::CreateMaybeMessage<::protobuf_unittest::CustomOptionOtherValues>(Arena*);
template<> ::protobuf_unittest::DummyMessageContainingEnum* Arena::CreateMaybeMessage<::protobuf_unittest::DummyMessageContainingEnum>(Arena*);
template<> ::protobuf_unittest::DummyMessageInvalidAsOptionType* Arena::CreateMaybeMessage<::protobuf_unittest::DummyMessageInvalidAsOptionType>(Arena*);
template<> ::protobuf_unittest::NestedOptionType* Arena::CreateMaybeMessage<::protobuf_unittest::NestedOptionType>(Arena*);
template<> ::protobuf_unittest::NestedOptionType_NestedMessage* Arena::CreateMaybeMessage<::protobuf_unittest::NestedOptionType_NestedMessage>(Arena*);
template<> ::protobuf_unittest::NewOptionType* Arena::CreateMaybeMessage<::protobuf_unittest::NewOptionType>(Arena*);
template<> ::protobuf_unittest::OldOptionType* Arena::CreateMaybeMessage<::protobuf_unittest::OldOptionType>(Arena*);
template<> ::protobuf_unittest::SettingRealsFromNegativeInts* Arena::CreateMaybeMessage<::protobuf_unittest::SettingRealsFromNegativeInts>(Arena*);
template<> ::protobuf_unittest::SettingRealsFromPositiveInts* Arena::CreateMaybeMessage<::protobuf_unittest::SettingRealsFromPositiveInts>(Arena*);
template<> ::protobuf_unittest::TestMessageWithCustomOptions* Arena::CreateMaybeMessage<::protobuf_unittest::TestMessageWithCustomOptions>(Arena*);
template<> ::protobuf_unittest::TestMessageWithCustomOptions_MapFieldEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_unittest::TestMessageWithCustomOptions_MapFieldEntry_DoNotUse>(Arena*);
template<> ::protobuf_unittest::TestMessageWithRequiredEnumOption* Arena::CreateMaybeMessage<::protobuf_unittest::TestMessageWithRequiredEnumOption>(Arena*);
template<> ::protobuf_unittest::VariousComplexOptions* Arena::CreateMaybeMessage<::protobuf_unittest::VariousComplexOptions>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf_unittest {

enum TestMessageWithCustomOptions_AnEnum : int {
  TestMessageWithCustomOptions_AnEnum_ANENUM_VAL1 = 1,
  TestMessageWithCustomOptions_AnEnum_ANENUM_VAL2 = 2
};
bool TestMessageWithCustomOptions_AnEnum_IsValid(int value);
constexpr TestMessageWithCustomOptions_AnEnum TestMessageWithCustomOptions_AnEnum_AnEnum_MIN = TestMessageWithCustomOptions_AnEnum_ANENUM_VAL1;
constexpr TestMessageWithCustomOptions_AnEnum TestMessageWithCustomOptions_AnEnum_AnEnum_MAX = TestMessageWithCustomOptions_AnEnum_ANENUM_VAL2;
constexpr int TestMessageWithCustomOptions_AnEnum_AnEnum_ARRAYSIZE = TestMessageWithCustomOptions_AnEnum_AnEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TestMessageWithCustomOptions_AnEnum_descriptor();
template<typename T>
inline const std::string& TestMessageWithCustomOptions_AnEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, TestMessageWithCustomOptions_AnEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function TestMessageWithCustomOptions_AnEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    TestMessageWithCustomOptions_AnEnum_descriptor(), enum_t_value);
}
inline bool TestMessageWithCustomOptions_AnEnum_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, TestMessageWithCustomOptions_AnEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<TestMessageWithCustomOptions_AnEnum>(
    TestMessageWithCustomOptions_AnEnum_descriptor(), name, value);
}
enum DummyMessageContainingEnum_TestEnumType : int {
  DummyMessageContainingEnum_TestEnumType_TEST_OPTION_ENUM_TYPE1 = 22,
  DummyMessageContainingEnum_TestEnumType_TEST_OPTION_ENUM_TYPE2 = -23
};
bool DummyMessageContainingEnum_TestEnumType_IsValid(int value);
constexpr DummyMessageContainingEnum_TestEnumType DummyMessageContainingEnum_TestEnumType_TestEnumType_MIN = DummyMessageContainingEnum_TestEnumType_TEST_OPTION_ENUM_TYPE2;
constexpr DummyMessageContainingEnum_TestEnumType DummyMessageContainingEnum_TestEnumType_TestEnumType_MAX = DummyMessageContainingEnum_TestEnumType_TEST_OPTION_ENUM_TYPE1;
constexpr int DummyMessageContainingEnum_TestEnumType_TestEnumType_ARRAYSIZE = DummyMessageContainingEnum_TestEnumType_TestEnumType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DummyMessageContainingEnum_TestEnumType_descriptor();
template<typename T>
inline const std::string& DummyMessageContainingEnum_TestEnumType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DummyMessageContainingEnum_TestEnumType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DummyMessageContainingEnum_TestEnumType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DummyMessageContainingEnum_TestEnumType_descriptor(), enum_t_value);
}
inline bool DummyMessageContainingEnum_TestEnumType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DummyMessageContainingEnum_TestEnumType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DummyMessageContainingEnum_TestEnumType>(
    DummyMessageContainingEnum_TestEnumType_descriptor(), name, value);
}
enum NestedOptionType_NestedEnum : int {
  NestedOptionType_NestedEnum_NESTED_ENUM_VALUE = 1
};
bool NestedOptionType_NestedEnum_IsValid(int value);
constexpr NestedOptionType_NestedEnum NestedOptionType_NestedEnum_NestedEnum_MIN = NestedOptionType_NestedEnum_NESTED_ENUM_VALUE;
constexpr NestedOptionType_NestedEnum NestedOptionType_NestedEnum_NestedEnum_MAX = NestedOptionType_NestedEnum_NESTED_ENUM_VALUE;
constexpr int NestedOptionType_NestedEnum_NestedEnum_ARRAYSIZE = NestedOptionType_NestedEnum_NestedEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* NestedOptionType_NestedEnum_descriptor();
template<typename T>
inline const std::string& NestedOptionType_NestedEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, NestedOptionType_NestedEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function NestedOptionType_NestedEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    NestedOptionType_NestedEnum_descriptor(), enum_t_value);
}
inline bool NestedOptionType_NestedEnum_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, NestedOptionType_NestedEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<NestedOptionType_NestedEnum>(
    NestedOptionType_NestedEnum_descriptor(), name, value);
}
enum OldOptionType_TestEnum : int {
  OldOptionType_TestEnum_OLD_VALUE = 0
};
bool OldOptionType_TestEnum_IsValid(int value);
constexpr OldOptionType_TestEnum OldOptionType_TestEnum_TestEnum_MIN = OldOptionType_TestEnum_OLD_VALUE;
constexpr OldOptionType_TestEnum OldOptionType_TestEnum_TestEnum_MAX = OldOptionType_TestEnum_OLD_VALUE;
constexpr int OldOptionType_TestEnum_TestEnum_ARRAYSIZE = OldOptionType_TestEnum_TestEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OldOptionType_TestEnum_descriptor();
template<typename T>
inline const std::string& OldOptionType_TestEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, OldOptionType_TestEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function OldOptionType_TestEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    OldOptionType_TestEnum_descriptor(), enum_t_value);
}
inline bool OldOptionType_TestEnum_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, OldOptionType_TestEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<OldOptionType_TestEnum>(
    OldOptionType_TestEnum_descriptor(), name, value);
}
enum NewOptionType_TestEnum : int {
  NewOptionType_TestEnum_OLD_VALUE = 0,
  NewOptionType_TestEnum_NEW_VALUE = 1
};
bool NewOptionType_TestEnum_IsValid(int value);
constexpr NewOptionType_TestEnum NewOptionType_TestEnum_TestEnum_MIN = NewOptionType_TestEnum_OLD_VALUE;
constexpr NewOptionType_TestEnum NewOptionType_TestEnum_TestEnum_MAX = NewOptionType_TestEnum_NEW_VALUE;
constexpr int NewOptionType_TestEnum_TestEnum_ARRAYSIZE = NewOptionType_TestEnum_TestEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* NewOptionType_TestEnum_descriptor();
template<typename T>
inline const std::string& NewOptionType_TestEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, NewOptionType_TestEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function NewOptionType_TestEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    NewOptionType_TestEnum_descriptor(), enum_t_value);
}
inline bool NewOptionType_TestEnum_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, NewOptionType_TestEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<NewOptionType_TestEnum>(
    NewOptionType_TestEnum_descriptor(), name, value);
}
enum MethodOpt1 : int {
  METHODOPT1_VAL1 = 1,
  METHODOPT1_VAL2 = 2
};
bool MethodOpt1_IsValid(int value);
constexpr MethodOpt1 MethodOpt1_MIN = METHODOPT1_VAL1;
constexpr MethodOpt1 MethodOpt1_MAX = METHODOPT1_VAL2;
constexpr int MethodOpt1_ARRAYSIZE = MethodOpt1_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MethodOpt1_descriptor();
template<typename T>
inline const std::string& MethodOpt1_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MethodOpt1>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MethodOpt1_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MethodOpt1_descriptor(), enum_t_value);
}
inline bool MethodOpt1_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MethodOpt1* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MethodOpt1>(
    MethodOpt1_descriptor(), name, value);
}
enum AggregateEnum : int {
  VALUE = 1
};
bool AggregateEnum_IsValid(int value);
constexpr AggregateEnum AggregateEnum_MIN = VALUE;
constexpr AggregateEnum AggregateEnum_MAX = VALUE;
constexpr int AggregateEnum_ARRAYSIZE = AggregateEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AggregateEnum_descriptor();
template<typename T>
inline const std::string& AggregateEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AggregateEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AggregateEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AggregateEnum_descriptor(), enum_t_value);
}
inline bool AggregateEnum_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, AggregateEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AggregateEnum>(
    AggregateEnum_descriptor(), name, value);
}
// ===================================================================

class TestMessageWithCustomOptions_MapFieldEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMessageWithCustomOptions_MapFieldEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestMessageWithCustomOptions_MapFieldEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  TestMessageWithCustomOptions_MapFieldEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestMessageWithCustomOptions_MapFieldEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestMessageWithCustomOptions_MapFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestMessageWithCustomOptions_MapFieldEntry_DoNotUse& other);
  static const TestMessageWithCustomOptions_MapFieldEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMessageWithCustomOptions_MapFieldEntry_DoNotUse*>(&_TestMessageWithCustomOptions_MapFieldEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf_unittest.TestMessageWithCustomOptions.MapFieldEntry.key");
#else
    (void) s;
#endif
    return true;
 }
  static bool ValidateValue(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf_unittest.TestMessageWithCustomOptions.MapFieldEntry.value");
#else
    (void) s;
#endif
    return true;
 }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};

// -------------------------------------------------------------------

class TestMessageWithCustomOptions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMessageWithCustomOptions) */ {
 public:
  inline TestMessageWithCustomOptions() : TestMessageWithCustomOptions(nullptr) {}
  ~TestMessageWithCustomOptions() override;
  explicit PROTOBUF_CONSTEXPR TestMessageWithCustomOptions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TestMessageWithCustomOptions(const TestMessageWithCustomOptions& from);
  TestMessageWithCustomOptions(TestMessageWithCustomOptions&& from) noexcept
    : TestMessageWithCustomOptions() {
    *this = ::std::move(from);
  }

  inline TestMessageWithCustomOptions& operator=(const TestMessageWithCustomOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageWithCustomOptions& operator=(TestMessageWithCustomOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessageWithCustomOptions& default_instance() {
    return *internal_default_instance();
  }
  enum AnOneofCase {
    kOneofField = 2,
    ANONEOF_NOT_SET = 0,
  };

  static inline const TestMessageWithCustomOptions* internal_default_instance() {
    return reinterpret_cast<const TestMessageWithCustomOptions*>(
               &_TestMessageWithCustomOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TestMessageWithCustomOptions& a, TestMessageWithCustomOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMessageWithCustomOptions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessageWithCustomOptions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessageWithCustomOptions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestMessageWithCustomOptions>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TestMessageWithCustomOptions& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const TestMessageWithCustomOptions& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestMessageWithCustomOptions* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.TestMessageWithCustomOptions";
  }
  protected:
  explicit TestMessageWithCustomOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  typedef TestMessageWithCustomOptions_AnEnum AnEnum;
  static constexpr AnEnum ANENUM_VAL1 =
    TestMessageWithCustomOptions_AnEnum_ANENUM_VAL1;
  static constexpr AnEnum ANENUM_VAL2 =
    TestMessageWithCustomOptions_AnEnum_ANENUM_VAL2;
  static inline bool AnEnum_IsValid(int value) {
    return TestMessageWithCustomOptions_AnEnum_IsValid(value);
  }
  static constexpr AnEnum AnEnum_MIN =
    TestMessageWithCustomOptions_AnEnum_AnEnum_MIN;
  static constexpr AnEnum AnEnum_MAX =
    TestMessageWithCustomOptions_AnEnum_AnEnum_MAX;
  static constexpr int AnEnum_ARRAYSIZE =
    TestMessageWithCustomOptions_AnEnum_AnEnum_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  AnEnum_descriptor() {
    return TestMessageWithCustomOptions_AnEnum_descriptor();
  }
  template<typename T>
  static inline const std::string& AnEnum_Name(T enum_t_value) {
    static_assert(::std::is_same<T, AnEnum>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function AnEnum_Name.");
    return TestMessageWithCustomOptions_AnEnum_Name(enum_t_value);
  }
  static inline bool AnEnum_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      AnEnum* value) {
    return TestMessageWithCustomOptions_AnEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kMapFieldFieldNumber = 3,
    kField1FieldNumber = 1,
    kOneofFieldFieldNumber = 2,
  };
  // map<string, string> map_field = 3 [(.protobuf_unittest.field_opt1) = 12345];
  int map_field_size() const;
  private:
  int _internal_map_field_size() const;
  public:
  void clear_map_field();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_map_field() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_map_field();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      map_field() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_map_field();

  // optional string field1 = 1 [ctype = CORD, (.protobuf_unittest.field_opt1) = 8765432109];
  bool has_field1() const;
  private:
  bool _internal_has_field1() const;
  public:
  void clear_field1();
 private:
  // Hidden due to unknown ctype option.
  const std::string& field1() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_field1(ArgT0&& arg0, ArgT... args);
  std::string* mutable_field1();
  PROTOBUF_NODISCARD std::string* release_field1();
  void set_allocated_field1(std::string* field1);
  private:
  const std::string& _internal_field1() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_field1(const std::string& value);
  std::string* _internal_mutable_field1();
  public:
 public:

  // int32 oneof_field = 2;
  bool has_oneof_field() const;
  private:
  bool _internal_has_oneof_field() const;
  public:
  void clear_oneof_field();
  int32_t oneof_field() const;
  void set_oneof_field(int32_t value);
  private:
  int32_t _internal_oneof_field() const;
  void _internal_set_oneof_field(int32_t value);
  public:

  void clear_AnOneof();
  AnOneofCase AnOneof_case() const;
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMessageWithCustomOptions)
 private:
  class _Internal;
  void set_has_oneof_field();

  inline bool has_AnOneof() const;
  inline void clear_has_AnOneof();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TestMessageWithCustomOptions_MapFieldEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> map_field_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field1_;
  union AnOneofUnion {
    constexpr AnOneofUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    int32_t oneof_field_;
  } AnOneof_;
  uint32_t _oneof_case_[1];

  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class CustomOptionFooRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_unittest.CustomOptionFooRequest) */ {
 public:
  inline CustomOptionFooRequest() : CustomOptionFooRequest(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CustomOptionFooRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CustomOptionFooRequest(const CustomOptionFooRequest& from);
  CustomOptionFooRequest(CustomOptionFooRequest&& from) noexcept
    : CustomOptionFooRequest() {
    *this = ::std::move(from);
  }

  inline CustomOptionFooRequest& operator=(const CustomOptionFooRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomOptionFooRequest& operator=(CustomOptionFooRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomOptionFooRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomOptionFooRequest* internal_default_instance() {
    return reinterpret_cast<const CustomOptionFooRequest*>(
               &_CustomOptionFooRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CustomOptionFooRequest& a, CustomOptionFooRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomOptionFooRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomOptionFooRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomOptionFooRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CustomOptionFooRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CustomOptionFooRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CustomOptionFooRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.CustomOptionFooRequest";
  }
  protected:
  explicit CustomOptionFooRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_unittest.CustomOptionFooRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class CustomOptionFooResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_unittest.CustomOptionFooResponse) */ {
 public:
  inline CustomOptionFooResponse() : CustomOptionFooResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CustomOptionFooResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CustomOptionFooResponse(const CustomOptionFooResponse& from);
  CustomOptionFooResponse(CustomOptionFooResponse&& from) noexcept
    : CustomOptionFooResponse() {
    *this = ::std::move(from);
  }

  inline CustomOptionFooResponse& operator=(const CustomOptionFooResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomOptionFooResponse& operator=(CustomOptionFooResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomOptionFooResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomOptionFooResponse* internal_default_instance() {
    return reinterpret_cast<const CustomOptionFooResponse*>(
               &_CustomOptionFooResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CustomOptionFooResponse& a, CustomOptionFooResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomOptionFooResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomOptionFooResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomOptionFooResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CustomOptionFooResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CustomOptionFooResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CustomOptionFooResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.CustomOptionFooResponse";
  }
  protected:
  explicit CustomOptionFooResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_unittest.CustomOptionFooResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class CustomOptionFooClientMessage final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_unittest.CustomOptionFooClientMessage) */ {
 public:
  inline CustomOptionFooClientMessage() : CustomOptionFooClientMessage(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CustomOptionFooClientMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CustomOptionFooClientMessage(const CustomOptionFooClientMessage& from);
  CustomOptionFooClientMessage(CustomOptionFooClientMessage&& from) noexcept
    : CustomOptionFooClientMessage() {
    *this = ::std::move(from);
  }

  inline CustomOptionFooClientMessage& operator=(const CustomOptionFooClientMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomOptionFooClientMessage& operator=(CustomOptionFooClientMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomOptionFooClientMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomOptionFooClientMessage* internal_default_instance() {
    return reinterpret_cast<const CustomOptionFooClientMessage*>(
               &_CustomOptionFooClientMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CustomOptionFooClientMessage& a, CustomOptionFooClientMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomOptionFooClientMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomOptionFooClientMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomOptionFooClientMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CustomOptionFooClientMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CustomOptionFooClientMessage& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CustomOptionFooClientMessage& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.CustomOptionFooClientMessage";
  }
  protected:
  explicit CustomOptionFooClientMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_unittest.CustomOptionFooClientMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class CustomOptionFooServerMessage final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_unittest.CustomOptionFooServerMessage) */ {
 public:
  inline CustomOptionFooServerMessage() : CustomOptionFooServerMessage(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CustomOptionFooServerMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CustomOptionFooServerMessage(const CustomOptionFooServerMessage& from);
  CustomOptionFooServerMessage(CustomOptionFooServerMessage&& from) noexcept
    : CustomOptionFooServerMessage() {
    *this = ::std::move(from);
  }

  inline CustomOptionFooServerMessage& operator=(const CustomOptionFooServerMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomOptionFooServerMessage& operator=(CustomOptionFooServerMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomOptionFooServerMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomOptionFooServerMessage* internal_default_instance() {
    return reinterpret_cast<const CustomOptionFooServerMessage*>(
               &_CustomOptionFooServerMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CustomOptionFooServerMessage& a, CustomOptionFooServerMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomOptionFooServerMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomOptionFooServerMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomOptionFooServerMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CustomOptionFooServerMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CustomOptionFooServerMessage& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CustomOptionFooServerMessage& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.CustomOptionFooServerMessage";
  }
  protected:
  explicit CustomOptionFooServerMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_unittest.CustomOptionFooServerMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class DummyMessageContainingEnum final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_unittest.DummyMessageContainingEnum) */ {
 public:
  inline DummyMessageContainingEnum() : DummyMessageContainingEnum(nullptr) {}
  explicit PROTOBUF_CONSTEXPR DummyMessageContainingEnum(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DummyMessageContainingEnum(const DummyMessageContainingEnum& from);
  DummyMessageContainingEnum(DummyMessageContainingEnum&& from) noexcept
    : DummyMessageContainingEnum() {
    *this = ::std::move(from);
  }

  inline DummyMessageContainingEnum& operator=(const DummyMessageContainingEnum& from) {
    CopyFrom(from);
    return *this;
  }
  inline DummyMessageContainingEnum& operator=(DummyMessageContainingEnum&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DummyMessageContainingEnum& default_instance() {
    return *internal_default_instance();
  }
  static inline const DummyMessageContainingEnum* internal_default_instance() {
    return reinterpret_cast<const DummyMessageContainingEnum*>(
               &_DummyMessageContainingEnum_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DummyMessageContainingEnum& a, DummyMessageContainingEnum& b) {
    a.Swap(&b);
  }
  inline void Swap(DummyMessageContainingEnum* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DummyMessageContainingEnum* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DummyMessageContainingEnum* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DummyMessageContainingEnum>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DummyMessageContainingEnum& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DummyMessageContainingEnum& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.DummyMessageContainingEnum";
  }
  protected:
  explicit DummyMessageContainingEnum(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DummyMessageContainingEnum_TestEnumType TestEnumType;
  static constexpr TestEnumType TEST_OPTION_ENUM_TYPE1 =
    DummyMessageContainingEnum_TestEnumType_TEST_OPTION_ENUM_TYPE1;
  static constexpr TestEnumType TEST_OPTION_ENUM_TYPE2 =
    DummyMessageContainingEnum_TestEnumType_TEST_OPTION_ENUM_TYPE2;
  static inline bool TestEnumType_IsValid(int value) {
    return DummyMessageContainingEnum_TestEnumType_IsValid(value);
  }
  static constexpr TestEnumType TestEnumType_MIN =
    DummyMessageContainingEnum_TestEnumType_TestEnumType_MIN;
  static constexpr TestEnumType TestEnumType_MAX =
    DummyMessageContainingEnum_TestEnumType_TestEnumType_MAX;
  static constexpr int TestEnumType_ARRAYSIZE =
    DummyMessageContainingEnum_TestEnumType_TestEnumType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  TestEnumType_descriptor() {
    return DummyMessageContainingEnum_TestEnumType_descriptor();
  }
  template<typename T>
  static inline const std::string& TestEnumType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, TestEnumType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function TestEnumType_Name.");
    return DummyMessageContainingEnum_TestEnumType_Name(enum_t_value);
  }
  static inline bool TestEnumType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      TestEnumType* value) {
    return DummyMessageContainingEnum_TestEnumType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_unittest.DummyMessageContainingEnum)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class DummyMessageInvalidAsOptionType final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_unittest.DummyMessageInvalidAsOptionType) */ {
 public:
  inline DummyMessageInvalidAsOptionType() : DummyMessageInvalidAsOptionType(nullptr) {}
  explicit PROTOBUF_CONSTEXPR DummyMessageInvalidAsOptionType(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DummyMessageInvalidAsOptionType(const DummyMessageInvalidAsOptionType& from);
  DummyMessageInvalidAsOptionType(DummyMessageInvalidAsOptionType&& from) noexcept
    : DummyMessageInvalidAsOptionType() {
    *this = ::std::move(from);
  }

  inline DummyMessageInvalidAsOptionType& operator=(const DummyMessageInvalidAsOptionType& from) {
    CopyFrom(from);
    return *this;
  }
  inline DummyMessageInvalidAsOptionType& operator=(DummyMessageInvalidAsOptionType&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DummyMessageInvalidAsOptionType& default_instance() {
    return *internal_default_instance();
  }
  static inline const DummyMessageInvalidAsOptionType* internal_default_instance() {
    return reinterpret_cast<const DummyMessageInvalidAsOptionType*>(
               &_DummyMessageInvalidAsOptionType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DummyMessageInvalidAsOptionType& a, DummyMessageInvalidAsOptionType& b) {
    a.Swap(&b);
  }
  inline void Swap(DummyMessageInvalidAsOptionType* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DummyMessageInvalidAsOptionType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DummyMessageInvalidAsOptionType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DummyMessageInvalidAsOptionType>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DummyMessageInvalidAsOptionType& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DummyMessageInvalidAsOptionType& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.DummyMessageInvalidAsOptionType";
  }
  protected:
  explicit DummyMessageInvalidAsOptionType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_unittest.DummyMessageInvalidAsOptionType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class CustomOptionMinIntegerValues final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_unittest.CustomOptionMinIntegerValues) */ {
 public:
  inline CustomOptionMinIntegerValues() : CustomOptionMinIntegerValues(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CustomOptionMinIntegerValues(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CustomOptionMinIntegerValues(const CustomOptionMinIntegerValues& from);
  CustomOptionMinIntegerValues(CustomOptionMinIntegerValues&& from) noexcept
    : CustomOptionMinIntegerValues() {
    *this = ::std::move(from);
  }

  inline CustomOptionMinIntegerValues& operator=(const CustomOptionMinIntegerValues& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomOptionMinIntegerValues& operator=(CustomOptionMinIntegerValues&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomOptionMinIntegerValues& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomOptionMinIntegerValues* internal_default_instance() {
    return reinterpret_cast<const CustomOptionMinIntegerValues*>(
               &_CustomOptionMinIntegerValues_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CustomOptionMinIntegerValues& a, CustomOptionMinIntegerValues& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomOptionMinIntegerValues* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomOptionMinIntegerValues* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomOptionMinIntegerValues* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CustomOptionMinIntegerValues>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CustomOptionMinIntegerValues& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CustomOptionMinIntegerValues& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.CustomOptionMinIntegerValues";
  }
  protected:
  explicit CustomOptionMinIntegerValues(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_unittest.CustomOptionMinIntegerValues)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class CustomOptionMaxIntegerValues final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_unittest.CustomOptionMaxIntegerValues) */ {
 public:
  inline CustomOptionMaxIntegerValues() : CustomOptionMaxIntegerValues(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CustomOptionMaxIntegerValues(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CustomOptionMaxIntegerValues(const CustomOptionMaxIntegerValues& from);
  CustomOptionMaxIntegerValues(CustomOptionMaxIntegerValues&& from) noexcept
    : CustomOptionMaxIntegerValues() {
    *this = ::std::move(from);
  }

  inline CustomOptionMaxIntegerValues& operator=(const CustomOptionMaxIntegerValues& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomOptionMaxIntegerValues& operator=(CustomOptionMaxIntegerValues&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomOptionMaxIntegerValues& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomOptionMaxIntegerValues* internal_default_instance() {
    return reinterpret_cast<const CustomOptionMaxIntegerValues*>(
               &_CustomOptionMaxIntegerValues_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CustomOptionMaxIntegerValues& a, CustomOptionMaxIntegerValues& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomOptionMaxIntegerValues* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomOptionMaxIntegerValues* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomOptionMaxIntegerValues* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CustomOptionMaxIntegerValues>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CustomOptionMaxIntegerValues& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CustomOptionMaxIntegerValues& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.CustomOptionMaxIntegerValues";
  }
  protected:
  explicit CustomOptionMaxIntegerValues(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_unittest.CustomOptionMaxIntegerValues)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class CustomOptionOtherValues final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_unittest.CustomOptionOtherValues) */ {
 public:
  inline CustomOptionOtherValues() : CustomOptionOtherValues(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CustomOptionOtherValues(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CustomOptionOtherValues(const CustomOptionOtherValues& from);
  CustomOptionOtherValues(CustomOptionOtherValues&& from) noexcept
    : CustomOptionOtherValues() {
    *this = ::std::move(from);
  }

  inline CustomOptionOtherValues& operator=(const CustomOptionOtherValues& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomOptionOtherValues& operator=(CustomOptionOtherValues&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomOptionOtherValues& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomOptionOtherValues* internal_default_instance() {
    return reinterpret_cast<const CustomOptionOtherValues*>(
               &_CustomOptionOtherValues_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CustomOptionOtherValues& a, CustomOptionOtherValues& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomOptionOtherValues* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomOptionOtherValues* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomOptionOtherValues* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CustomOptionOtherValues>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CustomOptionOtherValues& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CustomOptionOtherValues& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.CustomOptionOtherValues";
  }
  protected:
  explicit CustomOptionOtherValues(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_unittest.CustomOptionOtherValues)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class SettingRealsFromPositiveInts final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_unittest.SettingRealsFromPositiveInts) */ {
 public:
  inline SettingRealsFromPositiveInts() : SettingRealsFromPositiveInts(nullptr) {}
  explicit PROTOBUF_CONSTEXPR SettingRealsFromPositiveInts(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SettingRealsFromPositiveInts(const SettingRealsFromPositiveInts& from);
  SettingRealsFromPositiveInts(SettingRealsFromPositiveInts&& from) noexcept
    : SettingRealsFromPositiveInts() {
    *this = ::std::move(from);
  }

  inline SettingRealsFromPositiveInts& operator=(const SettingRealsFromPositiveInts& from) {
    CopyFrom(from);
    return *this;
  }
  inline SettingRealsFromPositiveInts& operator=(SettingRealsFromPositiveInts&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SettingRealsFromPositiveInts& default_instance() {
    return *internal_default_instance();
  }
  static inline const SettingRealsFromPositiveInts* internal_default_instance() {
    return reinterpret_cast<const SettingRealsFromPositiveInts*>(
               &_SettingRealsFromPositiveInts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(SettingRealsFromPositiveInts& a, SettingRealsFromPositiveInts& b) {
    a.Swap(&b);
  }
  inline void Swap(SettingRealsFromPositiveInts* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SettingRealsFromPositiveInts* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SettingRealsFromPositiveInts* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SettingRealsFromPositiveInts>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SettingRealsFromPositiveInts& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SettingRealsFromPositiveInts& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.SettingRealsFromPositiveInts";
  }
  protected:
  explicit SettingRealsFromPositiveInts(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_unittest.SettingRealsFromPositiveInts)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class SettingRealsFromNegativeInts final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_unittest.SettingRealsFromNegativeInts) */ {
 public:
  inline SettingRealsFromNegativeInts() : SettingRealsFromNegativeInts(nullptr) {}
  explicit PROTOBUF_CONSTEXPR SettingRealsFromNegativeInts(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SettingRealsFromNegativeInts(const SettingRealsFromNegativeInts& from);
  SettingRealsFromNegativeInts(SettingRealsFromNegativeInts&& from) noexcept
    : SettingRealsFromNegativeInts() {
    *this = ::std::move(from);
  }

  inline SettingRealsFromNegativeInts& operator=(const SettingRealsFromNegativeInts& from) {
    CopyFrom(from);
    return *this;
  }
  inline SettingRealsFromNegativeInts& operator=(SettingRealsFromNegativeInts&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SettingRealsFromNegativeInts& default_instance() {
    return *internal_default_instance();
  }
  static inline const SettingRealsFromNegativeInts* internal_default_instance() {
    return reinterpret_cast<const SettingRealsFromNegativeInts*>(
               &_SettingRealsFromNegativeInts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(SettingRealsFromNegativeInts& a, SettingRealsFromNegativeInts& b) {
    a.Swap(&b);
  }
  inline void Swap(SettingRealsFromNegativeInts* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SettingRealsFromNegativeInts* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SettingRealsFromNegativeInts* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SettingRealsFromNegativeInts>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SettingRealsFromNegativeInts& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SettingRealsFromNegativeInts& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.SettingRealsFromNegativeInts";
  }
  protected:
  explicit SettingRealsFromNegativeInts(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_unittest.SettingRealsFromNegativeInts)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class ComplexOptionType1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.ComplexOptionType1) */ {
 public:
  inline ComplexOptionType1() : ComplexOptionType1(nullptr) {}
  ~ComplexOptionType1() override;
  explicit PROTOBUF_CONSTEXPR ComplexOptionType1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ComplexOptionType1(const ComplexOptionType1& from);
  ComplexOptionType1(ComplexOptionType1&& from) noexcept
    : ComplexOptionType1() {
    *this = ::std::move(from);
  }

  inline ComplexOptionType1& operator=(const ComplexOptionType1& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComplexOptionType1& operator=(ComplexOptionType1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComplexOptionType1& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComplexOptionType1* internal_default_instance() {
    return reinterpret_cast<const ComplexOptionType1*>(
               &_ComplexOptionType1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ComplexOptionType1& a, ComplexOptionType1& b) {
    a.Swap(&b);
  }
  inline void Swap(ComplexOptionType1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComplexOptionType1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComplexOptionType1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ComplexOptionType1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ComplexOptionType1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ComplexOptionType1& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComplexOptionType1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.ComplexOptionType1";
  }
  protected:
  explicit ComplexOptionType1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFoo4FieldNumber = 4,
    kFooFieldNumber = 1,
    kFoo2FieldNumber = 2,
    kFoo3FieldNumber = 3,
  };
  // repeated int32 foo4 = 4;
  int foo4_size() const;
  private:
  int _internal_foo4_size() const;
  public:
  void clear_foo4();
  private:
  int32_t _internal_foo4(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_foo4() const;
  void _internal_add_foo4(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_foo4();
  public:
  int32_t foo4(int index) const;
  void set_foo4(int index, int32_t value);
  void add_foo4(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      foo4() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_foo4();

  // optional int32 foo = 1;
  bool has_foo() const;
  private:
  bool _internal_has_foo() const;
  public:
  void clear_foo();
  int32_t foo() const;
  void set_foo(int32_t value);
  private:
  int32_t _internal_foo() const;
  void _internal_set_foo(int32_t value);
  public:

  // optional int32 foo2 = 2;
  bool has_foo2() const;
  private:
  bool _internal_has_foo2() const;
  public:
  void clear_foo2();
  int32_t foo2() const;
  void set_foo2(int32_t value);
  private:
  int32_t _internal_foo2() const;
  void _internal_set_foo2(int32_t value);
  public:

  // optional int32 foo3 = 3;
  bool has_foo3() const;
  private:
  bool _internal_has_foo3() const;
  public:
  void clear_foo3();
  int32_t foo3() const;
  void set_foo3(int32_t value);
  private:
  int32_t _internal_foo3() const;
  void _internal_set_foo3(int32_t value);
  public:


  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline bool HasExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id) {
    _extensions_.ClearExtension(id.number());

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline int ExtensionSize(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _proto_TypeTraits::Get(id.number(), _extensions_,
                                  id.default_value());
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::Mutable(id.number(), _field_type,
                                      &_extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_extensions_);

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_extensions_);

  }
  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_extensions_);

  }
  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
              ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::Release(id.number(), _field_type,
                                      &_extensions_);
  }
  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id,
      int index) const {

    return _proto_TypeTraits::Get(id.number(), _extensions_, index);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id,
      int index) {

    return _proto_TypeTraits::Mutable(id.number(), index, &_extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_extensions_);

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id) {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_extensions_);

    return to_add;
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_extensions_);

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _proto_TypeTraits::GetRepeated(id.number(), _extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType1, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_extensions_);
  }

  // @@protoc_insertion_point(class_scope:protobuf_unittest.ComplexOptionType1)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::ExtensionSet _extensions_;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > foo4_;
  int32_t foo_;
  int32_t foo2_;
  int32_t foo3_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class ComplexOptionType2_ComplexOptionType4 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.ComplexOptionType2.ComplexOptionType4) */ {
 public:
  inline ComplexOptionType2_ComplexOptionType4() : ComplexOptionType2_ComplexOptionType4(nullptr) {}
  ~ComplexOptionType2_ComplexOptionType4() override;
  explicit PROTOBUF_CONSTEXPR ComplexOptionType2_ComplexOptionType4(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ComplexOptionType2_ComplexOptionType4(const ComplexOptionType2_ComplexOptionType4& from);
  ComplexOptionType2_ComplexOptionType4(ComplexOptionType2_ComplexOptionType4&& from) noexcept
    : ComplexOptionType2_ComplexOptionType4() {
    *this = ::std::move(from);
  }

  inline ComplexOptionType2_ComplexOptionType4& operator=(const ComplexOptionType2_ComplexOptionType4& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComplexOptionType2_ComplexOptionType4& operator=(ComplexOptionType2_ComplexOptionType4&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComplexOptionType2_ComplexOptionType4& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComplexOptionType2_ComplexOptionType4* internal_default_instance() {
    return reinterpret_cast<const ComplexOptionType2_ComplexOptionType4*>(
               &_ComplexOptionType2_ComplexOptionType4_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(ComplexOptionType2_ComplexOptionType4& a, ComplexOptionType2_ComplexOptionType4& b) {
    a.Swap(&b);
  }
  inline void Swap(ComplexOptionType2_ComplexOptionType4* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComplexOptionType2_ComplexOptionType4* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComplexOptionType2_ComplexOptionType4* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ComplexOptionType2_ComplexOptionType4>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ComplexOptionType2_ComplexOptionType4& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ComplexOptionType2_ComplexOptionType4& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComplexOptionType2_ComplexOptionType4* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.ComplexOptionType2.ComplexOptionType4";
  }
  protected:
  explicit ComplexOptionType2_ComplexOptionType4(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWaldoFieldNumber = 1,
  };
  // optional int32 waldo = 1;
  bool has_waldo() const;
  private:
  bool _internal_has_waldo() const;
  public:
  void clear_waldo();
  int32_t waldo() const;
  void set_waldo(int32_t value);
  private:
  int32_t _internal_waldo() const;
  void _internal_set_waldo(int32_t value);
  public:

  static const int kComplexOpt4FieldNumber = 7633546;
  static ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
      ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4 >, 11, false >
    complex_opt4;
  // @@protoc_insertion_point(class_scope:protobuf_unittest.ComplexOptionType2.ComplexOptionType4)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int32_t waldo_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class ComplexOptionType2 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.ComplexOptionType2) */ {
 public:
  inline ComplexOptionType2() : ComplexOptionType2(nullptr) {}
  ~ComplexOptionType2() override;
  explicit PROTOBUF_CONSTEXPR ComplexOptionType2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ComplexOptionType2(const ComplexOptionType2& from);
  ComplexOptionType2(ComplexOptionType2&& from) noexcept
    : ComplexOptionType2() {
    *this = ::std::move(from);
  }

  inline ComplexOptionType2& operator=(const ComplexOptionType2& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComplexOptionType2& operator=(ComplexOptionType2&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComplexOptionType2& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComplexOptionType2* internal_default_instance() {
    return reinterpret_cast<const ComplexOptionType2*>(
               &_ComplexOptionType2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ComplexOptionType2& a, ComplexOptionType2& b) {
    a.Swap(&b);
  }
  inline void Swap(ComplexOptionType2* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComplexOptionType2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComplexOptionType2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ComplexOptionType2>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ComplexOptionType2& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ComplexOptionType2& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComplexOptionType2* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.ComplexOptionType2";
  }
  protected:
  explicit ComplexOptionType2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ComplexOptionType2_ComplexOptionType4 ComplexOptionType4;

  // accessors -------------------------------------------------------

  enum : int {
    kBarneyFieldNumber = 4,
    kBarFieldNumber = 1,
    kFredFieldNumber = 3,
    kBazFieldNumber = 2,
  };
  // repeated .protobuf_unittest.ComplexOptionType2.ComplexOptionType4 barney = 4;
  int barney_size() const;
  private:
  int _internal_barney_size() const;
  public:
  void clear_barney();
  ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* mutable_barney(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4 >*
      mutable_barney();
  private:
  const ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4& _internal_barney(int index) const;
  ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* _internal_add_barney();
  public:
  const ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4& barney(int index) const;
  ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* add_barney();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4 >&
      barney() const;

  // optional .protobuf_unittest.ComplexOptionType1 bar = 1;
  bool has_bar() const;
  private:
  bool _internal_has_bar() const;
  public:
  void clear_bar();
  const ::protobuf_unittest::ComplexOptionType1& bar() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::ComplexOptionType1* release_bar();
  ::protobuf_unittest::ComplexOptionType1* mutable_bar();
  void set_allocated_bar(::protobuf_unittest::ComplexOptionType1* bar);
  private:
  const ::protobuf_unittest::ComplexOptionType1& _internal_bar() const;
  ::protobuf_unittest::ComplexOptionType1* _internal_mutable_bar();
  public:
  void unsafe_arena_set_allocated_bar(
      ::protobuf_unittest::ComplexOptionType1* bar);
  ::protobuf_unittest::ComplexOptionType1* unsafe_arena_release_bar();

  // optional .protobuf_unittest.ComplexOptionType2.ComplexOptionType4 fred = 3;
  bool has_fred() const;
  private:
  bool _internal_has_fred() const;
  public:
  void clear_fred();
  const ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4& fred() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* release_fred();
  ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* mutable_fred();
  void set_allocated_fred(::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* fred);
  private:
  const ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4& _internal_fred() const;
  ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* _internal_mutable_fred();
  public:
  void unsafe_arena_set_allocated_fred(
      ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* fred);
  ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* unsafe_arena_release_fred();

  // optional int32 baz = 2;
  bool has_baz() const;
  private:
  bool _internal_has_baz() const;
  public:
  void clear_baz();
  int32_t baz() const;
  void set_baz(int32_t value);
  private:
  int32_t _internal_baz() const;
  void _internal_set_baz(int32_t value);
  public:


  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline bool HasExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id) {
    _extensions_.ClearExtension(id.number());

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline int ExtensionSize(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _proto_TypeTraits::Get(id.number(), _extensions_,
                                  id.default_value());
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::Mutable(id.number(), _field_type,
                                      &_extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_extensions_);

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_extensions_);

  }
  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_extensions_);

  }
  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
              ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::Release(id.number(), _field_type,
                                      &_extensions_);
  }
  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id,
      int index) const {

    return _proto_TypeTraits::Get(id.number(), _extensions_, index);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id,
      int index) {

    return _proto_TypeTraits::Mutable(id.number(), index, &_extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_extensions_);

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id) {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_extensions_);

    return to_add;
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_extensions_);

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _proto_TypeTraits::GetRepeated(id.number(), _extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          ComplexOptionType2, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_extensions_);
  }

  // @@protoc_insertion_point(class_scope:protobuf_unittest.ComplexOptionType2)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::ExtensionSet _extensions_;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4 > barney_;
  ::protobuf_unittest::ComplexOptionType1* bar_;
  ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* fred_;
  int32_t baz_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class ComplexOptionType3_ComplexOptionType5 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.ComplexOptionType3.ComplexOptionType5) */ {
 public:
  inline ComplexOptionType3_ComplexOptionType5() : ComplexOptionType3_ComplexOptionType5(nullptr) {}
  ~ComplexOptionType3_ComplexOptionType5() override;
  explicit PROTOBUF_CONSTEXPR ComplexOptionType3_ComplexOptionType5(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ComplexOptionType3_ComplexOptionType5(const ComplexOptionType3_ComplexOptionType5& from);
  ComplexOptionType3_ComplexOptionType5(ComplexOptionType3_ComplexOptionType5&& from) noexcept
    : ComplexOptionType3_ComplexOptionType5() {
    *this = ::std::move(from);
  }

  inline ComplexOptionType3_ComplexOptionType5& operator=(const ComplexOptionType3_ComplexOptionType5& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComplexOptionType3_ComplexOptionType5& operator=(ComplexOptionType3_ComplexOptionType5&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComplexOptionType3_ComplexOptionType5& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComplexOptionType3_ComplexOptionType5* internal_default_instance() {
    return reinterpret_cast<const ComplexOptionType3_ComplexOptionType5*>(
               &_ComplexOptionType3_ComplexOptionType5_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(ComplexOptionType3_ComplexOptionType5& a, ComplexOptionType3_ComplexOptionType5& b) {
    a.Swap(&b);
  }
  inline void Swap(ComplexOptionType3_ComplexOptionType5* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComplexOptionType3_ComplexOptionType5* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComplexOptionType3_ComplexOptionType5* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ComplexOptionType3_ComplexOptionType5>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ComplexOptionType3_ComplexOptionType5& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ComplexOptionType3_ComplexOptionType5& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComplexOptionType3_ComplexOptionType5* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.ComplexOptionType3.ComplexOptionType5";
  }
  protected:
  explicit ComplexOptionType3_ComplexOptionType5(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlughFieldNumber = 3,
  };
  // optional int32 plugh = 3;
  bool has_plugh() const;
  private:
  bool _internal_has_plugh() const;
  public:
  void clear_plugh();
  int32_t plugh() const;
  void set_plugh(int32_t value);
  private:
  int32_t _internal_plugh() const;
  void _internal_set_plugh(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_unittest.ComplexOptionType3.ComplexOptionType5)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int32_t plugh_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class ComplexOptionType3 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.ComplexOptionType3) */ {
 public:
  inline ComplexOptionType3() : ComplexOptionType3(nullptr) {}
  ~ComplexOptionType3() override;
  explicit PROTOBUF_CONSTEXPR ComplexOptionType3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ComplexOptionType3(const ComplexOptionType3& from);
  ComplexOptionType3(ComplexOptionType3&& from) noexcept
    : ComplexOptionType3() {
    *this = ::std::move(from);
  }

  inline ComplexOptionType3& operator=(const ComplexOptionType3& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComplexOptionType3& operator=(ComplexOptionType3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComplexOptionType3& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComplexOptionType3* internal_default_instance() {
    return reinterpret_cast<const ComplexOptionType3*>(
               &_ComplexOptionType3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ComplexOptionType3& a, ComplexOptionType3& b) {
    a.Swap(&b);
  }
  inline void Swap(ComplexOptionType3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComplexOptionType3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComplexOptionType3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ComplexOptionType3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ComplexOptionType3& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ComplexOptionType3& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComplexOptionType3* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.ComplexOptionType3";
  }
  protected:
  explicit ComplexOptionType3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ComplexOptionType3_ComplexOptionType5 ComplexOptionType5;

  // accessors -------------------------------------------------------

  enum : int {
    kComplexoptiontype5FieldNumber = 2,
    kQuxFieldNumber = 1,
  };
  // optional group ComplexOptionType5 = 2 { ... };
  bool has_complexoptiontype5() const;
  private:
  bool _internal_has_complexoptiontype5() const;
  public:
  void clear_complexoptiontype5();
  const ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5& complexoptiontype5() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* release_complexoptiontype5();
  ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* mutable_complexoptiontype5();
  void set_allocated_complexoptiontype5(::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* complexoptiontype5);
  private:
  const ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5& _internal_complexoptiontype5() const;
  ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* _internal_mutable_complexoptiontype5();
  public:
  void unsafe_arena_set_allocated_complexoptiontype5(
      ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* complexoptiontype5);
  ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* unsafe_arena_release_complexoptiontype5();

  // optional int32 qux = 1;
  bool has_qux() const;
  private:
  bool _internal_has_qux() const;
  public:
  void clear_qux();
  int32_t qux() const;
  void set_qux(int32_t value);
  private:
  int32_t _internal_qux() const;
  void _internal_set_qux(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_unittest.ComplexOptionType3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* complexoptiontype5_;
  int32_t qux_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class ComplexOpt6 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.ComplexOpt6) */ {
 public:
  inline ComplexOpt6() : ComplexOpt6(nullptr) {}
  ~ComplexOpt6() override;
  explicit PROTOBUF_CONSTEXPR ComplexOpt6(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ComplexOpt6(const ComplexOpt6& from);
  ComplexOpt6(ComplexOpt6&& from) noexcept
    : ComplexOpt6() {
    *this = ::std::move(from);
  }

  inline ComplexOpt6& operator=(const ComplexOpt6& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComplexOpt6& operator=(ComplexOpt6&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComplexOpt6& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComplexOpt6* internal_default_instance() {
    return reinterpret_cast<const ComplexOpt6*>(
               &_ComplexOpt6_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(ComplexOpt6& a, ComplexOpt6& b) {
    a.Swap(&b);
  }
  inline void Swap(ComplexOpt6* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComplexOpt6* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComplexOpt6* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ComplexOpt6>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ComplexOpt6& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ComplexOpt6& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComplexOpt6* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.ComplexOpt6";
  }
  protected:
  explicit ComplexOpt6(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXyzzyFieldNumber = 7593951,
  };
  // optional int32 xyzzy = 7593951;
  bool has_xyzzy() const;
  private:
  bool _internal_has_xyzzy() const;
  public:
  void clear_xyzzy();
  int32_t xyzzy() const;
  void set_xyzzy(int32_t value);
  private:
  int32_t _internal_xyzzy() const;
  void _internal_set_xyzzy(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_unittest.ComplexOpt6)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int32_t xyzzy_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class VariousComplexOptions final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_unittest.VariousComplexOptions) */ {
 public:
  inline VariousComplexOptions() : VariousComplexOptions(nullptr) {}
  explicit PROTOBUF_CONSTEXPR VariousComplexOptions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VariousComplexOptions(const VariousComplexOptions& from);
  VariousComplexOptions(VariousComplexOptions&& from) noexcept
    : VariousComplexOptions() {
    *this = ::std::move(from);
  }

  inline VariousComplexOptions& operator=(const VariousComplexOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline VariousComplexOptions& operator=(VariousComplexOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VariousComplexOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const VariousComplexOptions* internal_default_instance() {
    return reinterpret_cast<const VariousComplexOptions*>(
               &_VariousComplexOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(VariousComplexOptions& a, VariousComplexOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(VariousComplexOptions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VariousComplexOptions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VariousComplexOptions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VariousComplexOptions>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const VariousComplexOptions& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const VariousComplexOptions& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.VariousComplexOptions";
  }
  protected:
  explicit VariousComplexOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_unittest.VariousComplexOptions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class AggregateMessageSet final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.AggregateMessageSet) */ {
 public:
  inline AggregateMessageSet() : AggregateMessageSet(nullptr) {}
  ~AggregateMessageSet() override;
  explicit PROTOBUF_CONSTEXPR AggregateMessageSet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AggregateMessageSet(const AggregateMessageSet& from);
  AggregateMessageSet(AggregateMessageSet&& from) noexcept
    : AggregateMessageSet() {
    *this = ::std::move(from);
  }

  inline AggregateMessageSet& operator=(const AggregateMessageSet& from) {
    CopyFrom(from);
    return *this;
  }
  inline AggregateMessageSet& operator=(AggregateMessageSet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AggregateMessageSet& default_instance() {
    return *internal_default_instance();
  }
  static inline const AggregateMessageSet* internal_default_instance() {
    return reinterpret_cast<const AggregateMessageSet*>(
               &_AggregateMessageSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(AggregateMessageSet& a, AggregateMessageSet& b) {
    a.Swap(&b);
  }
  inline void Swap(AggregateMessageSet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AggregateMessageSet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AggregateMessageSet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AggregateMessageSet>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AggregateMessageSet& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AggregateMessageSet& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AggregateMessageSet* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.AggregateMessageSet";
  }
  protected:
  explicit AggregateMessageSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------


  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline bool HasExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id) {
    _extensions_.ClearExtension(id.number());

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline int ExtensionSize(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _proto_TypeTraits::Get(id.number(), _extensions_,
                                  id.default_value());
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::Mutable(id.number(), _field_type,
                                      &_extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_extensions_);

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_extensions_);

  }
  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_extensions_);

  }
  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
              AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::Release(id.number(), _field_type,
                                      &_extensions_);
  }
  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id,
      int index) const {

    return _proto_TypeTraits::Get(id.number(), _extensions_, index);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id,
      int index) {

    return _proto_TypeTraits::Mutable(id.number(), index, &_extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_extensions_);

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id) {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_extensions_);

    return to_add;
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_extensions_);

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _proto_TypeTraits::GetRepeated(id.number(), _extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          AggregateMessageSet, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_extensions_);
  }

  // @@protoc_insertion_point(class_scope:protobuf_unittest.AggregateMessageSet)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::ExtensionSet _extensions_;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class AggregateMessageSetElement final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.AggregateMessageSetElement) */ {
 public:
  inline AggregateMessageSetElement() : AggregateMessageSetElement(nullptr) {}
  ~AggregateMessageSetElement() override;
  explicit PROTOBUF_CONSTEXPR AggregateMessageSetElement(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AggregateMessageSetElement(const AggregateMessageSetElement& from);
  AggregateMessageSetElement(AggregateMessageSetElement&& from) noexcept
    : AggregateMessageSetElement() {
    *this = ::std::move(from);
  }

  inline AggregateMessageSetElement& operator=(const AggregateMessageSetElement& from) {
    CopyFrom(from);
    return *this;
  }
  inline AggregateMessageSetElement& operator=(AggregateMessageSetElement&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AggregateMessageSetElement& default_instance() {
    return *internal_default_instance();
  }
  static inline const AggregateMessageSetElement* internal_default_instance() {
    return reinterpret_cast<const AggregateMessageSetElement*>(
               &_AggregateMessageSetElement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(AggregateMessageSetElement& a, AggregateMessageSetElement& b) {
    a.Swap(&b);
  }
  inline void Swap(AggregateMessageSetElement* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AggregateMessageSetElement* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AggregateMessageSetElement* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AggregateMessageSetElement>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AggregateMessageSetElement& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AggregateMessageSetElement& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AggregateMessageSetElement* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.AggregateMessageSetElement";
  }
  protected:
  explicit AggregateMessageSetElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSFieldNumber = 1,
  };
  // optional string s = 1;
  bool has_s() const;
  private:
  bool _internal_has_s() const;
  public:
  void clear_s();
  const std::string& s() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_s(ArgT0&& arg0, ArgT... args);
  std::string* mutable_s();
  PROTOBUF_NODISCARD std::string* release_s();
  void set_allocated_s(std::string* s);
  private:
  const std::string& _internal_s() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_s(const std::string& value);
  std::string* _internal_mutable_s();
  public:

  static const int kMessageSetExtensionFieldNumber = 15447542;
  static ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::protobuf_unittest::AggregateMessageSet,
      ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::AggregateMessageSetElement >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:protobuf_unittest.AggregateMessageSetElement)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr s_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class Aggregate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.Aggregate) */ {
 public:
  inline Aggregate() : Aggregate(nullptr) {}
  ~Aggregate() override;
  explicit PROTOBUF_CONSTEXPR Aggregate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Aggregate(const Aggregate& from);
  Aggregate(Aggregate&& from) noexcept
    : Aggregate() {
    *this = ::std::move(from);
  }

  inline Aggregate& operator=(const Aggregate& from) {
    CopyFrom(from);
    return *this;
  }
  inline Aggregate& operator=(Aggregate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Aggregate& default_instance() {
    return *internal_default_instance();
  }
  static inline const Aggregate* internal_default_instance() {
    return reinterpret_cast<const Aggregate*>(
               &_Aggregate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(Aggregate& a, Aggregate& b) {
    a.Swap(&b);
  }
  inline void Swap(Aggregate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Aggregate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Aggregate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Aggregate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Aggregate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Aggregate& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Aggregate* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.Aggregate";
  }
  protected:
  explicit Aggregate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSFieldNumber = 2,
    kSubFieldNumber = 3,
    kFileFieldNumber = 4,
    kMsetFieldNumber = 5,
    kAnyFieldNumber = 6,
    kIFieldNumber = 1,
  };
  // optional string s = 2;
  bool has_s() const;
  private:
  bool _internal_has_s() const;
  public:
  void clear_s();
  const std::string& s() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_s(ArgT0&& arg0, ArgT... args);
  std::string* mutable_s();
  PROTOBUF_NODISCARD std::string* release_s();
  void set_allocated_s(std::string* s);
  private:
  const std::string& _internal_s() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_s(const std::string& value);
  std::string* _internal_mutable_s();
  public:

  // optional .protobuf_unittest.Aggregate sub = 3;
  bool has_sub() const;
  private:
  bool _internal_has_sub() const;
  public:
  void clear_sub();
  const ::protobuf_unittest::Aggregate& sub() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::Aggregate* release_sub();
  ::protobuf_unittest::Aggregate* mutable_sub();
  void set_allocated_sub(::protobuf_unittest::Aggregate* sub);
  private:
  const ::protobuf_unittest::Aggregate& _internal_sub() const;
  ::protobuf_unittest::Aggregate* _internal_mutable_sub();
  public:
  void unsafe_arena_set_allocated_sub(
      ::protobuf_unittest::Aggregate* sub);
  ::protobuf_unittest::Aggregate* unsafe_arena_release_sub();

  // optional .google.protobuf.FileOptions file = 4;
  bool has_file() const;
  private:
  bool _internal_has_file() const;
  public:
  void clear_file();
  const ::PROTOBUF_NAMESPACE_ID::FileOptions& file() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FileOptions* release_file();
  ::PROTOBUF_NAMESPACE_ID::FileOptions* mutable_file();
  void set_allocated_file(::PROTOBUF_NAMESPACE_ID::FileOptions* file);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FileOptions& _internal_file() const;
  ::PROTOBUF_NAMESPACE_ID::FileOptions* _internal_mutable_file();
  public:
  void unsafe_arena_set_allocated_file(
      ::PROTOBUF_NAMESPACE_ID::FileOptions* file);
  ::PROTOBUF_NAMESPACE_ID::FileOptions* unsafe_arena_release_file();

  // optional .protobuf_unittest.AggregateMessageSet mset = 5;
  bool has_mset() const;
  private:
  bool _internal_has_mset() const;
  public:
  void clear_mset();
  const ::protobuf_unittest::AggregateMessageSet& mset() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::AggregateMessageSet* release_mset();
  ::protobuf_unittest::AggregateMessageSet* mutable_mset();
  void set_allocated_mset(::protobuf_unittest::AggregateMessageSet* mset);
  private:
  const ::protobuf_unittest::AggregateMessageSet& _internal_mset() const;
  ::protobuf_unittest::AggregateMessageSet* _internal_mutable_mset();
  public:
  void unsafe_arena_set_allocated_mset(
      ::protobuf_unittest::AggregateMessageSet* mset);
  ::protobuf_unittest::AggregateMessageSet* unsafe_arena_release_mset();

  // optional .google.protobuf.Any any = 6;
  bool has_any() const;
  private:
  bool _internal_has_any() const;
  public:
  void clear_any();
  const ::PROTOBUF_NAMESPACE_ID::Any& any() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Any* release_any();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_any();
  void set_allocated_any(::PROTOBUF_NAMESPACE_ID::Any* any);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_any() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_any();
  public:
  void unsafe_arena_set_allocated_any(
      ::PROTOBUF_NAMESPACE_ID::Any* any);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_any();

  // optional int32 i = 1;
  bool has_i() const;
  private:
  bool _internal_has_i() const;
  public:
  void clear_i();
  int32_t i() const;
  void set_i(int32_t value);
  private:
  int32_t _internal_i() const;
  void _internal_set_i(int32_t value);
  public:

  static const int kNestedFieldNumber = 15476903;
  static ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FileOptions,
      ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::Aggregate >, 11, false >
    nested;
  // @@protoc_insertion_point(class_scope:protobuf_unittest.Aggregate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr s_;
  ::protobuf_unittest::Aggregate* sub_;
  ::PROTOBUF_NAMESPACE_ID::FileOptions* file_;
  ::protobuf_unittest::AggregateMessageSet* mset_;
  ::PROTOBUF_NAMESPACE_ID::Any* any_;
  int32_t i_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class AggregateMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.AggregateMessage) */ {
 public:
  inline AggregateMessage() : AggregateMessage(nullptr) {}
  ~AggregateMessage() override;
  explicit PROTOBUF_CONSTEXPR AggregateMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AggregateMessage(const AggregateMessage& from);
  AggregateMessage(AggregateMessage&& from) noexcept
    : AggregateMessage() {
    *this = ::std::move(from);
  }

  inline AggregateMessage& operator=(const AggregateMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline AggregateMessage& operator=(AggregateMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AggregateMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const AggregateMessage* internal_default_instance() {
    return reinterpret_cast<const AggregateMessage*>(
               &_AggregateMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(AggregateMessage& a, AggregateMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(AggregateMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AggregateMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AggregateMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AggregateMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AggregateMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AggregateMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AggregateMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.AggregateMessage";
  }
  protected:
  explicit AggregateMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldnameFieldNumber = 1,
  };
  // optional int32 fieldname = 1 [(.protobuf_unittest.fieldopt) = {
  bool has_fieldname() const;
  private:
  bool _internal_has_fieldname() const;
  public:
  void clear_fieldname();
  int32_t fieldname() const;
  void set_fieldname(int32_t value);
  private:
  int32_t _internal_fieldname() const;
  void _internal_set_fieldname(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_unittest.AggregateMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int32_t fieldname_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class NestedOptionType_NestedMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.NestedOptionType.NestedMessage) */ {
 public:
  inline NestedOptionType_NestedMessage() : NestedOptionType_NestedMessage(nullptr) {}
  ~NestedOptionType_NestedMessage() override;
  explicit PROTOBUF_CONSTEXPR NestedOptionType_NestedMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NestedOptionType_NestedMessage(const NestedOptionType_NestedMessage& from);
  NestedOptionType_NestedMessage(NestedOptionType_NestedMessage&& from) noexcept
    : NestedOptionType_NestedMessage() {
    *this = ::std::move(from);
  }

  inline NestedOptionType_NestedMessage& operator=(const NestedOptionType_NestedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline NestedOptionType_NestedMessage& operator=(NestedOptionType_NestedMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NestedOptionType_NestedMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const NestedOptionType_NestedMessage* internal_default_instance() {
    return reinterpret_cast<const NestedOptionType_NestedMessage*>(
               &_NestedOptionType_NestedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(NestedOptionType_NestedMessage& a, NestedOptionType_NestedMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(NestedOptionType_NestedMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NestedOptionType_NestedMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NestedOptionType_NestedMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NestedOptionType_NestedMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NestedOptionType_NestedMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const NestedOptionType_NestedMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NestedOptionType_NestedMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.NestedOptionType.NestedMessage";
  }
  protected:
  explicit NestedOptionType_NestedMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNestedFieldFieldNumber = 1,
  };
  // optional int32 nested_field = 1 [(.protobuf_unittest.field_opt1) = 1002];
  bool has_nested_field() const;
  private:
  bool _internal_has_nested_field() const;
  public:
  void clear_nested_field();
  int32_t nested_field() const;
  void set_nested_field(int32_t value);
  private:
  int32_t _internal_nested_field() const;
  void _internal_set_nested_field(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_unittest.NestedOptionType.NestedMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int32_t nested_field_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class NestedOptionType final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_unittest.NestedOptionType) */ {
 public:
  inline NestedOptionType() : NestedOptionType(nullptr) {}
  explicit PROTOBUF_CONSTEXPR NestedOptionType(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NestedOptionType(const NestedOptionType& from);
  NestedOptionType(NestedOptionType&& from) noexcept
    : NestedOptionType() {
    *this = ::std::move(from);
  }

  inline NestedOptionType& operator=(const NestedOptionType& from) {
    CopyFrom(from);
    return *this;
  }
  inline NestedOptionType& operator=(NestedOptionType&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NestedOptionType& default_instance() {
    return *internal_default_instance();
  }
  static inline const NestedOptionType* internal_default_instance() {
    return reinterpret_cast<const NestedOptionType*>(
               &_NestedOptionType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(NestedOptionType& a, NestedOptionType& b) {
    a.Swap(&b);
  }
  inline void Swap(NestedOptionType* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NestedOptionType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NestedOptionType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NestedOptionType>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NestedOptionType& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NestedOptionType& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.NestedOptionType";
  }
  protected:
  explicit NestedOptionType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NestedOptionType_NestedMessage NestedMessage;

  typedef NestedOptionType_NestedEnum NestedEnum;
  static constexpr NestedEnum NESTED_ENUM_VALUE =
    NestedOptionType_NestedEnum_NESTED_ENUM_VALUE;
  static inline bool NestedEnum_IsValid(int value) {
    return NestedOptionType_NestedEnum_IsValid(value);
  }
  static constexpr NestedEnum NestedEnum_MIN =
    NestedOptionType_NestedEnum_NestedEnum_MIN;
  static constexpr NestedEnum NestedEnum_MAX =
    NestedOptionType_NestedEnum_NestedEnum_MAX;
  static constexpr int NestedEnum_ARRAYSIZE =
    NestedOptionType_NestedEnum_NestedEnum_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  NestedEnum_descriptor() {
    return NestedOptionType_NestedEnum_descriptor();
  }
  template<typename T>
  static inline const std::string& NestedEnum_Name(T enum_t_value) {
    static_assert(::std::is_same<T, NestedEnum>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function NestedEnum_Name.");
    return NestedOptionType_NestedEnum_Name(enum_t_value);
  }
  static inline bool NestedEnum_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      NestedEnum* value) {
    return NestedOptionType_NestedEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  static const int kNestedExtensionFieldNumber = 7912573;
  static ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FileOptions,
      ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int32_t >, 5, false >
    nested_extension;
  // @@protoc_insertion_point(class_scope:protobuf_unittest.NestedOptionType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class OldOptionType final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.OldOptionType) */ {
 public:
  inline OldOptionType() : OldOptionType(nullptr) {}
  ~OldOptionType() override;
  explicit PROTOBUF_CONSTEXPR OldOptionType(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OldOptionType(const OldOptionType& from);
  OldOptionType(OldOptionType&& from) noexcept
    : OldOptionType() {
    *this = ::std::move(from);
  }

  inline OldOptionType& operator=(const OldOptionType& from) {
    CopyFrom(from);
    return *this;
  }
  inline OldOptionType& operator=(OldOptionType&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OldOptionType& default_instance() {
    return *internal_default_instance();
  }
  static inline const OldOptionType* internal_default_instance() {
    return reinterpret_cast<const OldOptionType*>(
               &_OldOptionType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(OldOptionType& a, OldOptionType& b) {
    a.Swap(&b);
  }
  inline void Swap(OldOptionType* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OldOptionType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OldOptionType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OldOptionType>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const OldOptionType& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const OldOptionType& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OldOptionType* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.OldOptionType";
  }
  protected:
  explicit OldOptionType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OldOptionType_TestEnum TestEnum;
  static constexpr TestEnum OLD_VALUE =
    OldOptionType_TestEnum_OLD_VALUE;
  static inline bool TestEnum_IsValid(int value) {
    return OldOptionType_TestEnum_IsValid(value);
  }
  static constexpr TestEnum TestEnum_MIN =
    OldOptionType_TestEnum_TestEnum_MIN;
  static constexpr TestEnum TestEnum_MAX =
    OldOptionType_TestEnum_TestEnum_MAX;
  static constexpr int TestEnum_ARRAYSIZE =
    OldOptionType_TestEnum_TestEnum_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  TestEnum_descriptor() {
    return OldOptionType_TestEnum_descriptor();
  }
  template<typename T>
  static inline const std::string& TestEnum_Name(T enum_t_value) {
    static_assert(::std::is_same<T, TestEnum>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function TestEnum_Name.");
    return OldOptionType_TestEnum_Name(enum_t_value);
  }
  static inline bool TestEnum_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      TestEnum* value) {
    return OldOptionType_TestEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // required .protobuf_unittest.OldOptionType.TestEnum value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::protobuf_unittest::OldOptionType_TestEnum value() const;
  void set_value(::protobuf_unittest::OldOptionType_TestEnum value);
  private:
  ::protobuf_unittest::OldOptionType_TestEnum _internal_value() const;
  void _internal_set_value(::protobuf_unittest::OldOptionType_TestEnum value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_unittest.OldOptionType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int value_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class NewOptionType final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.NewOptionType) */ {
 public:
  inline NewOptionType() : NewOptionType(nullptr) {}
  ~NewOptionType() override;
  explicit PROTOBUF_CONSTEXPR NewOptionType(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NewOptionType(const NewOptionType& from);
  NewOptionType(NewOptionType&& from) noexcept
    : NewOptionType() {
    *this = ::std::move(from);
  }

  inline NewOptionType& operator=(const NewOptionType& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewOptionType& operator=(NewOptionType&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewOptionType& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewOptionType* internal_default_instance() {
    return reinterpret_cast<const NewOptionType*>(
               &_NewOptionType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(NewOptionType& a, NewOptionType& b) {
    a.Swap(&b);
  }
  inline void Swap(NewOptionType* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewOptionType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewOptionType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NewOptionType>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NewOptionType& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const NewOptionType& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NewOptionType* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.NewOptionType";
  }
  protected:
  explicit NewOptionType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NewOptionType_TestEnum TestEnum;
  static constexpr TestEnum OLD_VALUE =
    NewOptionType_TestEnum_OLD_VALUE;
  static constexpr TestEnum NEW_VALUE =
    NewOptionType_TestEnum_NEW_VALUE;
  static inline bool TestEnum_IsValid(int value) {
    return NewOptionType_TestEnum_IsValid(value);
  }
  static constexpr TestEnum TestEnum_MIN =
    NewOptionType_TestEnum_TestEnum_MIN;
  static constexpr TestEnum TestEnum_MAX =
    NewOptionType_TestEnum_TestEnum_MAX;
  static constexpr int TestEnum_ARRAYSIZE =
    NewOptionType_TestEnum_TestEnum_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  TestEnum_descriptor() {
    return NewOptionType_TestEnum_descriptor();
  }
  template<typename T>
  static inline const std::string& TestEnum_Name(T enum_t_value) {
    static_assert(::std::is_same<T, TestEnum>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function TestEnum_Name.");
    return NewOptionType_TestEnum_Name(enum_t_value);
  }
  static inline bool TestEnum_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      TestEnum* value) {
    return NewOptionType_TestEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // required .protobuf_unittest.NewOptionType.TestEnum value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::protobuf_unittest::NewOptionType_TestEnum value() const;
  void set_value(::protobuf_unittest::NewOptionType_TestEnum value);
  private:
  ::protobuf_unittest::NewOptionType_TestEnum _internal_value() const;
  void _internal_set_value(::protobuf_unittest::NewOptionType_TestEnum value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_unittest.NewOptionType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int value_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// -------------------------------------------------------------------

class TestMessageWithRequiredEnumOption final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMessageWithRequiredEnumOption) */ {
 public:
  inline TestMessageWithRequiredEnumOption() : TestMessageWithRequiredEnumOption(nullptr) {}
  explicit PROTOBUF_CONSTEXPR TestMessageWithRequiredEnumOption(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TestMessageWithRequiredEnumOption(const TestMessageWithRequiredEnumOption& from);
  TestMessageWithRequiredEnumOption(TestMessageWithRequiredEnumOption&& from) noexcept
    : TestMessageWithRequiredEnumOption() {
    *this = ::std::move(from);
  }

  inline TestMessageWithRequiredEnumOption& operator=(const TestMessageWithRequiredEnumOption& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageWithRequiredEnumOption& operator=(TestMessageWithRequiredEnumOption&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessageWithRequiredEnumOption& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMessageWithRequiredEnumOption* internal_default_instance() {
    return reinterpret_cast<const TestMessageWithRequiredEnumOption*>(
               &_TestMessageWithRequiredEnumOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(TestMessageWithRequiredEnumOption& a, TestMessageWithRequiredEnumOption& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMessageWithRequiredEnumOption* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessageWithRequiredEnumOption* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessageWithRequiredEnumOption* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestMessageWithRequiredEnumOption>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TestMessageWithRequiredEnumOption& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TestMessageWithRequiredEnumOption& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.TestMessageWithRequiredEnumOption";
  }
  protected:
  explicit TestMessageWithRequiredEnumOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMessageWithRequiredEnumOption)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto;
};
// ===================================================================

class TestServiceWithCustomOptions_Stub;

class TestServiceWithCustomOptions : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline TestServiceWithCustomOptions() {};
 public:
  virtual ~TestServiceWithCustomOptions();

  typedef TestServiceWithCustomOptions_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void Foo(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::protobuf_unittest::CustomOptionFooRequest* request,
                       ::protobuf_unittest::CustomOptionFooResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TestServiceWithCustomOptions);
};

class TestServiceWithCustomOptions_Stub : public TestServiceWithCustomOptions {
 public:
  TestServiceWithCustomOptions_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  TestServiceWithCustomOptions_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~TestServiceWithCustomOptions_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements TestServiceWithCustomOptions ------------------------------------------

  void Foo(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::protobuf_unittest::CustomOptionFooRequest* request,
                       ::protobuf_unittest::CustomOptionFooResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TestServiceWithCustomOptions_Stub);
};


// -------------------------------------------------------------------

class AggregateService_Stub;

class AggregateService : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline AggregateService() {};
 public:
  virtual ~AggregateService();

  typedef AggregateService_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void Method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::protobuf_unittest::AggregateMessage* request,
                       ::protobuf_unittest::AggregateMessage* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(AggregateService);
};

class AggregateService_Stub : public AggregateService {
 public:
  AggregateService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  AggregateService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~AggregateService_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements AggregateService ------------------------------------------

  void Method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::protobuf_unittest::AggregateMessage* request,
                       ::protobuf_unittest::AggregateMessage* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(AggregateService_Stub);
};


// ===================================================================

static const int kFileOpt1FieldNumber = 7736974;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FileOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< uint64_t >, 4, false >
  file_opt1;
static const int kMessageOpt1FieldNumber = 7739036;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int32_t >, 5, false >
  message_opt1;
static const int kFieldOpt1FieldNumber = 7740936;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< uint64_t >, 6, false >
  field_opt1;
static const int kFieldOpt2FieldNumber = 7753913;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int32_t >, 5, false >
  field_opt2;
static const int kOneofOpt1FieldNumber = 7740111;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::OneofOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int32_t >, 5, false >
  oneof_opt1;
static const int kEnumOpt1FieldNumber = 7753576;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::EnumOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int32_t >, 15, false >
  enum_opt1;
static const int kEnumValueOpt1FieldNumber = 1560678;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::EnumValueOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int32_t >, 5, false >
  enum_value_opt1;
static const int kServiceOpt1FieldNumber = 7887650;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::ServiceOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int64_t >, 18, false >
  service_opt1;
static const int kMethodOpt1FieldNumber = 7890860;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::EnumTypeTraits< ::protobuf_unittest::MethodOpt1, ::protobuf_unittest::MethodOpt1_IsValid>, 14, false >
  method_opt1;
static const int kBoolOptFieldNumber = 7706090;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  bool_opt;
static const int kInt32OptFieldNumber = 7705709;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int32_t >, 5, false >
  int32_opt;
static const int kInt64OptFieldNumber = 7705542;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int64_t >, 3, false >
  int64_opt;
static const int kUint32OptFieldNumber = 7704880;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< uint32_t >, 13, false >
  uint32_opt;
static const int kUint64OptFieldNumber = 7702367;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< uint64_t >, 4, false >
  uint64_opt;
static const int kSint32OptFieldNumber = 7701568;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int32_t >, 17, false >
  sint32_opt;
static const int kSint64OptFieldNumber = 7700863;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int64_t >, 18, false >
  sint64_opt;
static const int kFixed32OptFieldNumber = 7700307;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< uint32_t >, 7, false >
  fixed32_opt;
static const int kFixed64OptFieldNumber = 7700194;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< uint64_t >, 6, false >
  fixed64_opt;
static const int kSfixed32OptFieldNumber = 7698645;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int32_t >, 15, false >
  sfixed32_opt;
static const int kSfixed64OptFieldNumber = 7685475;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int64_t >, 16, false >
  sfixed64_opt;
static const int kFloatOptFieldNumber = 7675390;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< float >, 2, false >
  float_opt;
static const int kDoubleOptFieldNumber = 7673293;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< double >, 1, false >
  double_opt;
static const int kStringOptFieldNumber = 7673285;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  string_opt;
static const int kBytesOptFieldNumber = 7673238;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 12, false >
  bytes_opt;
static const int kEnumOptFieldNumber = 7673233;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::EnumTypeTraits< ::protobuf_unittest::DummyMessageContainingEnum_TestEnumType, ::protobuf_unittest::DummyMessageContainingEnum_TestEnumType_IsValid>, 14, false >
  enum_opt;
static const int kMessageTypeOptFieldNumber = 7665967;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::DummyMessageInvalidAsOptionType >, 11, false >
  message_type_opt;
static const int kQuuxFieldNumber = 7663707;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::protobuf_unittest::ComplexOptionType1,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int32_t >, 5, false >
  quux;
static const int kCorgeFieldNumber = 7663442;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::protobuf_unittest::ComplexOptionType1,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::ComplexOptionType3 >, 11, false >
  corge;
static const int kGraultFieldNumber = 7650927;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::protobuf_unittest::ComplexOptionType2,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< int32_t >, 5, false >
  grault;
static const int kGarplyFieldNumber = 7649992;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::protobuf_unittest::ComplexOptionType2,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::ComplexOptionType1 >, 11, false >
  garply;
static const int kComplexOpt1FieldNumber = 7646756;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::ComplexOptionType1 >, 11, false >
  complex_opt1;
static const int kComplexOpt2FieldNumber = 7636949;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::ComplexOptionType2 >, 11, false >
  complex_opt2;
static const int kComplexOpt3FieldNumber = 7636463;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::ComplexOptionType3 >, 11, false >
  complex_opt3;
static const int kComplexopt6FieldNumber = 7595468;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::ComplexOpt6 >, 10, false >
  complexopt6;
static const int kFileoptFieldNumber = 15478479;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FileOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::Aggregate >, 11, false >
  fileopt;
static const int kMsgoptFieldNumber = 15480088;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::Aggregate >, 11, false >
  msgopt;
static const int kFieldoptFieldNumber = 15481374;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::Aggregate >, 11, false >
  fieldopt;
static const int kEnumoptFieldNumber = 15483218;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::EnumOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::Aggregate >, 11, false >
  enumopt;
static const int kEnumvaloptFieldNumber = 15486921;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::EnumValueOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::Aggregate >, 11, false >
  enumvalopt;
static const int kServiceoptFieldNumber = 15497145;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::ServiceOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::Aggregate >, 11, false >
  serviceopt;
static const int kMethodoptFieldNumber = 15512713;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::Aggregate >, 11, false >
  methodopt;
static const int kRequiredEnumOptFieldNumber = 106161807;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::OldOptionType >, 11, false >
  required_enum_opt;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TestMessageWithCustomOptions

// optional string field1 = 1 [ctype = CORD, (.protobuf_unittest.field_opt1) = 8765432109];
inline bool TestMessageWithCustomOptions::_internal_has_field1() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TestMessageWithCustomOptions::has_field1() const {
  return _internal_has_field1();
}
inline void TestMessageWithCustomOptions::clear_field1() {
  field1_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TestMessageWithCustomOptions::field1() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMessageWithCustomOptions.field1)
  return _internal_field1();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void TestMessageWithCustomOptions::set_field1(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 field1_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestMessageWithCustomOptions.field1)
}
inline std::string* TestMessageWithCustomOptions::mutable_field1() {
  std::string* _s = _internal_mutable_field1();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestMessageWithCustomOptions.field1)
  return _s;
}
inline const std::string& TestMessageWithCustomOptions::_internal_field1() const {
  return field1_.Get();
}
inline void TestMessageWithCustomOptions::_internal_set_field1(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  field1_.Set(value, GetArenaForAllocation());
}
inline std::string* TestMessageWithCustomOptions::_internal_mutable_field1() {
  _has_bits_[0] |= 0x00000001u;
  return field1_.Mutable(GetArenaForAllocation());
}
inline std::string* TestMessageWithCustomOptions::release_field1() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestMessageWithCustomOptions.field1)
  if (!_internal_has_field1()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = field1_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (field1_.IsDefault()) {
    field1_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void TestMessageWithCustomOptions::set_allocated_field1(std::string* field1) {
  if (field1 != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  field1_.SetAllocated(field1, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (field1_.IsDefault()) {
    field1_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestMessageWithCustomOptions.field1)
}

// int32 oneof_field = 2;
inline bool TestMessageWithCustomOptions::_internal_has_oneof_field() const {
  return AnOneof_case() == kOneofField;
}
inline bool TestMessageWithCustomOptions::has_oneof_field() const {
  return _internal_has_oneof_field();
}
inline void TestMessageWithCustomOptions::set_has_oneof_field() {
  _oneof_case_[0] = kOneofField;
}
inline void TestMessageWithCustomOptions::clear_oneof_field() {
  if (_internal_has_oneof_field()) {
    AnOneof_.oneof_field_ = 0;
    clear_has_AnOneof();
  }
}
inline int32_t TestMessageWithCustomOptions::_internal_oneof_field() const {
  if (_internal_has_oneof_field()) {
    return AnOneof_.oneof_field_;
  }
  return 0;
}
inline void TestMessageWithCustomOptions::_internal_set_oneof_field(int32_t value) {
  if (!_internal_has_oneof_field()) {
    clear_AnOneof();
    set_has_oneof_field();
  }
  AnOneof_.oneof_field_ = value;
}
inline int32_t TestMessageWithCustomOptions::oneof_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMessageWithCustomOptions.oneof_field)
  return _internal_oneof_field();
}
inline void TestMessageWithCustomOptions::set_oneof_field(int32_t value) {
  _internal_set_oneof_field(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestMessageWithCustomOptions.oneof_field)
}

// map<string, string> map_field = 3 [(.protobuf_unittest.field_opt1) = 12345];
inline int TestMessageWithCustomOptions::_internal_map_field_size() const {
  return map_field_.size();
}
inline int TestMessageWithCustomOptions::map_field_size() const {
  return _internal_map_field_size();
}
inline void TestMessageWithCustomOptions::clear_map_field() {
  map_field_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
TestMessageWithCustomOptions::_internal_map_field() const {
  return map_field_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
TestMessageWithCustomOptions::map_field() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMessageWithCustomOptions.map_field)
  return _internal_map_field();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
TestMessageWithCustomOptions::_internal_mutable_map_field() {
  return map_field_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
TestMessageWithCustomOptions::mutable_map_field() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMessageWithCustomOptions.map_field)
  return _internal_mutable_map_field();
}

inline bool TestMessageWithCustomOptions::has_AnOneof() const {
  return AnOneof_case() != ANONEOF_NOT_SET;
}
inline void TestMessageWithCustomOptions::clear_has_AnOneof() {
  _oneof_case_[0] = ANONEOF_NOT_SET;
}
inline TestMessageWithCustomOptions::AnOneofCase TestMessageWithCustomOptions::AnOneof_case() const {
  return TestMessageWithCustomOptions::AnOneofCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// CustomOptionFooRequest

// -------------------------------------------------------------------

// CustomOptionFooResponse

// -------------------------------------------------------------------

// CustomOptionFooClientMessage

// -------------------------------------------------------------------

// CustomOptionFooServerMessage

// -------------------------------------------------------------------

// DummyMessageContainingEnum

// -------------------------------------------------------------------

// DummyMessageInvalidAsOptionType

// -------------------------------------------------------------------

// CustomOptionMinIntegerValues

// -------------------------------------------------------------------

// CustomOptionMaxIntegerValues

// -------------------------------------------------------------------

// CustomOptionOtherValues

// -------------------------------------------------------------------

// SettingRealsFromPositiveInts

// -------------------------------------------------------------------

// SettingRealsFromNegativeInts

// -------------------------------------------------------------------

// ComplexOptionType1

// optional int32 foo = 1;
inline bool ComplexOptionType1::_internal_has_foo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ComplexOptionType1::has_foo() const {
  return _internal_has_foo();
}
inline void ComplexOptionType1::clear_foo() {
  foo_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline int32_t ComplexOptionType1::_internal_foo() const {
  return foo_;
}
inline int32_t ComplexOptionType1::foo() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ComplexOptionType1.foo)
  return _internal_foo();
}
inline void ComplexOptionType1::_internal_set_foo(int32_t value) {
  _has_bits_[0] |= 0x00000001u;
  foo_ = value;
}
inline void ComplexOptionType1::set_foo(int32_t value) {
  _internal_set_foo(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.ComplexOptionType1.foo)
}

// optional int32 foo2 = 2;
inline bool ComplexOptionType1::_internal_has_foo2() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ComplexOptionType1::has_foo2() const {
  return _internal_has_foo2();
}
inline void ComplexOptionType1::clear_foo2() {
  foo2_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline int32_t ComplexOptionType1::_internal_foo2() const {
  return foo2_;
}
inline int32_t ComplexOptionType1::foo2() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ComplexOptionType1.foo2)
  return _internal_foo2();
}
inline void ComplexOptionType1::_internal_set_foo2(int32_t value) {
  _has_bits_[0] |= 0x00000002u;
  foo2_ = value;
}
inline void ComplexOptionType1::set_foo2(int32_t value) {
  _internal_set_foo2(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.ComplexOptionType1.foo2)
}

// optional int32 foo3 = 3;
inline bool ComplexOptionType1::_internal_has_foo3() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ComplexOptionType1::has_foo3() const {
  return _internal_has_foo3();
}
inline void ComplexOptionType1::clear_foo3() {
  foo3_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline int32_t ComplexOptionType1::_internal_foo3() const {
  return foo3_;
}
inline int32_t ComplexOptionType1::foo3() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ComplexOptionType1.foo3)
  return _internal_foo3();
}
inline void ComplexOptionType1::_internal_set_foo3(int32_t value) {
  _has_bits_[0] |= 0x00000004u;
  foo3_ = value;
}
inline void ComplexOptionType1::set_foo3(int32_t value) {
  _internal_set_foo3(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.ComplexOptionType1.foo3)
}

// repeated int32 foo4 = 4;
inline int ComplexOptionType1::_internal_foo4_size() const {
  return foo4_.size();
}
inline int ComplexOptionType1::foo4_size() const {
  return _internal_foo4_size();
}
inline void ComplexOptionType1::clear_foo4() {
  foo4_.Clear();
}
inline int32_t ComplexOptionType1::_internal_foo4(int index) const {
  return foo4_.Get(index);
}
inline int32_t ComplexOptionType1::foo4(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ComplexOptionType1.foo4)
  return _internal_foo4(index);
}
inline void ComplexOptionType1::set_foo4(int index, int32_t value) {
  foo4_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.ComplexOptionType1.foo4)
}
inline void ComplexOptionType1::_internal_add_foo4(int32_t value) {
  foo4_.Add(value);
}
inline void ComplexOptionType1::add_foo4(int32_t value) {
  _internal_add_foo4(value);
  // @@protoc_insertion_point(field_add:protobuf_unittest.ComplexOptionType1.foo4)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ComplexOptionType1::_internal_foo4() const {
  return foo4_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ComplexOptionType1::foo4() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.ComplexOptionType1.foo4)
  return _internal_foo4();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ComplexOptionType1::_internal_mutable_foo4() {
  return &foo4_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ComplexOptionType1::mutable_foo4() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.ComplexOptionType1.foo4)
  return _internal_mutable_foo4();
}

// -------------------------------------------------------------------

// ComplexOptionType2_ComplexOptionType4

// optional int32 waldo = 1;
inline bool ComplexOptionType2_ComplexOptionType4::_internal_has_waldo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ComplexOptionType2_ComplexOptionType4::has_waldo() const {
  return _internal_has_waldo();
}
inline void ComplexOptionType2_ComplexOptionType4::clear_waldo() {
  waldo_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline int32_t ComplexOptionType2_ComplexOptionType4::_internal_waldo() const {
  return waldo_;
}
inline int32_t ComplexOptionType2_ComplexOptionType4::waldo() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ComplexOptionType2.ComplexOptionType4.waldo)
  return _internal_waldo();
}
inline void ComplexOptionType2_ComplexOptionType4::_internal_set_waldo(int32_t value) {
  _has_bits_[0] |= 0x00000001u;
  waldo_ = value;
}
inline void ComplexOptionType2_ComplexOptionType4::set_waldo(int32_t value) {
  _internal_set_waldo(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.ComplexOptionType2.ComplexOptionType4.waldo)
}

// -------------------------------------------------------------------

// ComplexOptionType2

// optional .protobuf_unittest.ComplexOptionType1 bar = 1;
inline bool ComplexOptionType2::_internal_has_bar() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || bar_ != nullptr);
  return value;
}
inline bool ComplexOptionType2::has_bar() const {
  return _internal_has_bar();
}
inline void ComplexOptionType2::clear_bar() {
  if (bar_ != nullptr) bar_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::protobuf_unittest::ComplexOptionType1& ComplexOptionType2::_internal_bar() const {
  const ::protobuf_unittest::ComplexOptionType1* p = bar_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::ComplexOptionType1&>(
      ::protobuf_unittest::_ComplexOptionType1_default_instance_);
}
inline const ::protobuf_unittest::ComplexOptionType1& ComplexOptionType2::bar() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ComplexOptionType2.bar)
  return _internal_bar();
}
inline void ComplexOptionType2::unsafe_arena_set_allocated_bar(
    ::protobuf_unittest::ComplexOptionType1* bar) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bar_);
  }
  bar_ = bar;
  if (bar) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.ComplexOptionType2.bar)
}
inline ::protobuf_unittest::ComplexOptionType1* ComplexOptionType2::release_bar() {
  _has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::ComplexOptionType1* temp = bar_;
  bar_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::protobuf_unittest::ComplexOptionType1* ComplexOptionType2::unsafe_arena_release_bar() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.ComplexOptionType2.bar)
  _has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::ComplexOptionType1* temp = bar_;
  bar_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::ComplexOptionType1* ComplexOptionType2::_internal_mutable_bar() {
  _has_bits_[0] |= 0x00000001u;
  if (bar_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_unittest::ComplexOptionType1>(GetArenaForAllocation());
    bar_ = p;
  }
  return bar_;
}
inline ::protobuf_unittest::ComplexOptionType1* ComplexOptionType2::mutable_bar() {
  ::protobuf_unittest::ComplexOptionType1* _msg = _internal_mutable_bar();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.ComplexOptionType2.bar)
  return _msg;
}
inline void ComplexOptionType2::set_allocated_bar(::protobuf_unittest::ComplexOptionType1* bar) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete bar_;
  }
  if (bar) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(bar);
    if (message_arena != submessage_arena) {
      bar = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bar, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  bar_ = bar;
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.ComplexOptionType2.bar)
}

// optional int32 baz = 2;
inline bool ComplexOptionType2::_internal_has_baz() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ComplexOptionType2::has_baz() const {
  return _internal_has_baz();
}
inline void ComplexOptionType2::clear_baz() {
  baz_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline int32_t ComplexOptionType2::_internal_baz() const {
  return baz_;
}
inline int32_t ComplexOptionType2::baz() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ComplexOptionType2.baz)
  return _internal_baz();
}
inline void ComplexOptionType2::_internal_set_baz(int32_t value) {
  _has_bits_[0] |= 0x00000004u;
  baz_ = value;
}
inline void ComplexOptionType2::set_baz(int32_t value) {
  _internal_set_baz(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.ComplexOptionType2.baz)
}

// optional .protobuf_unittest.ComplexOptionType2.ComplexOptionType4 fred = 3;
inline bool ComplexOptionType2::_internal_has_fred() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || fred_ != nullptr);
  return value;
}
inline bool ComplexOptionType2::has_fred() const {
  return _internal_has_fred();
}
inline void ComplexOptionType2::clear_fred() {
  if (fred_ != nullptr) fred_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4& ComplexOptionType2::_internal_fred() const {
  const ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* p = fred_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4&>(
      ::protobuf_unittest::_ComplexOptionType2_ComplexOptionType4_default_instance_);
}
inline const ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4& ComplexOptionType2::fred() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ComplexOptionType2.fred)
  return _internal_fred();
}
inline void ComplexOptionType2::unsafe_arena_set_allocated_fred(
    ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* fred) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fred_);
  }
  fred_ = fred;
  if (fred) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.ComplexOptionType2.fred)
}
inline ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* ComplexOptionType2::release_fred() {
  _has_bits_[0] &= ~0x00000002u;
  ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* temp = fred_;
  fred_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* ComplexOptionType2::unsafe_arena_release_fred() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.ComplexOptionType2.fred)
  _has_bits_[0] &= ~0x00000002u;
  ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* temp = fred_;
  fred_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* ComplexOptionType2::_internal_mutable_fred() {
  _has_bits_[0] |= 0x00000002u;
  if (fred_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_unittest::ComplexOptionType2_ComplexOptionType4>(GetArenaForAllocation());
    fred_ = p;
  }
  return fred_;
}
inline ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* ComplexOptionType2::mutable_fred() {
  ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* _msg = _internal_mutable_fred();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.ComplexOptionType2.fred)
  return _msg;
}
inline void ComplexOptionType2::set_allocated_fred(::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* fred) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete fred_;
  }
  if (fred) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(fred);
    if (message_arena != submessage_arena) {
      fred = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fred, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  fred_ = fred;
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.ComplexOptionType2.fred)
}

// repeated .protobuf_unittest.ComplexOptionType2.ComplexOptionType4 barney = 4;
inline int ComplexOptionType2::_internal_barney_size() const {
  return barney_.size();
}
inline int ComplexOptionType2::barney_size() const {
  return _internal_barney_size();
}
inline void ComplexOptionType2::clear_barney() {
  barney_.Clear();
}
inline ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* ComplexOptionType2::mutable_barney(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.ComplexOptionType2.barney)
  return barney_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4 >*
ComplexOptionType2::mutable_barney() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.ComplexOptionType2.barney)
  return &barney_;
}
inline const ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4& ComplexOptionType2::_internal_barney(int index) const {
  return barney_.Get(index);
}
inline const ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4& ComplexOptionType2::barney(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ComplexOptionType2.barney)
  return _internal_barney(index);
}
inline ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* ComplexOptionType2::_internal_add_barney() {
  return barney_.Add();
}
inline ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* ComplexOptionType2::add_barney() {
  ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4* _add = _internal_add_barney();
  // @@protoc_insertion_point(field_add:protobuf_unittest.ComplexOptionType2.barney)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_unittest::ComplexOptionType2_ComplexOptionType4 >&
ComplexOptionType2::barney() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.ComplexOptionType2.barney)
  return barney_;
}

// -------------------------------------------------------------------

// ComplexOptionType3_ComplexOptionType5

// optional int32 plugh = 3;
inline bool ComplexOptionType3_ComplexOptionType5::_internal_has_plugh() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ComplexOptionType3_ComplexOptionType5::has_plugh() const {
  return _internal_has_plugh();
}
inline void ComplexOptionType3_ComplexOptionType5::clear_plugh() {
  plugh_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline int32_t ComplexOptionType3_ComplexOptionType5::_internal_plugh() const {
  return plugh_;
}
inline int32_t ComplexOptionType3_ComplexOptionType5::plugh() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ComplexOptionType3.ComplexOptionType5.plugh)
  return _internal_plugh();
}
inline void ComplexOptionType3_ComplexOptionType5::_internal_set_plugh(int32_t value) {
  _has_bits_[0] |= 0x00000001u;
  plugh_ = value;
}
inline void ComplexOptionType3_ComplexOptionType5::set_plugh(int32_t value) {
  _internal_set_plugh(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.ComplexOptionType3.ComplexOptionType5.plugh)
}

// -------------------------------------------------------------------

// ComplexOptionType3

// optional int32 qux = 1;
inline bool ComplexOptionType3::_internal_has_qux() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ComplexOptionType3::has_qux() const {
  return _internal_has_qux();
}
inline void ComplexOptionType3::clear_qux() {
  qux_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline int32_t ComplexOptionType3::_internal_qux() const {
  return qux_;
}
inline int32_t ComplexOptionType3::qux() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ComplexOptionType3.qux)
  return _internal_qux();
}
inline void ComplexOptionType3::_internal_set_qux(int32_t value) {
  _has_bits_[0] |= 0x00000002u;
  qux_ = value;
}
inline void ComplexOptionType3::set_qux(int32_t value) {
  _internal_set_qux(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.ComplexOptionType3.qux)
}

// optional group ComplexOptionType5 = 2 { ... };
inline bool ComplexOptionType3::_internal_has_complexoptiontype5() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || complexoptiontype5_ != nullptr);
  return value;
}
inline bool ComplexOptionType3::has_complexoptiontype5() const {
  return _internal_has_complexoptiontype5();
}
inline void ComplexOptionType3::clear_complexoptiontype5() {
  if (complexoptiontype5_ != nullptr) complexoptiontype5_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5& ComplexOptionType3::_internal_complexoptiontype5() const {
  const ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* p = complexoptiontype5_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5&>(
      ::protobuf_unittest::_ComplexOptionType3_ComplexOptionType5_default_instance_);
}
inline const ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5& ComplexOptionType3::complexoptiontype5() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ComplexOptionType3.complexoptiontype5)
  return _internal_complexoptiontype5();
}
inline void ComplexOptionType3::unsafe_arena_set_allocated_complexoptiontype5(
    ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* complexoptiontype5) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(complexoptiontype5_);
  }
  complexoptiontype5_ = complexoptiontype5;
  if (complexoptiontype5) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.ComplexOptionType3.complexoptiontype5)
}
inline ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* ComplexOptionType3::release_complexoptiontype5() {
  _has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* temp = complexoptiontype5_;
  complexoptiontype5_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* ComplexOptionType3::unsafe_arena_release_complexoptiontype5() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.ComplexOptionType3.complexoptiontype5)
  _has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* temp = complexoptiontype5_;
  complexoptiontype5_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* ComplexOptionType3::_internal_mutable_complexoptiontype5() {
  _has_bits_[0] |= 0x00000001u;
  if (complexoptiontype5_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_unittest::ComplexOptionType3_ComplexOptionType5>(GetArenaForAllocation());
    complexoptiontype5_ = p;
  }
  return complexoptiontype5_;
}
inline ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* ComplexOptionType3::mutable_complexoptiontype5() {
  ::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* _msg = _internal_mutable_complexoptiontype5();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.ComplexOptionType3.complexoptiontype5)
  return _msg;
}
inline void ComplexOptionType3::set_allocated_complexoptiontype5(::protobuf_unittest::ComplexOptionType3_ComplexOptionType5* complexoptiontype5) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete complexoptiontype5_;
  }
  if (complexoptiontype5) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(complexoptiontype5);
    if (message_arena != submessage_arena) {
      complexoptiontype5 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, complexoptiontype5, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  complexoptiontype5_ = complexoptiontype5;
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.ComplexOptionType3.complexoptiontype5)
}

// -------------------------------------------------------------------

// ComplexOpt6

// optional int32 xyzzy = 7593951;
inline bool ComplexOpt6::_internal_has_xyzzy() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ComplexOpt6::has_xyzzy() const {
  return _internal_has_xyzzy();
}
inline void ComplexOpt6::clear_xyzzy() {
  xyzzy_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline int32_t ComplexOpt6::_internal_xyzzy() const {
  return xyzzy_;
}
inline int32_t ComplexOpt6::xyzzy() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.ComplexOpt6.xyzzy)
  return _internal_xyzzy();
}
inline void ComplexOpt6::_internal_set_xyzzy(int32_t value) {
  _has_bits_[0] |= 0x00000001u;
  xyzzy_ = value;
}
inline void ComplexOpt6::set_xyzzy(int32_t value) {
  _internal_set_xyzzy(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.ComplexOpt6.xyzzy)
}

// -------------------------------------------------------------------

// VariousComplexOptions

// -------------------------------------------------------------------

// AggregateMessageSet

// -------------------------------------------------------------------

// AggregateMessageSetElement

// optional string s = 1;
inline bool AggregateMessageSetElement::_internal_has_s() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AggregateMessageSetElement::has_s() const {
  return _internal_has_s();
}
inline void AggregateMessageSetElement::clear_s() {
  s_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AggregateMessageSetElement::s() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.AggregateMessageSetElement.s)
  return _internal_s();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void AggregateMessageSetElement::set_s(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 s_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_unittest.AggregateMessageSetElement.s)
}
inline std::string* AggregateMessageSetElement::mutable_s() {
  std::string* _s = _internal_mutable_s();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.AggregateMessageSetElement.s)
  return _s;
}
inline const std::string& AggregateMessageSetElement::_internal_s() const {
  return s_.Get();
}
inline void AggregateMessageSetElement::_internal_set_s(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  s_.Set(value, GetArenaForAllocation());
}
inline std::string* AggregateMessageSetElement::_internal_mutable_s() {
  _has_bits_[0] |= 0x00000001u;
  return s_.Mutable(GetArenaForAllocation());
}
inline std::string* AggregateMessageSetElement::release_s() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.AggregateMessageSetElement.s)
  if (!_internal_has_s()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = s_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (s_.IsDefault()) {
    s_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void AggregateMessageSetElement::set_allocated_s(std::string* s) {
  if (s != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  s_.SetAllocated(s, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (s_.IsDefault()) {
    s_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.AggregateMessageSetElement.s)
}

// -------------------------------------------------------------------

// Aggregate

// optional int32 i = 1;
inline bool Aggregate::_internal_has_i() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool Aggregate::has_i() const {
  return _internal_has_i();
}
inline void Aggregate::clear_i() {
  i_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline int32_t Aggregate::_internal_i() const {
  return i_;
}
inline int32_t Aggregate::i() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.Aggregate.i)
  return _internal_i();
}
inline void Aggregate::_internal_set_i(int32_t value) {
  _has_bits_[0] |= 0x00000020u;
  i_ = value;
}
inline void Aggregate::set_i(int32_t value) {
  _internal_set_i(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.Aggregate.i)
}

// optional string s = 2;
inline bool Aggregate::_internal_has_s() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Aggregate::has_s() const {
  return _internal_has_s();
}
inline void Aggregate::clear_s() {
  s_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Aggregate::s() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.Aggregate.s)
  return _internal_s();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Aggregate::set_s(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 s_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_unittest.Aggregate.s)
}
inline std::string* Aggregate::mutable_s() {
  std::string* _s = _internal_mutable_s();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.Aggregate.s)
  return _s;
}
inline const std::string& Aggregate::_internal_s() const {
  return s_.Get();
}
inline void Aggregate::_internal_set_s(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  s_.Set(value, GetArenaForAllocation());
}
inline std::string* Aggregate::_internal_mutable_s() {
  _has_bits_[0] |= 0x00000001u;
  return s_.Mutable(GetArenaForAllocation());
}
inline std::string* Aggregate::release_s() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.Aggregate.s)
  if (!_internal_has_s()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = s_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (s_.IsDefault()) {
    s_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void Aggregate::set_allocated_s(std::string* s) {
  if (s != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  s_.SetAllocated(s, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (s_.IsDefault()) {
    s_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.Aggregate.s)
}

// optional .protobuf_unittest.Aggregate sub = 3;
inline bool Aggregate::_internal_has_sub() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sub_ != nullptr);
  return value;
}
inline bool Aggregate::has_sub() const {
  return _internal_has_sub();
}
inline void Aggregate::clear_sub() {
  if (sub_ != nullptr) sub_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::protobuf_unittest::Aggregate& Aggregate::_internal_sub() const {
  const ::protobuf_unittest::Aggregate* p = sub_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::Aggregate&>(
      ::protobuf_unittest::_Aggregate_default_instance_);
}
inline const ::protobuf_unittest::Aggregate& Aggregate::sub() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.Aggregate.sub)
  return _internal_sub();
}
inline void Aggregate::unsafe_arena_set_allocated_sub(
    ::protobuf_unittest::Aggregate* sub) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sub_);
  }
  sub_ = sub;
  if (sub) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.Aggregate.sub)
}
inline ::protobuf_unittest::Aggregate* Aggregate::release_sub() {
  _has_bits_[0] &= ~0x00000002u;
  ::protobuf_unittest::Aggregate* temp = sub_;
  sub_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::protobuf_unittest::Aggregate* Aggregate::unsafe_arena_release_sub() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.Aggregate.sub)
  _has_bits_[0] &= ~0x00000002u;
  ::protobuf_unittest::Aggregate* temp = sub_;
  sub_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::Aggregate* Aggregate::_internal_mutable_sub() {
  _has_bits_[0] |= 0x00000002u;
  if (sub_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_unittest::Aggregate>(GetArenaForAllocation());
    sub_ = p;
  }
  return sub_;
}
inline ::protobuf_unittest::Aggregate* Aggregate::mutable_sub() {
  ::protobuf_unittest::Aggregate* _msg = _internal_mutable_sub();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.Aggregate.sub)
  return _msg;
}
inline void Aggregate::set_allocated_sub(::protobuf_unittest::Aggregate* sub) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete sub_;
  }
  if (sub) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(sub);
    if (message_arena != submessage_arena) {
      sub = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sub, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sub_ = sub;
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.Aggregate.sub)
}

// optional .google.protobuf.FileOptions file = 4;
inline bool Aggregate::_internal_has_file() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || file_ != nullptr);
  return value;
}
inline bool Aggregate::has_file() const {
  return _internal_has_file();
}
inline const ::PROTOBUF_NAMESPACE_ID::FileOptions& Aggregate::_internal_file() const {
  const ::PROTOBUF_NAMESPACE_ID::FileOptions* p = file_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FileOptions&>(
      ::PROTOBUF_NAMESPACE_ID::_FileOptions_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FileOptions& Aggregate::file() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.Aggregate.file)
  return _internal_file();
}
inline void Aggregate::unsafe_arena_set_allocated_file(
    ::PROTOBUF_NAMESPACE_ID::FileOptions* file) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(file_);
  }
  file_ = file;
  if (file) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.Aggregate.file)
}
inline ::PROTOBUF_NAMESPACE_ID::FileOptions* Aggregate::release_file() {
  _has_bits_[0] &= ~0x00000004u;
  ::PROTOBUF_NAMESPACE_ID::FileOptions* temp = file_;
  file_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FileOptions* Aggregate::unsafe_arena_release_file() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.Aggregate.file)
  _has_bits_[0] &= ~0x00000004u;
  ::PROTOBUF_NAMESPACE_ID::FileOptions* temp = file_;
  file_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FileOptions* Aggregate::_internal_mutable_file() {
  _has_bits_[0] |= 0x00000004u;
  if (file_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FileOptions>(GetArenaForAllocation());
    file_ = p;
  }
  return file_;
}
inline ::PROTOBUF_NAMESPACE_ID::FileOptions* Aggregate::mutable_file() {
  ::PROTOBUF_NAMESPACE_ID::FileOptions* _msg = _internal_mutable_file();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.Aggregate.file)
  return _msg;
}
inline void Aggregate::set_allocated_file(::PROTOBUF_NAMESPACE_ID::FileOptions* file) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(file_);
  }
  if (file) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(file));
    if (message_arena != submessage_arena) {
      file = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, file, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  file_ = file;
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.Aggregate.file)
}

// optional .protobuf_unittest.AggregateMessageSet mset = 5;
inline bool Aggregate::_internal_has_mset() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || mset_ != nullptr);
  return value;
}
inline bool Aggregate::has_mset() const {
  return _internal_has_mset();
}
inline void Aggregate::clear_mset() {
  if (mset_ != nullptr) mset_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::protobuf_unittest::AggregateMessageSet& Aggregate::_internal_mset() const {
  const ::protobuf_unittest::AggregateMessageSet* p = mset_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::AggregateMessageSet&>(
      ::protobuf_unittest::_AggregateMessageSet_default_instance_);
}
inline const ::protobuf_unittest::AggregateMessageSet& Aggregate::mset() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.Aggregate.mset)
  return _internal_mset();
}
inline void Aggregate::unsafe_arena_set_allocated_mset(
    ::protobuf_unittest::AggregateMessageSet* mset) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mset_);
  }
  mset_ = mset;
  if (mset) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.Aggregate.mset)
}
inline ::protobuf_unittest::AggregateMessageSet* Aggregate::release_mset() {
  _has_bits_[0] &= ~0x00000008u;
  ::protobuf_unittest::AggregateMessageSet* temp = mset_;
  mset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::protobuf_unittest::AggregateMessageSet* Aggregate::unsafe_arena_release_mset() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.Aggregate.mset)
  _has_bits_[0] &= ~0x00000008u;
  ::protobuf_unittest::AggregateMessageSet* temp = mset_;
  mset_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::AggregateMessageSet* Aggregate::_internal_mutable_mset() {
  _has_bits_[0] |= 0x00000008u;
  if (mset_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_unittest::AggregateMessageSet>(GetArenaForAllocation());
    mset_ = p;
  }
  return mset_;
}
inline ::protobuf_unittest::AggregateMessageSet* Aggregate::mutable_mset() {
  ::protobuf_unittest::AggregateMessageSet* _msg = _internal_mutable_mset();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.Aggregate.mset)
  return _msg;
}
inline void Aggregate::set_allocated_mset(::protobuf_unittest::AggregateMessageSet* mset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete mset_;
  }
  if (mset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(mset);
    if (message_arena != submessage_arena) {
      mset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mset, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  mset_ = mset;
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.Aggregate.mset)
}

// optional .google.protobuf.Any any = 6;
inline bool Aggregate::_internal_has_any() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || any_ != nullptr);
  return value;
}
inline bool Aggregate::has_any() const {
  return _internal_has_any();
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& Aggregate::_internal_any() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = any_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& Aggregate::any() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.Aggregate.any)
  return _internal_any();
}
inline void Aggregate::unsafe_arena_set_allocated_any(
    ::PROTOBUF_NAMESPACE_ID::Any* any) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(any_);
  }
  any_ = any;
  if (any) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.Aggregate.any)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* Aggregate::release_any() {
  _has_bits_[0] &= ~0x00000010u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = any_;
  any_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* Aggregate::unsafe_arena_release_any() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.Aggregate.any)
  _has_bits_[0] &= ~0x00000010u;
  ::PROTOBUF_NAMESPACE_ID::Any* temp = any_;
  any_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* Aggregate::_internal_mutable_any() {
  _has_bits_[0] |= 0x00000010u;
  if (any_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    any_ = p;
  }
  return any_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* Aggregate::mutable_any() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_any();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.Aggregate.any)
  return _msg;
}
inline void Aggregate::set_allocated_any(::PROTOBUF_NAMESPACE_ID::Any* any) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(any_);
  }
  if (any) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(any));
    if (message_arena != submessage_arena) {
      any = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, any, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  any_ = any;
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.Aggregate.any)
}

// -------------------------------------------------------------------

// AggregateMessage

// optional int32 fieldname = 1 [(.protobuf_unittest.fieldopt) = {
inline bool AggregateMessage::_internal_has_fieldname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AggregateMessage::has_fieldname() const {
  return _internal_has_fieldname();
}
inline void AggregateMessage::clear_fieldname() {
  fieldname_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline int32_t AggregateMessage::_internal_fieldname() const {
  return fieldname_;
}
inline int32_t AggregateMessage::fieldname() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.AggregateMessage.fieldname)
  return _internal_fieldname();
}
inline void AggregateMessage::_internal_set_fieldname(int32_t value) {
  _has_bits_[0] |= 0x00000001u;
  fieldname_ = value;
}
inline void AggregateMessage::set_fieldname(int32_t value) {
  _internal_set_fieldname(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.AggregateMessage.fieldname)
}

// -------------------------------------------------------------------

// NestedOptionType_NestedMessage

// optional int32 nested_field = 1 [(.protobuf_unittest.field_opt1) = 1002];
inline bool NestedOptionType_NestedMessage::_internal_has_nested_field() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool NestedOptionType_NestedMessage::has_nested_field() const {
  return _internal_has_nested_field();
}
inline void NestedOptionType_NestedMessage::clear_nested_field() {
  nested_field_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline int32_t NestedOptionType_NestedMessage::_internal_nested_field() const {
  return nested_field_;
}
inline int32_t NestedOptionType_NestedMessage::nested_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.NestedOptionType.NestedMessage.nested_field)
  return _internal_nested_field();
}
inline void NestedOptionType_NestedMessage::_internal_set_nested_field(int32_t value) {
  _has_bits_[0] |= 0x00000001u;
  nested_field_ = value;
}
inline void NestedOptionType_NestedMessage::set_nested_field(int32_t value) {
  _internal_set_nested_field(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.NestedOptionType.NestedMessage.nested_field)
}

// -------------------------------------------------------------------

// NestedOptionType

// -------------------------------------------------------------------

// OldOptionType

// required .protobuf_unittest.OldOptionType.TestEnum value = 1;
inline bool OldOptionType::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool OldOptionType::has_value() const {
  return _internal_has_value();
}
inline void OldOptionType::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::protobuf_unittest::OldOptionType_TestEnum OldOptionType::_internal_value() const {
  return static_cast< ::protobuf_unittest::OldOptionType_TestEnum >(value_);
}
inline ::protobuf_unittest::OldOptionType_TestEnum OldOptionType::value() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.OldOptionType.value)
  return _internal_value();
}
inline void OldOptionType::_internal_set_value(::protobuf_unittest::OldOptionType_TestEnum value) {
  assert(::protobuf_unittest::OldOptionType_TestEnum_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void OldOptionType::set_value(::protobuf_unittest::OldOptionType_TestEnum value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.OldOptionType.value)
}

// -------------------------------------------------------------------

// NewOptionType

// required .protobuf_unittest.NewOptionType.TestEnum value = 1;
inline bool NewOptionType::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool NewOptionType::has_value() const {
  return _internal_has_value();
}
inline void NewOptionType::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::protobuf_unittest::NewOptionType_TestEnum NewOptionType::_internal_value() const {
  return static_cast< ::protobuf_unittest::NewOptionType_TestEnum >(value_);
}
inline ::protobuf_unittest::NewOptionType_TestEnum NewOptionType::value() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.NewOptionType.value)
  return _internal_value();
}
inline void NewOptionType::_internal_set_value(::protobuf_unittest::NewOptionType_TestEnum value) {
  assert(::protobuf_unittest::NewOptionType_TestEnum_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void NewOptionType::set_value(::protobuf_unittest::NewOptionType_TestEnum value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.NewOptionType.value)
}

// -------------------------------------------------------------------

// TestMessageWithRequiredEnumOption

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_unittest

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::protobuf_unittest::TestMessageWithCustomOptions_AnEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_unittest::TestMessageWithCustomOptions_AnEnum>() {
  return ::protobuf_unittest::TestMessageWithCustomOptions_AnEnum_descriptor();
}
template <> struct is_proto_enum< ::protobuf_unittest::DummyMessageContainingEnum_TestEnumType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_unittest::DummyMessageContainingEnum_TestEnumType>() {
  return ::protobuf_unittest::DummyMessageContainingEnum_TestEnumType_descriptor();
}
template <> struct is_proto_enum< ::protobuf_unittest::NestedOptionType_NestedEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_unittest::NestedOptionType_NestedEnum>() {
  return ::protobuf_unittest::NestedOptionType_NestedEnum_descriptor();
}
template <> struct is_proto_enum< ::protobuf_unittest::OldOptionType_TestEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_unittest::OldOptionType_TestEnum>() {
  return ::protobuf_unittest::OldOptionType_TestEnum_descriptor();
}
template <> struct is_proto_enum< ::protobuf_unittest::NewOptionType_TestEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_unittest::NewOptionType_TestEnum>() {
  return ::protobuf_unittest::NewOptionType_TestEnum_descriptor();
}
template <> struct is_proto_enum< ::protobuf_unittest::MethodOpt1> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_unittest::MethodOpt1>() {
  return ::protobuf_unittest::MethodOpt1_descriptor();
}
template <> struct is_proto_enum< ::protobuf_unittest::AggregateEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_unittest::AggregateEnum>() {
  return ::protobuf_unittest::AggregateEnum_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5fcustom_5foptions_2eproto
