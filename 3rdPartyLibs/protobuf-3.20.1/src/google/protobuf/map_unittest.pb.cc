// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/map_unittest.proto

#include "google/protobuf/map_unittest.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace protobuf_unittest {
PROTOBUF_CONSTEXPR TestMap_MapInt32Int32Entry_DoNotUse::TestMap_MapInt32Int32Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapInt32Int32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapInt32Int32Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapInt32Int32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapInt32Int32Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapInt32Int32Entry_DoNotUseDefaultTypeInternal _TestMap_MapInt32Int32Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapInt64Int64Entry_DoNotUse::TestMap_MapInt64Int64Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapInt64Int64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapInt64Int64Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapInt64Int64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapInt64Int64Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapInt64Int64Entry_DoNotUseDefaultTypeInternal _TestMap_MapInt64Int64Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapUint32Uint32Entry_DoNotUse::TestMap_MapUint32Uint32Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapUint32Uint32Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal _TestMap_MapUint32Uint32Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapUint64Uint64Entry_DoNotUse::TestMap_MapUint64Uint64Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapUint64Uint64Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal _TestMap_MapUint64Uint64Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapSint32Sint32Entry_DoNotUse::TestMap_MapSint32Sint32Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapSint32Sint32Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal _TestMap_MapSint32Sint32Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapSint64Sint64Entry_DoNotUse::TestMap_MapSint64Sint64Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapSint64Sint64Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal _TestMap_MapSint64Sint64Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapFixed32Fixed32Entry_DoNotUse::TestMap_MapFixed32Fixed32Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapFixed32Fixed32Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal _TestMap_MapFixed32Fixed32Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapFixed64Fixed64Entry_DoNotUse::TestMap_MapFixed64Fixed64Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapFixed64Fixed64Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal _TestMap_MapFixed64Fixed64Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapSfixed32Sfixed32Entry_DoNotUse::TestMap_MapSfixed32Sfixed32Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapSfixed32Sfixed32Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal _TestMap_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapSfixed64Sfixed64Entry_DoNotUse::TestMap_MapSfixed64Sfixed64Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapSfixed64Sfixed64Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal _TestMap_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapInt32FloatEntry_DoNotUse::TestMap_MapInt32FloatEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapInt32FloatEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapInt32FloatEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapInt32FloatEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapInt32FloatEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapInt32FloatEntry_DoNotUseDefaultTypeInternal _TestMap_MapInt32FloatEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapInt32DoubleEntry_DoNotUse::TestMap_MapInt32DoubleEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapInt32DoubleEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal _TestMap_MapInt32DoubleEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapBoolBoolEntry_DoNotUse::TestMap_MapBoolBoolEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapBoolBoolEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapBoolBoolEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapBoolBoolEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapBoolBoolEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapBoolBoolEntry_DoNotUseDefaultTypeInternal _TestMap_MapBoolBoolEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapStringStringEntry_DoNotUse::TestMap_MapStringStringEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapStringStringEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapStringStringEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapStringStringEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapStringStringEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapStringStringEntry_DoNotUseDefaultTypeInternal _TestMap_MapStringStringEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapInt32BytesEntry_DoNotUse::TestMap_MapInt32BytesEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapInt32BytesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapInt32BytesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapInt32BytesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapInt32BytesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapInt32BytesEntry_DoNotUseDefaultTypeInternal _TestMap_MapInt32BytesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapInt32EnumEntry_DoNotUse::TestMap_MapInt32EnumEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapInt32EnumEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapInt32EnumEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapInt32EnumEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapInt32EnumEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapInt32EnumEntry_DoNotUseDefaultTypeInternal _TestMap_MapInt32EnumEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapInt32ForeignMessageEntry_DoNotUse::TestMap_MapInt32ForeignMessageEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapInt32ForeignMessageEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal _TestMap_MapInt32ForeignMessageEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapStringForeignMessageEntry_DoNotUse::TestMap_MapStringForeignMessageEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapStringForeignMessageEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapStringForeignMessageEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapStringForeignMessageEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapStringForeignMessageEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapStringForeignMessageEntry_DoNotUseDefaultTypeInternal _TestMap_MapStringForeignMessageEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap_MapInt32AllTypesEntry_DoNotUse::TestMap_MapInt32AllTypesEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMap_MapInt32AllTypesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMap_MapInt32AllTypesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMap_MapInt32AllTypesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMap_MapInt32AllTypesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMap_MapInt32AllTypesEntry_DoNotUseDefaultTypeInternal _TestMap_MapInt32AllTypesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMap::TestMap(
    ::_pbi::ConstantInitialized)
  : map_int32_int32_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_int64_int64_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_uint32_uint32_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_uint64_uint64_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_sint32_sint32_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_sint64_sint64_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_fixed32_fixed32_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_fixed64_fixed64_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_sfixed32_sfixed32_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_sfixed64_sfixed64_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_int32_float_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_int32_double_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_bool_bool_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_string_string_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_int32_bytes_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_int32_enum_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_int32_foreign_message_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_string_foreign_message_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_int32_all_types_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct TestMapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapDefaultTypeInternal() {}
  union {
    TestMap _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapDefaultTypeInternal _TestMap_default_instance_;
PROTOBUF_CONSTEXPR TestMapSubmessage::TestMapSubmessage(
    ::_pbi::ConstantInitialized)
  : test_map_(nullptr){}
struct TestMapSubmessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapSubmessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapSubmessageDefaultTypeInternal() {}
  union {
    TestMapSubmessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapSubmessageDefaultTypeInternal _TestMapSubmessage_default_instance_;
PROTOBUF_CONSTEXPR TestMessageMap_MapInt32MessageEntry_DoNotUse::TestMessageMap_MapInt32MessageEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestMessageMap_MapInt32MessageEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMessageMap_MapInt32MessageEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMessageMap_MapInt32MessageEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMessageMap_MapInt32MessageEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMessageMap_MapInt32MessageEntry_DoNotUseDefaultTypeInternal _TestMessageMap_MapInt32MessageEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestMessageMap::TestMessageMap(
    ::_pbi::ConstantInitialized)
  : map_int32_message_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct TestMessageMapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMessageMapDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMessageMapDefaultTypeInternal() {}
  union {
    TestMessageMap _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMessageMapDefaultTypeInternal _TestMessageMap_default_instance_;
PROTOBUF_CONSTEXPR TestSameTypeMap_Map1Entry_DoNotUse::TestSameTypeMap_Map1Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestSameTypeMap_Map1Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestSameTypeMap_Map1Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestSameTypeMap_Map1Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestSameTypeMap_Map1Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestSameTypeMap_Map1Entry_DoNotUseDefaultTypeInternal _TestSameTypeMap_Map1Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestSameTypeMap_Map2Entry_DoNotUse::TestSameTypeMap_Map2Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestSameTypeMap_Map2Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestSameTypeMap_Map2Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestSameTypeMap_Map2Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestSameTypeMap_Map2Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestSameTypeMap_Map2Entry_DoNotUseDefaultTypeInternal _TestSameTypeMap_Map2Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestSameTypeMap::TestSameTypeMap(
    ::_pbi::ConstantInitialized)
  : map1_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map2_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct TestSameTypeMapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestSameTypeMapDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestSameTypeMapDefaultTypeInternal() {}
  union {
    TestSameTypeMap _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestSameTypeMapDefaultTypeInternal _TestSameTypeMap_default_instance_;
PROTOBUF_CONSTEXPR TestRequiredMessageMap_MapFieldEntry_DoNotUse::TestRequiredMessageMap_MapFieldEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestRequiredMessageMap_MapFieldEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRequiredMessageMap_MapFieldEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRequiredMessageMap_MapFieldEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestRequiredMessageMap_MapFieldEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRequiredMessageMap_MapFieldEntry_DoNotUseDefaultTypeInternal _TestRequiredMessageMap_MapFieldEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestRequiredMessageMap::TestRequiredMessageMap(
    ::_pbi::ConstantInitialized)
  : map_field_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct TestRequiredMessageMapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRequiredMessageMapDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRequiredMessageMapDefaultTypeInternal() {}
  union {
    TestRequiredMessageMap _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRequiredMessageMapDefaultTypeInternal _TestRequiredMessageMap_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapInt32Int32Entry_DoNotUse::TestArenaMap_MapInt32Int32Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapInt32Int32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapInt32Int32Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapInt32Int32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapInt32Int32Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapInt32Int32Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapInt32Int32Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapInt64Int64Entry_DoNotUse::TestArenaMap_MapInt64Int64Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapInt64Int64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapInt64Int64Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapInt64Int64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapInt64Int64Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapInt64Int64Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapInt64Int64Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapUint32Uint32Entry_DoNotUse::TestArenaMap_MapUint32Uint32Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapUint32Uint32Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapUint32Uint32Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapUint64Uint64Entry_DoNotUse::TestArenaMap_MapUint64Uint64Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapUint64Uint64Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapUint64Uint64Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapSint32Sint32Entry_DoNotUse::TestArenaMap_MapSint32Sint32Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapSint32Sint32Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapSint32Sint32Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapSint64Sint64Entry_DoNotUse::TestArenaMap_MapSint64Sint64Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapSint64Sint64Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapSint64Sint64Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapFixed32Fixed32Entry_DoNotUse::TestArenaMap_MapFixed32Fixed32Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapFixed32Fixed32Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapFixed32Fixed32Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapFixed64Fixed64Entry_DoNotUse::TestArenaMap_MapFixed64Fixed64Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapFixed64Fixed64Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapFixed64Fixed64Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse::TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse::TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapInt32FloatEntry_DoNotUse::TestArenaMap_MapInt32FloatEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapInt32FloatEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapInt32FloatEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapInt32FloatEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapInt32FloatEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapInt32FloatEntry_DoNotUseDefaultTypeInternal _TestArenaMap_MapInt32FloatEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapInt32DoubleEntry_DoNotUse::TestArenaMap_MapInt32DoubleEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapInt32DoubleEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal _TestArenaMap_MapInt32DoubleEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapBoolBoolEntry_DoNotUse::TestArenaMap_MapBoolBoolEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapBoolBoolEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapBoolBoolEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapBoolBoolEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapBoolBoolEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapBoolBoolEntry_DoNotUseDefaultTypeInternal _TestArenaMap_MapBoolBoolEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapStringStringEntry_DoNotUse::TestArenaMap_MapStringStringEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapStringStringEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapStringStringEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapStringStringEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapStringStringEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapStringStringEntry_DoNotUseDefaultTypeInternal _TestArenaMap_MapStringStringEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapInt32BytesEntry_DoNotUse::TestArenaMap_MapInt32BytesEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapInt32BytesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapInt32BytesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapInt32BytesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapInt32BytesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapInt32BytesEntry_DoNotUseDefaultTypeInternal _TestArenaMap_MapInt32BytesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapInt32EnumEntry_DoNotUse::TestArenaMap_MapInt32EnumEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapInt32EnumEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapInt32EnumEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapInt32EnumEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapInt32EnumEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapInt32EnumEntry_DoNotUseDefaultTypeInternal _TestArenaMap_MapInt32EnumEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse::TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestArenaMap_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMap_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMap_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMap_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal _TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestArenaMap::TestArenaMap(
    ::_pbi::ConstantInitialized)
  : map_int32_int32_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_int64_int64_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_uint32_uint32_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_uint64_uint64_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_sint32_sint32_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_sint64_sint64_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_fixed32_fixed32_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_fixed64_fixed64_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_sfixed32_sfixed32_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_sfixed64_sfixed64_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_int32_float_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_int32_double_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_bool_bool_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_string_string_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_int32_bytes_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_int32_enum_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , map_int32_foreign_message_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct TestArenaMapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapDefaultTypeInternal() {}
  union {
    TestArenaMap _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapDefaultTypeInternal _TestArenaMap_default_instance_;
PROTOBUF_CONSTEXPR MessageContainingEnumCalledType_TypeEntry_DoNotUse::MessageContainingEnumCalledType_TypeEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct MessageContainingEnumCalledType_TypeEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageContainingEnumCalledType_TypeEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageContainingEnumCalledType_TypeEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MessageContainingEnumCalledType_TypeEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageContainingEnumCalledType_TypeEntry_DoNotUseDefaultTypeInternal _MessageContainingEnumCalledType_TypeEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR MessageContainingEnumCalledType::MessageContainingEnumCalledType(
    ::_pbi::ConstantInitialized)
  : type_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct MessageContainingEnumCalledTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageContainingEnumCalledTypeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageContainingEnumCalledTypeDefaultTypeInternal() {}
  union {
    MessageContainingEnumCalledType _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageContainingEnumCalledTypeDefaultTypeInternal _MessageContainingEnumCalledType_default_instance_;
PROTOBUF_CONSTEXPR MessageContainingMapCalledEntry_EntryEntry_DoNotUse::MessageContainingMapCalledEntry_EntryEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct MessageContainingMapCalledEntry_EntryEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageContainingMapCalledEntry_EntryEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageContainingMapCalledEntry_EntryEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MessageContainingMapCalledEntry_EntryEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageContainingMapCalledEntry_EntryEntry_DoNotUseDefaultTypeInternal _MessageContainingMapCalledEntry_EntryEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR MessageContainingMapCalledEntry::MessageContainingMapCalledEntry(
    ::_pbi::ConstantInitialized)
  : entry_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct MessageContainingMapCalledEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageContainingMapCalledEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageContainingMapCalledEntryDefaultTypeInternal() {}
  union {
    MessageContainingMapCalledEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageContainingMapCalledEntryDefaultTypeInternal _MessageContainingMapCalledEntry_default_instance_;
PROTOBUF_CONSTEXPR TestRecursiveMapMessage_AEntry_DoNotUse::TestRecursiveMapMessage_AEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct TestRecursiveMapMessage_AEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRecursiveMapMessage_AEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRecursiveMapMessage_AEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestRecursiveMapMessage_AEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRecursiveMapMessage_AEntry_DoNotUseDefaultTypeInternal _TestRecursiveMapMessage_AEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestRecursiveMapMessage::TestRecursiveMapMessage(
    ::_pbi::ConstantInitialized)
  : a_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct TestRecursiveMapMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRecursiveMapMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRecursiveMapMessageDefaultTypeInternal() {}
  union {
    TestRecursiveMapMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRecursiveMapMessageDefaultTypeInternal _TestRecursiveMapMessage_default_instance_;
}  // namespace protobuf_unittest
static ::_pb::Metadata file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[52];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_google_2fprotobuf_2fmap_5funittest_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fprotobuf_2fmap_5funittest_2eproto = nullptr;

const uint32_t TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32Int32Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32Int32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32Int32Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32Int32Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt64Int64Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt64Int64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt64Int64Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt64Int64Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapUint32Uint32Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapUint32Uint32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapUint32Uint32Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapUint32Uint32Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapUint64Uint64Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapUint64Uint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapUint64Uint64Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapUint64Uint64Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSint32Sint32Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSint32Sint32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSint32Sint32Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSint32Sint32Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSint64Sint64Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSint64Sint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSint64Sint64Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSint64Sint64Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapFixed32Fixed32Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapFixed32Fixed32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapFixed32Fixed32Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapFixed32Fixed32Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapFixed64Fixed64Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapFixed64Fixed64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapFixed64Fixed64Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapFixed64Fixed64Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSfixed32Sfixed32Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSfixed32Sfixed32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSfixed32Sfixed32Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSfixed32Sfixed32Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSfixed64Sfixed64Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSfixed64Sfixed64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSfixed64Sfixed64Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapSfixed64Sfixed64Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32FloatEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32FloatEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32FloatEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32FloatEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32DoubleEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32DoubleEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32DoubleEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32DoubleEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapBoolBoolEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapBoolBoolEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapBoolBoolEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapBoolBoolEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapStringStringEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapStringStringEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapStringStringEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapStringStringEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32BytesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32BytesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32BytesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32BytesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32EnumEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32EnumEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32EnumEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32EnumEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32ForeignMessageEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32ForeignMessageEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32ForeignMessageEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32ForeignMessageEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapStringForeignMessageEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapStringForeignMessageEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapStringForeignMessageEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapStringForeignMessageEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32AllTypesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32AllTypesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32AllTypesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap_MapInt32AllTypesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_int32_int32_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_int64_int64_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_uint32_uint32_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_uint64_uint64_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_sint32_sint32_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_sint64_sint64_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_fixed32_fixed32_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_fixed64_fixed64_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_sfixed32_sfixed32_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_sfixed64_sfixed64_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_int32_float_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_int32_double_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_bool_bool_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_string_string_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_int32_bytes_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_int32_enum_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_int32_foreign_message_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_string_foreign_message_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMap, map_int32_all_types_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMapSubmessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMapSubmessage, test_map_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageMap_MapInt32MessageEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageMap_MapInt32MessageEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageMap_MapInt32MessageEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageMap_MapInt32MessageEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageMap, map_int32_message_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestSameTypeMap_Map1Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestSameTypeMap_Map1Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestSameTypeMap_Map1Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestSameTypeMap_Map1Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestSameTypeMap_Map2Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestSameTypeMap_Map2Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestSameTypeMap_Map2Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestSameTypeMap_Map2Entry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestSameTypeMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestSameTypeMap, map1_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestSameTypeMap, map2_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredMessageMap_MapFieldEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredMessageMap_MapFieldEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredMessageMap_MapFieldEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredMessageMap_MapFieldEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredMessageMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredMessageMap, map_field_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32Int32Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32Int32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32Int32Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32Int32Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt64Int64Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt64Int64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt64Int64Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt64Int64Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapUint32Uint32Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapUint32Uint32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapUint32Uint32Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapUint32Uint32Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapUint64Uint64Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapUint64Uint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapUint64Uint64Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapUint64Uint64Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSint32Sint32Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSint32Sint32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSint32Sint32Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSint32Sint32Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSint64Sint64Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSint64Sint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSint64Sint64Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSint64Sint64Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapFixed32Fixed32Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapFixed32Fixed32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapFixed32Fixed32Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapFixed32Fixed32Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapFixed64Fixed64Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapFixed64Fixed64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapFixed64Fixed64Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapFixed64Fixed64Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32FloatEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32FloatEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32FloatEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32FloatEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32DoubleEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32DoubleEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32DoubleEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32DoubleEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapBoolBoolEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapBoolBoolEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapBoolBoolEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapBoolBoolEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapStringStringEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapStringStringEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapStringStringEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapStringStringEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32BytesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32BytesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32BytesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32BytesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32EnumEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32EnumEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32EnumEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32EnumEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_int32_int32_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_int64_int64_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_uint32_uint32_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_uint64_uint64_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_sint32_sint32_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_sint64_sint64_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_fixed32_fixed32_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_fixed64_fixed64_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_sfixed32_sfixed32_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_sfixed64_sfixed64_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_int32_float_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_int32_double_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_bool_bool_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_string_string_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_int32_bytes_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_int32_enum_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestArenaMap, map_int32_foreign_message_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MessageContainingEnumCalledType_TypeEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MessageContainingEnumCalledType_TypeEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MessageContainingEnumCalledType_TypeEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MessageContainingEnumCalledType_TypeEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MessageContainingEnumCalledType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MessageContainingEnumCalledType, type_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MessageContainingMapCalledEntry_EntryEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MessageContainingMapCalledEntry_EntryEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MessageContainingMapCalledEntry_EntryEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MessageContainingMapCalledEntry_EntryEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MessageContainingMapCalledEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MessageContainingMapCalledEntry, entry_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRecursiveMapMessage_AEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRecursiveMapMessage_AEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRecursiveMapMessage_AEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRecursiveMapMessage_AEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRecursiveMapMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRecursiveMapMessage, a_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::protobuf_unittest::TestMap_MapInt32Int32Entry_DoNotUse)},
  { 10, 18, -1, sizeof(::protobuf_unittest::TestMap_MapInt64Int64Entry_DoNotUse)},
  { 20, 28, -1, sizeof(::protobuf_unittest::TestMap_MapUint32Uint32Entry_DoNotUse)},
  { 30, 38, -1, sizeof(::protobuf_unittest::TestMap_MapUint64Uint64Entry_DoNotUse)},
  { 40, 48, -1, sizeof(::protobuf_unittest::TestMap_MapSint32Sint32Entry_DoNotUse)},
  { 50, 58, -1, sizeof(::protobuf_unittest::TestMap_MapSint64Sint64Entry_DoNotUse)},
  { 60, 68, -1, sizeof(::protobuf_unittest::TestMap_MapFixed32Fixed32Entry_DoNotUse)},
  { 70, 78, -1, sizeof(::protobuf_unittest::TestMap_MapFixed64Fixed64Entry_DoNotUse)},
  { 80, 88, -1, sizeof(::protobuf_unittest::TestMap_MapSfixed32Sfixed32Entry_DoNotUse)},
  { 90, 98, -1, sizeof(::protobuf_unittest::TestMap_MapSfixed64Sfixed64Entry_DoNotUse)},
  { 100, 108, -1, sizeof(::protobuf_unittest::TestMap_MapInt32FloatEntry_DoNotUse)},
  { 110, 118, -1, sizeof(::protobuf_unittest::TestMap_MapInt32DoubleEntry_DoNotUse)},
  { 120, 128, -1, sizeof(::protobuf_unittest::TestMap_MapBoolBoolEntry_DoNotUse)},
  { 130, 138, -1, sizeof(::protobuf_unittest::TestMap_MapStringStringEntry_DoNotUse)},
  { 140, 148, -1, sizeof(::protobuf_unittest::TestMap_MapInt32BytesEntry_DoNotUse)},
  { 150, 158, -1, sizeof(::protobuf_unittest::TestMap_MapInt32EnumEntry_DoNotUse)},
  { 160, 168, -1, sizeof(::protobuf_unittest::TestMap_MapInt32ForeignMessageEntry_DoNotUse)},
  { 170, 178, -1, sizeof(::protobuf_unittest::TestMap_MapStringForeignMessageEntry_DoNotUse)},
  { 180, 188, -1, sizeof(::protobuf_unittest::TestMap_MapInt32AllTypesEntry_DoNotUse)},
  { 190, -1, -1, sizeof(::protobuf_unittest::TestMap)},
  { 215, -1, -1, sizeof(::protobuf_unittest::TestMapSubmessage)},
  { 222, 230, -1, sizeof(::protobuf_unittest::TestMessageMap_MapInt32MessageEntry_DoNotUse)},
  { 232, -1, -1, sizeof(::protobuf_unittest::TestMessageMap)},
  { 239, 247, -1, sizeof(::protobuf_unittest::TestSameTypeMap_Map1Entry_DoNotUse)},
  { 249, 257, -1, sizeof(::protobuf_unittest::TestSameTypeMap_Map2Entry_DoNotUse)},
  { 259, -1, -1, sizeof(::protobuf_unittest::TestSameTypeMap)},
  { 267, 275, -1, sizeof(::protobuf_unittest::TestRequiredMessageMap_MapFieldEntry_DoNotUse)},
  { 277, -1, -1, sizeof(::protobuf_unittest::TestRequiredMessageMap)},
  { 284, 292, -1, sizeof(::protobuf_unittest::TestArenaMap_MapInt32Int32Entry_DoNotUse)},
  { 294, 302, -1, sizeof(::protobuf_unittest::TestArenaMap_MapInt64Int64Entry_DoNotUse)},
  { 304, 312, -1, sizeof(::protobuf_unittest::TestArenaMap_MapUint32Uint32Entry_DoNotUse)},
  { 314, 322, -1, sizeof(::protobuf_unittest::TestArenaMap_MapUint64Uint64Entry_DoNotUse)},
  { 324, 332, -1, sizeof(::protobuf_unittest::TestArenaMap_MapSint32Sint32Entry_DoNotUse)},
  { 334, 342, -1, sizeof(::protobuf_unittest::TestArenaMap_MapSint64Sint64Entry_DoNotUse)},
  { 344, 352, -1, sizeof(::protobuf_unittest::TestArenaMap_MapFixed32Fixed32Entry_DoNotUse)},
  { 354, 362, -1, sizeof(::protobuf_unittest::TestArenaMap_MapFixed64Fixed64Entry_DoNotUse)},
  { 364, 372, -1, sizeof(::protobuf_unittest::TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse)},
  { 374, 382, -1, sizeof(::protobuf_unittest::TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse)},
  { 384, 392, -1, sizeof(::protobuf_unittest::TestArenaMap_MapInt32FloatEntry_DoNotUse)},
  { 394, 402, -1, sizeof(::protobuf_unittest::TestArenaMap_MapInt32DoubleEntry_DoNotUse)},
  { 404, 412, -1, sizeof(::protobuf_unittest::TestArenaMap_MapBoolBoolEntry_DoNotUse)},
  { 414, 422, -1, sizeof(::protobuf_unittest::TestArenaMap_MapStringStringEntry_DoNotUse)},
  { 424, 432, -1, sizeof(::protobuf_unittest::TestArenaMap_MapInt32BytesEntry_DoNotUse)},
  { 434, 442, -1, sizeof(::protobuf_unittest::TestArenaMap_MapInt32EnumEntry_DoNotUse)},
  { 444, 452, -1, sizeof(::protobuf_unittest::TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse)},
  { 454, -1, -1, sizeof(::protobuf_unittest::TestArenaMap)},
  { 477, 485, -1, sizeof(::protobuf_unittest::MessageContainingEnumCalledType_TypeEntry_DoNotUse)},
  { 487, -1, -1, sizeof(::protobuf_unittest::MessageContainingEnumCalledType)},
  { 494, 502, -1, sizeof(::protobuf_unittest::MessageContainingMapCalledEntry_EntryEntry_DoNotUse)},
  { 504, -1, -1, sizeof(::protobuf_unittest::MessageContainingMapCalledEntry)},
  { 511, 519, -1, sizeof(::protobuf_unittest::TestRecursiveMapMessage_AEntry_DoNotUse)},
  { 521, -1, -1, sizeof(::protobuf_unittest::TestRecursiveMapMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::protobuf_unittest::_TestMap_MapInt32Int32Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapInt64Int64Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapUint32Uint32Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapUint64Uint64Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapSint32Sint32Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapSint64Sint64Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapFixed32Fixed32Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapFixed64Fixed64Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapInt32FloatEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapInt32DoubleEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapBoolBoolEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapStringStringEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapInt32BytesEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapInt32EnumEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapInt32ForeignMessageEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapStringForeignMessageEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_MapInt32AllTypesEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMap_default_instance_._instance,
  &::protobuf_unittest::_TestMapSubmessage_default_instance_._instance,
  &::protobuf_unittest::_TestMessageMap_MapInt32MessageEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestMessageMap_default_instance_._instance,
  &::protobuf_unittest::_TestSameTypeMap_Map1Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestSameTypeMap_Map2Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestSameTypeMap_default_instance_._instance,
  &::protobuf_unittest::_TestRequiredMessageMap_MapFieldEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestRequiredMessageMap_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapInt32Int32Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapInt64Int64Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapUint32Uint32Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapUint64Uint64Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapSint32Sint32Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapSint64Sint64Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapFixed32Fixed32Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapFixed64Fixed64Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapInt32FloatEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapInt32DoubleEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapBoolBoolEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapStringStringEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapInt32BytesEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapInt32EnumEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestArenaMap_default_instance_._instance,
  &::protobuf_unittest::_MessageContainingEnumCalledType_TypeEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_MessageContainingEnumCalledType_default_instance_._instance,
  &::protobuf_unittest::_MessageContainingMapCalledEntry_EntryEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_MessageContainingMapCalledEntry_default_instance_._instance,
  &::protobuf_unittest::_TestRecursiveMapMessage_AEntry_DoNotUse_default_instance_._instance,
  &::protobuf_unittest::_TestRecursiveMapMessage_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fprotobuf_2fmap_5funittest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"google/protobuf/map_unittest.proto\022\021pr"
  "otobuf_unittest\032\036google/protobuf/unittes"
  "t.proto\"\377\024\n\007TestMap\022F\n\017map_int32_int32\030\001"
  " \003(\0132-.protobuf_unittest.TestMap.MapInt3"
  "2Int32Entry\022F\n\017map_int64_int64\030\002 \003(\0132-.p"
  "rotobuf_unittest.TestMap.MapInt64Int64En"
  "try\022J\n\021map_uint32_uint32\030\003 \003(\0132/.protobu"
  "f_unittest.TestMap.MapUint32Uint32Entry\022"
  "J\n\021map_uint64_uint64\030\004 \003(\0132/.protobuf_un"
  "ittest.TestMap.MapUint64Uint64Entry\022J\n\021m"
  "ap_sint32_sint32\030\005 \003(\0132/.protobuf_unitte"
  "st.TestMap.MapSint32Sint32Entry\022J\n\021map_s"
  "int64_sint64\030\006 \003(\0132/.protobuf_unittest.T"
  "estMap.MapSint64Sint64Entry\022N\n\023map_fixed"
  "32_fixed32\030\007 \003(\01321.protobuf_unittest.Tes"
  "tMap.MapFixed32Fixed32Entry\022N\n\023map_fixed"
  "64_fixed64\030\010 \003(\01321.protobuf_unittest.Tes"
  "tMap.MapFixed64Fixed64Entry\022R\n\025map_sfixe"
  "d32_sfixed32\030\t \003(\01323.protobuf_unittest.T"
  "estMap.MapSfixed32Sfixed32Entry\022R\n\025map_s"
  "fixed64_sfixed64\030\n \003(\01323.protobuf_unitte"
  "st.TestMap.MapSfixed64Sfixed64Entry\022F\n\017m"
  "ap_int32_float\030\013 \003(\0132-.protobuf_unittest"
  ".TestMap.MapInt32FloatEntry\022H\n\020map_int32"
  "_double\030\014 \003(\0132..protobuf_unittest.TestMa"
  "p.MapInt32DoubleEntry\022B\n\rmap_bool_bool\030\r"
  " \003(\0132+.protobuf_unittest.TestMap.MapBool"
  "BoolEntry\022J\n\021map_string_string\030\016 \003(\0132/.p"
  "rotobuf_unittest.TestMap.MapStringString"
  "Entry\022F\n\017map_int32_bytes\030\017 \003(\0132-.protobu"
  "f_unittest.TestMap.MapInt32BytesEntry\022D\n"
  "\016map_int32_enum\030\020 \003(\0132,.protobuf_unittes"
  "t.TestMap.MapInt32EnumEntry\022Y\n\031map_int32"
  "_foreign_message\030\021 \003(\01326.protobuf_unitte"
  "st.TestMap.MapInt32ForeignMessageEntry\022["
  "\n\032map_string_foreign_message\030\022 \003(\01327.pro"
  "tobuf_unittest.TestMap.MapStringForeignM"
  "essageEntry\022M\n\023map_int32_all_types\030\023 \003(\013"
  "20.protobuf_unittest.TestMap.MapInt32All"
  "TypesEntry\0324\n\022MapInt32Int32Entry\022\013\n\003key\030"
  "\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\0324\n\022MapInt64Int6"
  "4Entry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\003:\0028\001\0326"
  "\n\024MapUint32Uint32Entry\022\013\n\003key\030\001 \001(\r\022\r\n\005v"
  "alue\030\002 \001(\r:\0028\001\0326\n\024MapUint64Uint64Entry\022\013"
  "\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\004:\0028\001\0326\n\024MapSin"
  "t32Sint32Entry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001"
  "(\021:\0028\001\0326\n\024MapSint64Sint64Entry\022\013\n\003key\030\001 "
  "\001(\022\022\r\n\005value\030\002 \001(\022:\0028\001\0328\n\026MapFixed32Fixe"
  "d32Entry\022\013\n\003key\030\001 \001(\007\022\r\n\005value\030\002 \001(\007:\0028\001"
  "\0328\n\026MapFixed64Fixed64Entry\022\013\n\003key\030\001 \001(\006\022"
  "\r\n\005value\030\002 \001(\006:\0028\001\032:\n\030MapSfixed32Sfixed3"
  "2Entry\022\013\n\003key\030\001 \001(\017\022\r\n\005value\030\002 \001(\017:\0028\001\032:"
  "\n\030MapSfixed64Sfixed64Entry\022\013\n\003key\030\001 \001(\020\022"
  "\r\n\005value\030\002 \001(\020:\0028\001\0324\n\022MapInt32FloatEntry"
  "\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\002:\0028\001\0325\n\023MapI"
  "nt32DoubleEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 "
  "\001(\001:\0028\001\0322\n\020MapBoolBoolEntry\022\013\n\003key\030\001 \001(\010"
  "\022\r\n\005value\030\002 \001(\010:\0028\001\0326\n\024MapStringStringEn"
  "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0324\n\022M"
  "apInt32BytesEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030"
  "\002 \001(\014:\0028\001\032O\n\021MapInt32EnumEntry\022\013\n\003key\030\001 "
  "\001(\005\022)\n\005value\030\002 \001(\0162\032.protobuf_unittest.M"
  "apEnum:\0028\001\032`\n\033MapInt32ForeignMessageEntr"
  "y\022\013\n\003key\030\001 \001(\005\0220\n\005value\030\002 \001(\0132!.protobuf"
  "_unittest.ForeignMessage:\0028\001\032a\n\034MapStrin"
  "gForeignMessageEntry\022\013\n\003key\030\001 \001(\t\0220\n\005val"
  "ue\030\002 \001(\0132!.protobuf_unittest.ForeignMess"
  "age:\0028\001\032X\n\025MapInt32AllTypesEntry\022\013\n\003key\030"
  "\001 \001(\005\022.\n\005value\030\002 \001(\0132\037.protobuf_unittest"
  ".TestAllTypes:\0028\001\"A\n\021TestMapSubmessage\022,"
  "\n\010test_map\030\001 \001(\0132\032.protobuf_unittest.Tes"
  "tMap\"\274\001\n\016TestMessageMap\022Q\n\021map_int32_mes"
  "sage\030\001 \003(\01326.protobuf_unittest.TestMessa"
  "geMap.MapInt32MessageEntry\032W\n\024MapInt32Me"
  "ssageEntry\022\013\n\003key\030\001 \001(\005\022.\n\005value\030\002 \001(\0132\037"
  ".protobuf_unittest.TestAllTypes:\0028\001\"\343\001\n\017"
  "TestSameTypeMap\022:\n\004map1\030\001 \003(\0132,.protobuf"
  "_unittest.TestSameTypeMap.Map1Entry\022:\n\004m"
  "ap2\030\002 \003(\0132,.protobuf_unittest.TestSameTy"
  "peMap.Map2Entry\032+\n\tMap1Entry\022\013\n\003key\030\001 \001("
  "\005\022\r\n\005value\030\002 \001(\005:\0028\001\032+\n\tMap2Entry\022\013\n\003key"
  "\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\"\266\001\n\026TestRequir"
  "edMessageMap\022J\n\tmap_field\030\001 \003(\01327.protob"
  "uf_unittest.TestRequiredMessageMap.MapFi"
  "eldEntry\032P\n\rMapFieldEntry\022\013\n\003key\030\001 \001(\005\022."
  "\n\005value\030\002 \001(\0132\037.protobuf_unittest.TestRe"
  "quired:\0028\001\"\360\022\n\014TestArenaMap\022K\n\017map_int32"
  "_int32\030\001 \003(\01322.protobuf_unittest.TestAre"
  "naMap.MapInt32Int32Entry\022K\n\017map_int64_in"
  "t64\030\002 \003(\01322.protobuf_unittest.TestArenaM"
  "ap.MapInt64Int64Entry\022O\n\021map_uint32_uint"
  "32\030\003 \003(\01324.protobuf_unittest.TestArenaMa"
  "p.MapUint32Uint32Entry\022O\n\021map_uint64_uin"
  "t64\030\004 \003(\01324.protobuf_unittest.TestArenaM"
  "ap.MapUint64Uint64Entry\022O\n\021map_sint32_si"
  "nt32\030\005 \003(\01324.protobuf_unittest.TestArena"
  "Map.MapSint32Sint32Entry\022O\n\021map_sint64_s"
  "int64\030\006 \003(\01324.protobuf_unittest.TestAren"
  "aMap.MapSint64Sint64Entry\022S\n\023map_fixed32"
  "_fixed32\030\007 \003(\01326.protobuf_unittest.TestA"
  "renaMap.MapFixed32Fixed32Entry\022S\n\023map_fi"
  "xed64_fixed64\030\010 \003(\01326.protobuf_unittest."
  "TestArenaMap.MapFixed64Fixed64Entry\022W\n\025m"
  "ap_sfixed32_sfixed32\030\t \003(\01328.protobuf_un"
  "ittest.TestArenaMap.MapSfixed32Sfixed32E"
  "ntry\022W\n\025map_sfixed64_sfixed64\030\n \003(\01328.pr"
  "otobuf_unittest.TestArenaMap.MapSfixed64"
  "Sfixed64Entry\022K\n\017map_int32_float\030\013 \003(\01322"
  ".protobuf_unittest.TestArenaMap.MapInt32"
  "FloatEntry\022M\n\020map_int32_double\030\014 \003(\01323.p"
  "rotobuf_unittest.TestArenaMap.MapInt32Do"
  "ubleEntry\022G\n\rmap_bool_bool\030\r \003(\01320.proto"
  "buf_unittest.TestArenaMap.MapBoolBoolEnt"
  "ry\022O\n\021map_string_string\030\016 \003(\01324.protobuf"
  "_unittest.TestArenaMap.MapStringStringEn"
  "try\022K\n\017map_int32_bytes\030\017 \003(\01322.protobuf_"
  "unittest.TestArenaMap.MapInt32BytesEntry"
  "\022I\n\016map_int32_enum\030\020 \003(\01321.protobuf_unit"
  "test.TestArenaMap.MapInt32EnumEntry\022^\n\031m"
  "ap_int32_foreign_message\030\021 \003(\0132;.protobu"
  "f_unittest.TestArenaMap.MapInt32ForeignM"
  "essageEntry\0324\n\022MapInt32Int32Entry\022\013\n\003key"
  "\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\0324\n\022MapInt64Int"
  "64Entry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\003:\0028\001\032"
  "6\n\024MapUint32Uint32Entry\022\013\n\003key\030\001 \001(\r\022\r\n\005"
  "value\030\002 \001(\r:\0028\001\0326\n\024MapUint64Uint64Entry\022"
  "\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\004:\0028\001\0326\n\024MapSi"
  "nt32Sint32Entry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 "
  "\001(\021:\0028\001\0326\n\024MapSint64Sint64Entry\022\013\n\003key\030\001"
  " \001(\022\022\r\n\005value\030\002 \001(\022:\0028\001\0328\n\026MapFixed32Fix"
  "ed32Entry\022\013\n\003key\030\001 \001(\007\022\r\n\005value\030\002 \001(\007:\0028"
  "\001\0328\n\026MapFixed64Fixed64Entry\022\013\n\003key\030\001 \001(\006"
  "\022\r\n\005value\030\002 \001(\006:\0028\001\032:\n\030MapSfixed32Sfixed"
  "32Entry\022\013\n\003key\030\001 \001(\017\022\r\n\005value\030\002 \001(\017:\0028\001\032"
  ":\n\030MapSfixed64Sfixed64Entry\022\013\n\003key\030\001 \001(\020"
  "\022\r\n\005value\030\002 \001(\020:\0028\001\0324\n\022MapInt32FloatEntr"
  "y\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\002:\0028\001\0325\n\023Map"
  "Int32DoubleEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002"
  " \001(\001:\0028\001\0322\n\020MapBoolBoolEntry\022\013\n\003key\030\001 \001("
  "\010\022\r\n\005value\030\002 \001(\010:\0028\001\0326\n\024MapStringStringE"
  "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0324\n\022"
  "MapInt32BytesEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value"
  "\030\002 \001(\014:\0028\001\032O\n\021MapInt32EnumEntry\022\013\n\003key\030\001"
  " \001(\005\022)\n\005value\030\002 \001(\0162\032.protobuf_unittest."
  "MapEnum:\0028\001\032`\n\033MapInt32ForeignMessageEnt"
  "ry\022\013\n\003key\030\001 \001(\005\0220\n\005value\030\002 \001(\0132!.protobu"
  "f_unittest.ForeignMessage:\0028\001\"\344\001\n\037Messag"
  "eContainingEnumCalledType\022J\n\004type\030\001 \003(\0132"
  "<.protobuf_unittest.MessageContainingEnu"
  "mCalledType.TypeEntry\032_\n\tTypeEntry\022\013\n\003ke"
  "y\030\001 \001(\t\022A\n\005value\030\002 \001(\01322.protobuf_unitte"
  "st.MessageContainingEnumCalledType:\0028\001\"\024"
  "\n\004Type\022\014\n\010TYPE_FOO\020\000\"\235\001\n\037MessageContaini"
  "ngMapCalledEntry\022L\n\005entry\030\001 \003(\0132=.protob"
  "uf_unittest.MessageContainingMapCalledEn"
  "try.EntryEntry\032,\n\nEntryEntry\022\013\n\003key\030\001 \001("
  "\005\022\r\n\005value\030\002 \001(\005:\0028\001\"\255\001\n\027TestRecursiveMa"
  "pMessage\022<\n\001a\030\001 \003(\01321.protobuf_unittest."
  "TestRecursiveMapMessage.AEntry\032T\n\006AEntry"
  "\022\013\n\003key\030\001 \001(\t\0229\n\005value\030\002 \001(\0132*.protobuf_"
  "unittest.TestRecursiveMapMessage:\0028\001*\?\n\007"
  "MapEnum\022\020\n\014MAP_ENUM_FOO\020\000\022\020\n\014MAP_ENUM_BA"
  "R\020\001\022\020\n\014MAP_ENUM_BAZ\020\002B\003\370\001\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2funittest_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto = {
    false, false, 6514, descriptor_table_protodef_google_2fprotobuf_2fmap_5funittest_2eproto,
    "google/protobuf/map_unittest.proto",
    &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once, descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_deps, 1, 52,
    schemas, file_default_instances, TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto::offsets,
    file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto, file_level_enum_descriptors_google_2fprotobuf_2fmap_5funittest_2eproto,
    file_level_service_descriptors_google_2fprotobuf_2fmap_5funittest_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter() {
  return &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fprotobuf_2fmap_5funittest_2eproto(&descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto);
namespace protobuf_unittest {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageContainingEnumCalledType_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2fmap_5funittest_2eproto[0];
}
bool MessageContainingEnumCalledType_Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MessageContainingEnumCalledType_Type MessageContainingEnumCalledType::TYPE_FOO;
constexpr MessageContainingEnumCalledType_Type MessageContainingEnumCalledType::Type_MIN;
constexpr MessageContainingEnumCalledType_Type MessageContainingEnumCalledType::Type_MAX;
constexpr int MessageContainingEnumCalledType::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MapEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2fmap_5funittest_2eproto[1];
}
bool MapEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

TestMap_MapInt32Int32Entry_DoNotUse::TestMap_MapInt32Int32Entry_DoNotUse() {}
TestMap_MapInt32Int32Entry_DoNotUse::TestMap_MapInt32Int32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapInt32Int32Entry_DoNotUse::MergeFrom(const TestMap_MapInt32Int32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapInt32Int32Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[0]);
}

// ===================================================================

TestMap_MapInt64Int64Entry_DoNotUse::TestMap_MapInt64Int64Entry_DoNotUse() {}
TestMap_MapInt64Int64Entry_DoNotUse::TestMap_MapInt64Int64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapInt64Int64Entry_DoNotUse::MergeFrom(const TestMap_MapInt64Int64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapInt64Int64Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[1]);
}

// ===================================================================

TestMap_MapUint32Uint32Entry_DoNotUse::TestMap_MapUint32Uint32Entry_DoNotUse() {}
TestMap_MapUint32Uint32Entry_DoNotUse::TestMap_MapUint32Uint32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapUint32Uint32Entry_DoNotUse::MergeFrom(const TestMap_MapUint32Uint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapUint32Uint32Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[2]);
}

// ===================================================================

TestMap_MapUint64Uint64Entry_DoNotUse::TestMap_MapUint64Uint64Entry_DoNotUse() {}
TestMap_MapUint64Uint64Entry_DoNotUse::TestMap_MapUint64Uint64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapUint64Uint64Entry_DoNotUse::MergeFrom(const TestMap_MapUint64Uint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapUint64Uint64Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[3]);
}

// ===================================================================

TestMap_MapSint32Sint32Entry_DoNotUse::TestMap_MapSint32Sint32Entry_DoNotUse() {}
TestMap_MapSint32Sint32Entry_DoNotUse::TestMap_MapSint32Sint32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapSint32Sint32Entry_DoNotUse::MergeFrom(const TestMap_MapSint32Sint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapSint32Sint32Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[4]);
}

// ===================================================================

TestMap_MapSint64Sint64Entry_DoNotUse::TestMap_MapSint64Sint64Entry_DoNotUse() {}
TestMap_MapSint64Sint64Entry_DoNotUse::TestMap_MapSint64Sint64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapSint64Sint64Entry_DoNotUse::MergeFrom(const TestMap_MapSint64Sint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapSint64Sint64Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[5]);
}

// ===================================================================

TestMap_MapFixed32Fixed32Entry_DoNotUse::TestMap_MapFixed32Fixed32Entry_DoNotUse() {}
TestMap_MapFixed32Fixed32Entry_DoNotUse::TestMap_MapFixed32Fixed32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapFixed32Fixed32Entry_DoNotUse::MergeFrom(const TestMap_MapFixed32Fixed32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapFixed32Fixed32Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[6]);
}

// ===================================================================

TestMap_MapFixed64Fixed64Entry_DoNotUse::TestMap_MapFixed64Fixed64Entry_DoNotUse() {}
TestMap_MapFixed64Fixed64Entry_DoNotUse::TestMap_MapFixed64Fixed64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapFixed64Fixed64Entry_DoNotUse::MergeFrom(const TestMap_MapFixed64Fixed64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapFixed64Fixed64Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[7]);
}

// ===================================================================

TestMap_MapSfixed32Sfixed32Entry_DoNotUse::TestMap_MapSfixed32Sfixed32Entry_DoNotUse() {}
TestMap_MapSfixed32Sfixed32Entry_DoNotUse::TestMap_MapSfixed32Sfixed32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapSfixed32Sfixed32Entry_DoNotUse::MergeFrom(const TestMap_MapSfixed32Sfixed32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapSfixed32Sfixed32Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[8]);
}

// ===================================================================

TestMap_MapSfixed64Sfixed64Entry_DoNotUse::TestMap_MapSfixed64Sfixed64Entry_DoNotUse() {}
TestMap_MapSfixed64Sfixed64Entry_DoNotUse::TestMap_MapSfixed64Sfixed64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapSfixed64Sfixed64Entry_DoNotUse::MergeFrom(const TestMap_MapSfixed64Sfixed64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapSfixed64Sfixed64Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[9]);
}

// ===================================================================

TestMap_MapInt32FloatEntry_DoNotUse::TestMap_MapInt32FloatEntry_DoNotUse() {}
TestMap_MapInt32FloatEntry_DoNotUse::TestMap_MapInt32FloatEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapInt32FloatEntry_DoNotUse::MergeFrom(const TestMap_MapInt32FloatEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapInt32FloatEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[10]);
}

// ===================================================================

TestMap_MapInt32DoubleEntry_DoNotUse::TestMap_MapInt32DoubleEntry_DoNotUse() {}
TestMap_MapInt32DoubleEntry_DoNotUse::TestMap_MapInt32DoubleEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapInt32DoubleEntry_DoNotUse::MergeFrom(const TestMap_MapInt32DoubleEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapInt32DoubleEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[11]);
}

// ===================================================================

TestMap_MapBoolBoolEntry_DoNotUse::TestMap_MapBoolBoolEntry_DoNotUse() {}
TestMap_MapBoolBoolEntry_DoNotUse::TestMap_MapBoolBoolEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapBoolBoolEntry_DoNotUse::MergeFrom(const TestMap_MapBoolBoolEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapBoolBoolEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[12]);
}

// ===================================================================

TestMap_MapStringStringEntry_DoNotUse::TestMap_MapStringStringEntry_DoNotUse() {}
TestMap_MapStringStringEntry_DoNotUse::TestMap_MapStringStringEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapStringStringEntry_DoNotUse::MergeFrom(const TestMap_MapStringStringEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapStringStringEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[13]);
}

// ===================================================================

TestMap_MapInt32BytesEntry_DoNotUse::TestMap_MapInt32BytesEntry_DoNotUse() {}
TestMap_MapInt32BytesEntry_DoNotUse::TestMap_MapInt32BytesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapInt32BytesEntry_DoNotUse::MergeFrom(const TestMap_MapInt32BytesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapInt32BytesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[14]);
}

// ===================================================================

TestMap_MapInt32EnumEntry_DoNotUse::TestMap_MapInt32EnumEntry_DoNotUse() {}
TestMap_MapInt32EnumEntry_DoNotUse::TestMap_MapInt32EnumEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapInt32EnumEntry_DoNotUse::MergeFrom(const TestMap_MapInt32EnumEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapInt32EnumEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[15]);
}

// ===================================================================

TestMap_MapInt32ForeignMessageEntry_DoNotUse::TestMap_MapInt32ForeignMessageEntry_DoNotUse() {}
TestMap_MapInt32ForeignMessageEntry_DoNotUse::TestMap_MapInt32ForeignMessageEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapInt32ForeignMessageEntry_DoNotUse::MergeFrom(const TestMap_MapInt32ForeignMessageEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapInt32ForeignMessageEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[16]);
}

// ===================================================================

TestMap_MapStringForeignMessageEntry_DoNotUse::TestMap_MapStringForeignMessageEntry_DoNotUse() {}
TestMap_MapStringForeignMessageEntry_DoNotUse::TestMap_MapStringForeignMessageEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapStringForeignMessageEntry_DoNotUse::MergeFrom(const TestMap_MapStringForeignMessageEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapStringForeignMessageEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[17]);
}

// ===================================================================

TestMap_MapInt32AllTypesEntry_DoNotUse::TestMap_MapInt32AllTypesEntry_DoNotUse() {}
TestMap_MapInt32AllTypesEntry_DoNotUse::TestMap_MapInt32AllTypesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMap_MapInt32AllTypesEntry_DoNotUse::MergeFrom(const TestMap_MapInt32AllTypesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMap_MapInt32AllTypesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[18]);
}

// ===================================================================

class TestMap::_Internal {
 public:
};

void TestMap::clear_map_int32_foreign_message() {
  map_int32_foreign_message_.Clear();
}
void TestMap::clear_map_string_foreign_message() {
  map_string_foreign_message_.Clear();
}
void TestMap::clear_map_int32_all_types() {
  map_int32_all_types_.Clear();
}
TestMap::TestMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  map_int32_int32_(arena),
  map_int64_int64_(arena),
  map_uint32_uint32_(arena),
  map_uint64_uint64_(arena),
  map_sint32_sint32_(arena),
  map_sint64_sint64_(arena),
  map_fixed32_fixed32_(arena),
  map_fixed64_fixed64_(arena),
  map_sfixed32_sfixed32_(arena),
  map_sfixed64_sfixed64_(arena),
  map_int32_float_(arena),
  map_int32_double_(arena),
  map_bool_bool_(arena),
  map_string_string_(arena),
  map_int32_bytes_(arena),
  map_int32_enum_(arena),
  map_int32_foreign_message_(arena),
  map_string_foreign_message_(arena),
  map_int32_all_types_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &TestMap::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMap)
}
TestMap::TestMap(const TestMap& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  map_int32_int32_.MergeFrom(from.map_int32_int32_);
  map_int64_int64_.MergeFrom(from.map_int64_int64_);
  map_uint32_uint32_.MergeFrom(from.map_uint32_uint32_);
  map_uint64_uint64_.MergeFrom(from.map_uint64_uint64_);
  map_sint32_sint32_.MergeFrom(from.map_sint32_sint32_);
  map_sint64_sint64_.MergeFrom(from.map_sint64_sint64_);
  map_fixed32_fixed32_.MergeFrom(from.map_fixed32_fixed32_);
  map_fixed64_fixed64_.MergeFrom(from.map_fixed64_fixed64_);
  map_sfixed32_sfixed32_.MergeFrom(from.map_sfixed32_sfixed32_);
  map_sfixed64_sfixed64_.MergeFrom(from.map_sfixed64_sfixed64_);
  map_int32_float_.MergeFrom(from.map_int32_float_);
  map_int32_double_.MergeFrom(from.map_int32_double_);
  map_bool_bool_.MergeFrom(from.map_bool_bool_);
  map_string_string_.MergeFrom(from.map_string_string_);
  map_int32_bytes_.MergeFrom(from.map_int32_bytes_);
  map_int32_enum_.MergeFrom(from.map_int32_enum_);
  map_int32_foreign_message_.MergeFrom(from.map_int32_foreign_message_);
  map_string_foreign_message_.MergeFrom(from.map_string_foreign_message_);
  map_int32_all_types_.MergeFrom(from.map_int32_all_types_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMap)
}

inline void TestMap::SharedCtor() {
}

TestMap::~TestMap() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMap)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void TestMap::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  map_int32_int32_.Destruct();
  map_int64_int64_.Destruct();
  map_uint32_uint32_.Destruct();
  map_uint64_uint64_.Destruct();
  map_sint32_sint32_.Destruct();
  map_sint64_sint64_.Destruct();
  map_fixed32_fixed32_.Destruct();
  map_fixed64_fixed64_.Destruct();
  map_sfixed32_sfixed32_.Destruct();
  map_sfixed64_sfixed64_.Destruct();
  map_int32_float_.Destruct();
  map_int32_double_.Destruct();
  map_bool_bool_.Destruct();
  map_string_string_.Destruct();
  map_int32_bytes_.Destruct();
  map_int32_enum_.Destruct();
  map_int32_foreign_message_.Destruct();
  map_string_foreign_message_.Destruct();
  map_int32_all_types_.Destruct();
}

void TestMap::ArenaDtor(void* object) {
  TestMap* _this = reinterpret_cast< TestMap* >(object);
  _this->map_int32_int32_.Destruct();
  _this->map_int64_int64_.Destruct();
  _this->map_uint32_uint32_.Destruct();
  _this->map_uint64_uint64_.Destruct();
  _this->map_sint32_sint32_.Destruct();
  _this->map_sint64_sint64_.Destruct();
  _this->map_fixed32_fixed32_.Destruct();
  _this->map_fixed64_fixed64_.Destruct();
  _this->map_sfixed32_sfixed32_.Destruct();
  _this->map_sfixed64_sfixed64_.Destruct();
  _this->map_int32_float_.Destruct();
  _this->map_int32_double_.Destruct();
  _this->map_bool_bool_.Destruct();
  _this->map_string_string_.Destruct();
  _this->map_int32_bytes_.Destruct();
  _this->map_int32_enum_.Destruct();
  _this->map_int32_foreign_message_.Destruct();
  _this->map_string_foreign_message_.Destruct();
  _this->map_int32_all_types_.Destruct();
}
void TestMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TestMap::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMap)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_int32_int32_.Clear();
  map_int64_int64_.Clear();
  map_uint32_uint32_.Clear();
  map_uint64_uint64_.Clear();
  map_sint32_sint32_.Clear();
  map_sint64_sint64_.Clear();
  map_fixed32_fixed32_.Clear();
  map_fixed64_fixed64_.Clear();
  map_sfixed32_sfixed32_.Clear();
  map_sfixed64_sfixed64_.Clear();
  map_int32_float_.Clear();
  map_int32_double_.Clear();
  map_bool_bool_.Clear();
  map_string_string_.Clear();
  map_int32_bytes_.Clear();
  map_int32_enum_.Clear();
  map_int32_foreign_message_.Clear();
  map_string_foreign_message_.Clear();
  map_int32_all_types_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TestMap::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<int32, int32> map_int32_int32 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_int32_int32_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int64, int64> map_int64_int64 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_int64_int64_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, uint32> map_uint32_uint32 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_uint32_uint32_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint64, uint64> map_uint64_uint64 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_uint64_uint64_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<sint32, sint32> map_sint32_sint32 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_sint32_sint32_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<sint64, sint64> map_sint64_sint64 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_sint64_sint64_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_fixed32_fixed32_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_fixed64_fixed64_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_sfixed32_sfixed32_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_sfixed64_sfixed64_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int32, float> map_int32_float = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_int32_float_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int32, double> map_int32_double = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_int32_double_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<bool, bool> map_bool_bool = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_bool_bool_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> map_string_string = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_string_string_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int32, bytes> map_int32_bytes = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_int32_bytes_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int32, .protobuf_unittest.MapEnum> map_int32_enum = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&map_int32_enum_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int32, .protobuf_unittest.ForeignMessage> map_int32_foreign_message = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&map_int32_foreign_message_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<138>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .protobuf_unittest.ForeignMessage> map_string_foreign_message = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&map_string_foreign_message_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<146>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int32, .protobuf_unittest.TestAllTypes> map_int32_all_types = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&map_int32_all_types_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<154>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TestMap::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMap)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, int32> map_int32_int32 = 1;
  if (!this->_internal_map_int32_int32().empty()) {
    using MapType = ::_pb::Map<int32_t, int32_t>;
    using WireHelper = TestMap_MapInt32Int32Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int32_int32();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int64, int64> map_int64_int64 = 2;
  if (!this->_internal_map_int64_int64().empty()) {
    using MapType = ::_pb::Map<int64_t, int64_t>;
    using WireHelper = TestMap_MapInt64Int64Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int64_int64();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<uint32, uint32> map_uint32_uint32 = 3;
  if (!this->_internal_map_uint32_uint32().empty()) {
    using MapType = ::_pb::Map<uint32_t, uint32_t>;
    using WireHelper = TestMap_MapUint32Uint32Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_uint32_uint32();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<uint64, uint64> map_uint64_uint64 = 4;
  if (!this->_internal_map_uint64_uint64().empty()) {
    using MapType = ::_pb::Map<uint64_t, uint64_t>;
    using WireHelper = TestMap_MapUint64Uint64Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_uint64_uint64();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sint32, sint32> map_sint32_sint32 = 5;
  if (!this->_internal_map_sint32_sint32().empty()) {
    using MapType = ::_pb::Map<int32_t, int32_t>;
    using WireHelper = TestMap_MapSint32Sint32Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_sint32_sint32();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sint64, sint64> map_sint64_sint64 = 6;
  if (!this->_internal_map_sint64_sint64().empty()) {
    using MapType = ::_pb::Map<int64_t, int64_t>;
    using WireHelper = TestMap_MapSint64Sint64Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_sint64_sint64();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
  if (!this->_internal_map_fixed32_fixed32().empty()) {
    using MapType = ::_pb::Map<uint32_t, uint32_t>;
    using WireHelper = TestMap_MapFixed32Fixed32Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_fixed32_fixed32();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(7, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(7, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
  if (!this->_internal_map_fixed64_fixed64().empty()) {
    using MapType = ::_pb::Map<uint64_t, uint64_t>;
    using WireHelper = TestMap_MapFixed64Fixed64Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_fixed64_fixed64();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(8, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(8, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
  if (!this->_internal_map_sfixed32_sfixed32().empty()) {
    using MapType = ::_pb::Map<int32_t, int32_t>;
    using WireHelper = TestMap_MapSfixed32Sfixed32Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_sfixed32_sfixed32();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(9, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(9, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
  if (!this->_internal_map_sfixed64_sfixed64().empty()) {
    using MapType = ::_pb::Map<int64_t, int64_t>;
    using WireHelper = TestMap_MapSfixed64Sfixed64Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_sfixed64_sfixed64();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(10, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(10, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, float> map_int32_float = 11;
  if (!this->_internal_map_int32_float().empty()) {
    using MapType = ::_pb::Map<int32_t, float>;
    using WireHelper = TestMap_MapInt32FloatEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int32_float();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(11, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(11, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, double> map_int32_double = 12;
  if (!this->_internal_map_int32_double().empty()) {
    using MapType = ::_pb::Map<int32_t, double>;
    using WireHelper = TestMap_MapInt32DoubleEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int32_double();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(12, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(12, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<bool, bool> map_bool_bool = 13;
  if (!this->_internal_map_bool_bool().empty()) {
    using MapType = ::_pb::Map<bool, bool>;
    using WireHelper = TestMap_MapBoolBoolEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_bool_bool();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(13, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(13, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<string, string> map_string_string = 14;
  if (!this->_internal_map_string_string().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = TestMap_MapStringStringEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_string_string();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "protobuf_unittest.TestMap.MapStringStringEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "protobuf_unittest.TestMap.MapStringStringEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(14, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(14, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<int32, bytes> map_int32_bytes = 15;
  if (!this->_internal_map_int32_bytes().empty()) {
    using MapType = ::_pb::Map<int32_t, std::string>;
    using WireHelper = TestMap_MapInt32BytesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int32_bytes();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(15, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(15, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, .protobuf_unittest.MapEnum> map_int32_enum = 16;
  if (!this->_internal_map_int32_enum().empty()) {
    using MapType = ::_pb::Map<int32_t, ::protobuf_unittest::MapEnum>;
    using WireHelper = TestMap_MapInt32EnumEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int32_enum();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(16, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(16, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, .protobuf_unittest.ForeignMessage> map_int32_foreign_message = 17;
  if (!this->_internal_map_int32_foreign_message().empty()) {
    using MapType = ::_pb::Map<int32_t, ::protobuf_unittest::ForeignMessage>;
    using WireHelper = TestMap_MapInt32ForeignMessageEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int32_foreign_message();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(17, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(17, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<string, .protobuf_unittest.ForeignMessage> map_string_foreign_message = 18;
  if (!this->_internal_map_string_foreign_message().empty()) {
    using MapType = ::_pb::Map<std::string, ::protobuf_unittest::ForeignMessage>;
    using WireHelper = TestMap_MapStringForeignMessageEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_string_foreign_message();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "protobuf_unittest.TestMap.MapStringForeignMessageEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(18, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(18, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<int32, .protobuf_unittest.TestAllTypes> map_int32_all_types = 19;
  if (!this->_internal_map_int32_all_types().empty()) {
    using MapType = ::_pb::Map<int32_t, ::protobuf_unittest::TestAllTypes>;
    using WireHelper = TestMap_MapInt32AllTypesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int32_all_types();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(19, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(19, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMap)
  return target;
}

size_t TestMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMap)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, int32> map_int32_int32 = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int32_int32_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::const_iterator
      it = this->_internal_map_int32_int32().begin();
      it != this->_internal_map_int32_int32().end(); ++it) {
    total_size += TestMap_MapInt32Int32Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int64, int64> map_int64_int64 = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int64_int64_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >::const_iterator
      it = this->_internal_map_int64_int64().begin();
      it != this->_internal_map_int64_int64().end(); ++it) {
    total_size += TestMap_MapInt64Int64Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, uint32> map_uint32_uint32 = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_uint32_uint32_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >::const_iterator
      it = this->_internal_map_uint32_uint32().begin();
      it != this->_internal_map_uint32_uint32().end(); ++it) {
    total_size += TestMap_MapUint32Uint32Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint64, uint64> map_uint64_uint64 = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_uint64_uint64_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >::const_iterator
      it = this->_internal_map_uint64_uint64().begin();
      it != this->_internal_map_uint64_uint64().end(); ++it) {
    total_size += TestMap_MapUint64Uint64Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<sint32, sint32> map_sint32_sint32 = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_sint32_sint32_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::const_iterator
      it = this->_internal_map_sint32_sint32().begin();
      it != this->_internal_map_sint32_sint32().end(); ++it) {
    total_size += TestMap_MapSint32Sint32Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<sint64, sint64> map_sint64_sint64 = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_sint64_sint64_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >::const_iterator
      it = this->_internal_map_sint64_sint64().begin();
      it != this->_internal_map_sint64_sint64().end(); ++it) {
    total_size += TestMap_MapSint64Sint64Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_fixed32_fixed32_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >::const_iterator
      it = this->_internal_map_fixed32_fixed32().begin();
      it != this->_internal_map_fixed32_fixed32().end(); ++it) {
    total_size += TestMap_MapFixed32Fixed32Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_fixed64_fixed64_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >::const_iterator
      it = this->_internal_map_fixed64_fixed64().begin();
      it != this->_internal_map_fixed64_fixed64().end(); ++it) {
    total_size += TestMap_MapFixed64Fixed64Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_sfixed32_sfixed32_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::const_iterator
      it = this->_internal_map_sfixed32_sfixed32().begin();
      it != this->_internal_map_sfixed32_sfixed32().end(); ++it) {
    total_size += TestMap_MapSfixed32Sfixed32Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_sfixed64_sfixed64_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >::const_iterator
      it = this->_internal_map_sfixed64_sfixed64().begin();
      it != this->_internal_map_sfixed64_sfixed64().end(); ++it) {
    total_size += TestMap_MapSfixed64Sfixed64Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, float> map_int32_float = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int32_float_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, float >::const_iterator
      it = this->_internal_map_int32_float().begin();
      it != this->_internal_map_int32_float().end(); ++it) {
    total_size += TestMap_MapInt32FloatEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, double> map_int32_double = 12;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int32_double_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, double >::const_iterator
      it = this->_internal_map_int32_double().begin();
      it != this->_internal_map_int32_double().end(); ++it) {
    total_size += TestMap_MapInt32DoubleEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<bool, bool> map_bool_bool = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_bool_bool_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< bool, bool >::const_iterator
      it = this->_internal_map_bool_bool().begin();
      it != this->_internal_map_bool_bool().end(); ++it) {
    total_size += TestMap_MapBoolBoolEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, string> map_string_string = 14;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_string_string_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_map_string_string().begin();
      it != this->_internal_map_string_string().end(); ++it) {
    total_size += TestMap_MapStringStringEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, bytes> map_int32_bytes = 15;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int32_bytes_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, std::string >::const_iterator
      it = this->_internal_map_int32_bytes().begin();
      it != this->_internal_map_int32_bytes().end(); ++it) {
    total_size += TestMap_MapInt32BytesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .protobuf_unittest.MapEnum> map_int32_enum = 16;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int32_enum_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::protobuf_unittest::MapEnum >::const_iterator
      it = this->_internal_map_int32_enum().begin();
      it != this->_internal_map_int32_enum().end(); ++it) {
    total_size += TestMap_MapInt32EnumEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .protobuf_unittest.ForeignMessage> map_int32_foreign_message = 17;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int32_foreign_message_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::protobuf_unittest::ForeignMessage >::const_iterator
      it = this->_internal_map_int32_foreign_message().begin();
      it != this->_internal_map_int32_foreign_message().end(); ++it) {
    total_size += TestMap_MapInt32ForeignMessageEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .protobuf_unittest.ForeignMessage> map_string_foreign_message = 18;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_string_foreign_message_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_unittest::ForeignMessage >::const_iterator
      it = this->_internal_map_string_foreign_message().begin();
      it != this->_internal_map_string_foreign_message().end(); ++it) {
    total_size += TestMap_MapStringForeignMessageEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .protobuf_unittest.TestAllTypes> map_int32_all_types = 19;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int32_all_types_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::protobuf_unittest::TestAllTypes >::const_iterator
      it = this->_internal_map_int32_all_types().begin();
      it != this->_internal_map_int32_all_types().end(); ++it) {
    total_size += TestMap_MapInt32AllTypesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TestMap::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TestMap::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TestMap::GetClassData() const { return &_class_data_; }

void TestMap::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TestMap *>(to)->MergeFrom(
      static_cast<const TestMap &>(from));
}


void TestMap::MergeFrom(const TestMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMap)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  map_int32_int32_.MergeFrom(from.map_int32_int32_);
  map_int64_int64_.MergeFrom(from.map_int64_int64_);
  map_uint32_uint32_.MergeFrom(from.map_uint32_uint32_);
  map_uint64_uint64_.MergeFrom(from.map_uint64_uint64_);
  map_sint32_sint32_.MergeFrom(from.map_sint32_sint32_);
  map_sint64_sint64_.MergeFrom(from.map_sint64_sint64_);
  map_fixed32_fixed32_.MergeFrom(from.map_fixed32_fixed32_);
  map_fixed64_fixed64_.MergeFrom(from.map_fixed64_fixed64_);
  map_sfixed32_sfixed32_.MergeFrom(from.map_sfixed32_sfixed32_);
  map_sfixed64_sfixed64_.MergeFrom(from.map_sfixed64_sfixed64_);
  map_int32_float_.MergeFrom(from.map_int32_float_);
  map_int32_double_.MergeFrom(from.map_int32_double_);
  map_bool_bool_.MergeFrom(from.map_bool_bool_);
  map_string_string_.MergeFrom(from.map_string_string_);
  map_int32_bytes_.MergeFrom(from.map_int32_bytes_);
  map_int32_enum_.MergeFrom(from.map_int32_enum_);
  map_int32_foreign_message_.MergeFrom(from.map_int32_foreign_message_);
  map_string_foreign_message_.MergeFrom(from.map_string_foreign_message_);
  map_int32_all_types_.MergeFrom(from.map_int32_all_types_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TestMap::CopyFrom(const TestMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMap::IsInitialized() const {
  return true;
}

void TestMap::InternalSwap(TestMap* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  map_int32_int32_.InternalSwap(&other->map_int32_int32_);
  map_int64_int64_.InternalSwap(&other->map_int64_int64_);
  map_uint32_uint32_.InternalSwap(&other->map_uint32_uint32_);
  map_uint64_uint64_.InternalSwap(&other->map_uint64_uint64_);
  map_sint32_sint32_.InternalSwap(&other->map_sint32_sint32_);
  map_sint64_sint64_.InternalSwap(&other->map_sint64_sint64_);
  map_fixed32_fixed32_.InternalSwap(&other->map_fixed32_fixed32_);
  map_fixed64_fixed64_.InternalSwap(&other->map_fixed64_fixed64_);
  map_sfixed32_sfixed32_.InternalSwap(&other->map_sfixed32_sfixed32_);
  map_sfixed64_sfixed64_.InternalSwap(&other->map_sfixed64_sfixed64_);
  map_int32_float_.InternalSwap(&other->map_int32_float_);
  map_int32_double_.InternalSwap(&other->map_int32_double_);
  map_bool_bool_.InternalSwap(&other->map_bool_bool_);
  map_string_string_.InternalSwap(&other->map_string_string_);
  map_int32_bytes_.InternalSwap(&other->map_int32_bytes_);
  map_int32_enum_.InternalSwap(&other->map_int32_enum_);
  map_int32_foreign_message_.InternalSwap(&other->map_int32_foreign_message_);
  map_string_foreign_message_.InternalSwap(&other->map_string_foreign_message_);
  map_int32_all_types_.InternalSwap(&other->map_int32_all_types_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestMap::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[19]);
}

// ===================================================================

class TestMapSubmessage::_Internal {
 public:
  static const ::protobuf_unittest::TestMap& test_map(const TestMapSubmessage* msg);
};

const ::protobuf_unittest::TestMap&
TestMapSubmessage::_Internal::test_map(const TestMapSubmessage* msg) {
  return *msg->test_map_;
}
TestMapSubmessage::TestMapSubmessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMapSubmessage)
}
TestMapSubmessage::TestMapSubmessage(const TestMapSubmessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_test_map()) {
    test_map_ = new ::protobuf_unittest::TestMap(*from.test_map_);
  } else {
    test_map_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMapSubmessage)
}

inline void TestMapSubmessage::SharedCtor() {
test_map_ = nullptr;
}

TestMapSubmessage::~TestMapSubmessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMapSubmessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TestMapSubmessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete test_map_;
}

void TestMapSubmessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TestMapSubmessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMapSubmessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && test_map_ != nullptr) {
    delete test_map_;
  }
  test_map_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TestMapSubmessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protobuf_unittest.TestMap test_map = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_test_map(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TestMapSubmessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMapSubmessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protobuf_unittest.TestMap test_map = 1;
  if (this->_internal_has_test_map()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::test_map(this),
        _Internal::test_map(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMapSubmessage)
  return target;
}

size_t TestMapSubmessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMapSubmessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protobuf_unittest.TestMap test_map = 1;
  if (this->_internal_has_test_map()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *test_map_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TestMapSubmessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TestMapSubmessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TestMapSubmessage::GetClassData() const { return &_class_data_; }

void TestMapSubmessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TestMapSubmessage *>(to)->MergeFrom(
      static_cast<const TestMapSubmessage &>(from));
}


void TestMapSubmessage::MergeFrom(const TestMapSubmessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMapSubmessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_test_map()) {
    _internal_mutable_test_map()->::protobuf_unittest::TestMap::MergeFrom(from._internal_test_map());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TestMapSubmessage::CopyFrom(const TestMapSubmessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMapSubmessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMapSubmessage::IsInitialized() const {
  return true;
}

void TestMapSubmessage::InternalSwap(TestMapSubmessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(test_map_, other->test_map_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestMapSubmessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[20]);
}

// ===================================================================

TestMessageMap_MapInt32MessageEntry_DoNotUse::TestMessageMap_MapInt32MessageEntry_DoNotUse() {}
TestMessageMap_MapInt32MessageEntry_DoNotUse::TestMessageMap_MapInt32MessageEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestMessageMap_MapInt32MessageEntry_DoNotUse::MergeFrom(const TestMessageMap_MapInt32MessageEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestMessageMap_MapInt32MessageEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[21]);
}

// ===================================================================

class TestMessageMap::_Internal {
 public:
};

void TestMessageMap::clear_map_int32_message() {
  map_int32_message_.Clear();
}
TestMessageMap::TestMessageMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  map_int32_message_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &TestMessageMap::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMessageMap)
}
TestMessageMap::TestMessageMap(const TestMessageMap& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  map_int32_message_.MergeFrom(from.map_int32_message_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMessageMap)
}

inline void TestMessageMap::SharedCtor() {
}

TestMessageMap::~TestMessageMap() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMessageMap)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void TestMessageMap::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  map_int32_message_.Destruct();
}

void TestMessageMap::ArenaDtor(void* object) {
  TestMessageMap* _this = reinterpret_cast< TestMessageMap* >(object);
  _this->map_int32_message_.Destruct();
}
void TestMessageMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TestMessageMap::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMessageMap)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_int32_message_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TestMessageMap::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<int32, .protobuf_unittest.TestAllTypes> map_int32_message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_int32_message_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TestMessageMap::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMessageMap)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .protobuf_unittest.TestAllTypes> map_int32_message = 1;
  if (!this->_internal_map_int32_message().empty()) {
    using MapType = ::_pb::Map<int32_t, ::protobuf_unittest::TestAllTypes>;
    using WireHelper = TestMessageMap_MapInt32MessageEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int32_message();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMessageMap)
  return target;
}

size_t TestMessageMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMessageMap)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .protobuf_unittest.TestAllTypes> map_int32_message = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int32_message_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::protobuf_unittest::TestAllTypes >::const_iterator
      it = this->_internal_map_int32_message().begin();
      it != this->_internal_map_int32_message().end(); ++it) {
    total_size += TestMessageMap_MapInt32MessageEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TestMessageMap::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TestMessageMap::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TestMessageMap::GetClassData() const { return &_class_data_; }

void TestMessageMap::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TestMessageMap *>(to)->MergeFrom(
      static_cast<const TestMessageMap &>(from));
}


void TestMessageMap::MergeFrom(const TestMessageMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMessageMap)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  map_int32_message_.MergeFrom(from.map_int32_message_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TestMessageMap::CopyFrom(const TestMessageMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMessageMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessageMap::IsInitialized() const {
  return true;
}

void TestMessageMap::InternalSwap(TestMessageMap* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  map_int32_message_.InternalSwap(&other->map_int32_message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestMessageMap::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[22]);
}

// ===================================================================

TestSameTypeMap_Map1Entry_DoNotUse::TestSameTypeMap_Map1Entry_DoNotUse() {}
TestSameTypeMap_Map1Entry_DoNotUse::TestSameTypeMap_Map1Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestSameTypeMap_Map1Entry_DoNotUse::MergeFrom(const TestSameTypeMap_Map1Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestSameTypeMap_Map1Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[23]);
}

// ===================================================================

TestSameTypeMap_Map2Entry_DoNotUse::TestSameTypeMap_Map2Entry_DoNotUse() {}
TestSameTypeMap_Map2Entry_DoNotUse::TestSameTypeMap_Map2Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestSameTypeMap_Map2Entry_DoNotUse::MergeFrom(const TestSameTypeMap_Map2Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestSameTypeMap_Map2Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[24]);
}

// ===================================================================

class TestSameTypeMap::_Internal {
 public:
};

TestSameTypeMap::TestSameTypeMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  map1_(arena),
  map2_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &TestSameTypeMap::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestSameTypeMap)
}
TestSameTypeMap::TestSameTypeMap(const TestSameTypeMap& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  map1_.MergeFrom(from.map1_);
  map2_.MergeFrom(from.map2_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestSameTypeMap)
}

inline void TestSameTypeMap::SharedCtor() {
}

TestSameTypeMap::~TestSameTypeMap() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestSameTypeMap)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void TestSameTypeMap::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  map1_.Destruct();
  map2_.Destruct();
}

void TestSameTypeMap::ArenaDtor(void* object) {
  TestSameTypeMap* _this = reinterpret_cast< TestSameTypeMap* >(object);
  _this->map1_.Destruct();
  _this->map2_.Destruct();
}
void TestSameTypeMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TestSameTypeMap::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestSameTypeMap)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map1_.Clear();
  map2_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TestSameTypeMap::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<int32, int32> map1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map1_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int32, int32> map2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map2_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TestSameTypeMap::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestSameTypeMap)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, int32> map1 = 1;
  if (!this->_internal_map1().empty()) {
    using MapType = ::_pb::Map<int32_t, int32_t>;
    using WireHelper = TestSameTypeMap_Map1Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map1();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, int32> map2 = 2;
  if (!this->_internal_map2().empty()) {
    using MapType = ::_pb::Map<int32_t, int32_t>;
    using WireHelper = TestSameTypeMap_Map2Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map2();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestSameTypeMap)
  return target;
}

size_t TestSameTypeMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestSameTypeMap)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, int32> map1 = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map1_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::const_iterator
      it = this->_internal_map1().begin();
      it != this->_internal_map1().end(); ++it) {
    total_size += TestSameTypeMap_Map1Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, int32> map2 = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map2_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::const_iterator
      it = this->_internal_map2().begin();
      it != this->_internal_map2().end(); ++it) {
    total_size += TestSameTypeMap_Map2Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TestSameTypeMap::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TestSameTypeMap::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TestSameTypeMap::GetClassData() const { return &_class_data_; }

void TestSameTypeMap::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TestSameTypeMap *>(to)->MergeFrom(
      static_cast<const TestSameTypeMap &>(from));
}


void TestSameTypeMap::MergeFrom(const TestSameTypeMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestSameTypeMap)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  map1_.MergeFrom(from.map1_);
  map2_.MergeFrom(from.map2_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TestSameTypeMap::CopyFrom(const TestSameTypeMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestSameTypeMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestSameTypeMap::IsInitialized() const {
  return true;
}

void TestSameTypeMap::InternalSwap(TestSameTypeMap* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  map1_.InternalSwap(&other->map1_);
  map2_.InternalSwap(&other->map2_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestSameTypeMap::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[25]);
}

// ===================================================================

TestRequiredMessageMap_MapFieldEntry_DoNotUse::TestRequiredMessageMap_MapFieldEntry_DoNotUse() {}
TestRequiredMessageMap_MapFieldEntry_DoNotUse::TestRequiredMessageMap_MapFieldEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestRequiredMessageMap_MapFieldEntry_DoNotUse::MergeFrom(const TestRequiredMessageMap_MapFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestRequiredMessageMap_MapFieldEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[26]);
}

// ===================================================================

class TestRequiredMessageMap::_Internal {
 public:
};

void TestRequiredMessageMap::clear_map_field() {
  map_field_.Clear();
}
TestRequiredMessageMap::TestRequiredMessageMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  map_field_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &TestRequiredMessageMap::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRequiredMessageMap)
}
TestRequiredMessageMap::TestRequiredMessageMap(const TestRequiredMessageMap& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  map_field_.MergeFrom(from.map_field_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequiredMessageMap)
}

inline void TestRequiredMessageMap::SharedCtor() {
}

TestRequiredMessageMap::~TestRequiredMessageMap() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequiredMessageMap)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void TestRequiredMessageMap::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  map_field_.Destruct();
}

void TestRequiredMessageMap::ArenaDtor(void* object) {
  TestRequiredMessageMap* _this = reinterpret_cast< TestRequiredMessageMap* >(object);
  _this->map_field_.Destruct();
}
void TestRequiredMessageMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TestRequiredMessageMap::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRequiredMessageMap)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_field_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TestRequiredMessageMap::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<int32, .protobuf_unittest.TestRequired> map_field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_field_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TestRequiredMessageMap::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequiredMessageMap)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .protobuf_unittest.TestRequired> map_field = 1;
  if (!this->_internal_map_field().empty()) {
    using MapType = ::_pb::Map<int32_t, ::protobuf_unittest::TestRequired>;
    using WireHelper = TestRequiredMessageMap_MapFieldEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_field();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequiredMessageMap)
  return target;
}

size_t TestRequiredMessageMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRequiredMessageMap)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .protobuf_unittest.TestRequired> map_field = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_field_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::protobuf_unittest::TestRequired >::const_iterator
      it = this->_internal_map_field().begin();
      it != this->_internal_map_field().end(); ++it) {
    total_size += TestRequiredMessageMap_MapFieldEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TestRequiredMessageMap::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TestRequiredMessageMap::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TestRequiredMessageMap::GetClassData() const { return &_class_data_; }

void TestRequiredMessageMap::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TestRequiredMessageMap *>(to)->MergeFrom(
      static_cast<const TestRequiredMessageMap &>(from));
}


void TestRequiredMessageMap::MergeFrom(const TestRequiredMessageMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRequiredMessageMap)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  map_field_.MergeFrom(from.map_field_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TestRequiredMessageMap::CopyFrom(const TestRequiredMessageMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRequiredMessageMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRequiredMessageMap::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(map_field_)) return false;
  return true;
}

void TestRequiredMessageMap::InternalSwap(TestRequiredMessageMap* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  map_field_.InternalSwap(&other->map_field_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestRequiredMessageMap::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[27]);
}

// ===================================================================

TestArenaMap_MapInt32Int32Entry_DoNotUse::TestArenaMap_MapInt32Int32Entry_DoNotUse() {}
TestArenaMap_MapInt32Int32Entry_DoNotUse::TestArenaMap_MapInt32Int32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapInt32Int32Entry_DoNotUse::MergeFrom(const TestArenaMap_MapInt32Int32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapInt32Int32Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[28]);
}

// ===================================================================

TestArenaMap_MapInt64Int64Entry_DoNotUse::TestArenaMap_MapInt64Int64Entry_DoNotUse() {}
TestArenaMap_MapInt64Int64Entry_DoNotUse::TestArenaMap_MapInt64Int64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapInt64Int64Entry_DoNotUse::MergeFrom(const TestArenaMap_MapInt64Int64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapInt64Int64Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[29]);
}

// ===================================================================

TestArenaMap_MapUint32Uint32Entry_DoNotUse::TestArenaMap_MapUint32Uint32Entry_DoNotUse() {}
TestArenaMap_MapUint32Uint32Entry_DoNotUse::TestArenaMap_MapUint32Uint32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapUint32Uint32Entry_DoNotUse::MergeFrom(const TestArenaMap_MapUint32Uint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapUint32Uint32Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[30]);
}

// ===================================================================

TestArenaMap_MapUint64Uint64Entry_DoNotUse::TestArenaMap_MapUint64Uint64Entry_DoNotUse() {}
TestArenaMap_MapUint64Uint64Entry_DoNotUse::TestArenaMap_MapUint64Uint64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapUint64Uint64Entry_DoNotUse::MergeFrom(const TestArenaMap_MapUint64Uint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapUint64Uint64Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[31]);
}

// ===================================================================

TestArenaMap_MapSint32Sint32Entry_DoNotUse::TestArenaMap_MapSint32Sint32Entry_DoNotUse() {}
TestArenaMap_MapSint32Sint32Entry_DoNotUse::TestArenaMap_MapSint32Sint32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapSint32Sint32Entry_DoNotUse::MergeFrom(const TestArenaMap_MapSint32Sint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapSint32Sint32Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[32]);
}

// ===================================================================

TestArenaMap_MapSint64Sint64Entry_DoNotUse::TestArenaMap_MapSint64Sint64Entry_DoNotUse() {}
TestArenaMap_MapSint64Sint64Entry_DoNotUse::TestArenaMap_MapSint64Sint64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapSint64Sint64Entry_DoNotUse::MergeFrom(const TestArenaMap_MapSint64Sint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapSint64Sint64Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[33]);
}

// ===================================================================

TestArenaMap_MapFixed32Fixed32Entry_DoNotUse::TestArenaMap_MapFixed32Fixed32Entry_DoNotUse() {}
TestArenaMap_MapFixed32Fixed32Entry_DoNotUse::TestArenaMap_MapFixed32Fixed32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapFixed32Fixed32Entry_DoNotUse::MergeFrom(const TestArenaMap_MapFixed32Fixed32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapFixed32Fixed32Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[34]);
}

// ===================================================================

TestArenaMap_MapFixed64Fixed64Entry_DoNotUse::TestArenaMap_MapFixed64Fixed64Entry_DoNotUse() {}
TestArenaMap_MapFixed64Fixed64Entry_DoNotUse::TestArenaMap_MapFixed64Fixed64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapFixed64Fixed64Entry_DoNotUse::MergeFrom(const TestArenaMap_MapFixed64Fixed64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapFixed64Fixed64Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[35]);
}

// ===================================================================

TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse::TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse() {}
TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse::TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse::MergeFrom(const TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[36]);
}

// ===================================================================

TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse::TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse() {}
TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse::TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse::MergeFrom(const TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[37]);
}

// ===================================================================

TestArenaMap_MapInt32FloatEntry_DoNotUse::TestArenaMap_MapInt32FloatEntry_DoNotUse() {}
TestArenaMap_MapInt32FloatEntry_DoNotUse::TestArenaMap_MapInt32FloatEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapInt32FloatEntry_DoNotUse::MergeFrom(const TestArenaMap_MapInt32FloatEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapInt32FloatEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[38]);
}

// ===================================================================

TestArenaMap_MapInt32DoubleEntry_DoNotUse::TestArenaMap_MapInt32DoubleEntry_DoNotUse() {}
TestArenaMap_MapInt32DoubleEntry_DoNotUse::TestArenaMap_MapInt32DoubleEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapInt32DoubleEntry_DoNotUse::MergeFrom(const TestArenaMap_MapInt32DoubleEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapInt32DoubleEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[39]);
}

// ===================================================================

TestArenaMap_MapBoolBoolEntry_DoNotUse::TestArenaMap_MapBoolBoolEntry_DoNotUse() {}
TestArenaMap_MapBoolBoolEntry_DoNotUse::TestArenaMap_MapBoolBoolEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapBoolBoolEntry_DoNotUse::MergeFrom(const TestArenaMap_MapBoolBoolEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapBoolBoolEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[40]);
}

// ===================================================================

TestArenaMap_MapStringStringEntry_DoNotUse::TestArenaMap_MapStringStringEntry_DoNotUse() {}
TestArenaMap_MapStringStringEntry_DoNotUse::TestArenaMap_MapStringStringEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapStringStringEntry_DoNotUse::MergeFrom(const TestArenaMap_MapStringStringEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapStringStringEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[41]);
}

// ===================================================================

TestArenaMap_MapInt32BytesEntry_DoNotUse::TestArenaMap_MapInt32BytesEntry_DoNotUse() {}
TestArenaMap_MapInt32BytesEntry_DoNotUse::TestArenaMap_MapInt32BytesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapInt32BytesEntry_DoNotUse::MergeFrom(const TestArenaMap_MapInt32BytesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapInt32BytesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[42]);
}

// ===================================================================

TestArenaMap_MapInt32EnumEntry_DoNotUse::TestArenaMap_MapInt32EnumEntry_DoNotUse() {}
TestArenaMap_MapInt32EnumEntry_DoNotUse::TestArenaMap_MapInt32EnumEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapInt32EnumEntry_DoNotUse::MergeFrom(const TestArenaMap_MapInt32EnumEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapInt32EnumEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[43]);
}

// ===================================================================

TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse::TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse() {}
TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse::TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse::MergeFrom(const TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[44]);
}

// ===================================================================

class TestArenaMap::_Internal {
 public:
};

void TestArenaMap::clear_map_int32_foreign_message() {
  map_int32_foreign_message_.Clear();
}
TestArenaMap::TestArenaMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  map_int32_int32_(arena),
  map_int64_int64_(arena),
  map_uint32_uint32_(arena),
  map_uint64_uint64_(arena),
  map_sint32_sint32_(arena),
  map_sint64_sint64_(arena),
  map_fixed32_fixed32_(arena),
  map_fixed64_fixed64_(arena),
  map_sfixed32_sfixed32_(arena),
  map_sfixed64_sfixed64_(arena),
  map_int32_float_(arena),
  map_int32_double_(arena),
  map_bool_bool_(arena),
  map_string_string_(arena),
  map_int32_bytes_(arena),
  map_int32_enum_(arena),
  map_int32_foreign_message_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &TestArenaMap::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestArenaMap)
}
TestArenaMap::TestArenaMap(const TestArenaMap& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  map_int32_int32_.MergeFrom(from.map_int32_int32_);
  map_int64_int64_.MergeFrom(from.map_int64_int64_);
  map_uint32_uint32_.MergeFrom(from.map_uint32_uint32_);
  map_uint64_uint64_.MergeFrom(from.map_uint64_uint64_);
  map_sint32_sint32_.MergeFrom(from.map_sint32_sint32_);
  map_sint64_sint64_.MergeFrom(from.map_sint64_sint64_);
  map_fixed32_fixed32_.MergeFrom(from.map_fixed32_fixed32_);
  map_fixed64_fixed64_.MergeFrom(from.map_fixed64_fixed64_);
  map_sfixed32_sfixed32_.MergeFrom(from.map_sfixed32_sfixed32_);
  map_sfixed64_sfixed64_.MergeFrom(from.map_sfixed64_sfixed64_);
  map_int32_float_.MergeFrom(from.map_int32_float_);
  map_int32_double_.MergeFrom(from.map_int32_double_);
  map_bool_bool_.MergeFrom(from.map_bool_bool_);
  map_string_string_.MergeFrom(from.map_string_string_);
  map_int32_bytes_.MergeFrom(from.map_int32_bytes_);
  map_int32_enum_.MergeFrom(from.map_int32_enum_);
  map_int32_foreign_message_.MergeFrom(from.map_int32_foreign_message_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestArenaMap)
}

inline void TestArenaMap::SharedCtor() {
}

TestArenaMap::~TestArenaMap() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestArenaMap)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void TestArenaMap::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  map_int32_int32_.Destruct();
  map_int64_int64_.Destruct();
  map_uint32_uint32_.Destruct();
  map_uint64_uint64_.Destruct();
  map_sint32_sint32_.Destruct();
  map_sint64_sint64_.Destruct();
  map_fixed32_fixed32_.Destruct();
  map_fixed64_fixed64_.Destruct();
  map_sfixed32_sfixed32_.Destruct();
  map_sfixed64_sfixed64_.Destruct();
  map_int32_float_.Destruct();
  map_int32_double_.Destruct();
  map_bool_bool_.Destruct();
  map_string_string_.Destruct();
  map_int32_bytes_.Destruct();
  map_int32_enum_.Destruct();
  map_int32_foreign_message_.Destruct();
}

void TestArenaMap::ArenaDtor(void* object) {
  TestArenaMap* _this = reinterpret_cast< TestArenaMap* >(object);
  _this->map_int32_int32_.Destruct();
  _this->map_int64_int64_.Destruct();
  _this->map_uint32_uint32_.Destruct();
  _this->map_uint64_uint64_.Destruct();
  _this->map_sint32_sint32_.Destruct();
  _this->map_sint64_sint64_.Destruct();
  _this->map_fixed32_fixed32_.Destruct();
  _this->map_fixed64_fixed64_.Destruct();
  _this->map_sfixed32_sfixed32_.Destruct();
  _this->map_sfixed64_sfixed64_.Destruct();
  _this->map_int32_float_.Destruct();
  _this->map_int32_double_.Destruct();
  _this->map_bool_bool_.Destruct();
  _this->map_string_string_.Destruct();
  _this->map_int32_bytes_.Destruct();
  _this->map_int32_enum_.Destruct();
  _this->map_int32_foreign_message_.Destruct();
}
void TestArenaMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TestArenaMap::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestArenaMap)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_int32_int32_.Clear();
  map_int64_int64_.Clear();
  map_uint32_uint32_.Clear();
  map_uint64_uint64_.Clear();
  map_sint32_sint32_.Clear();
  map_sint64_sint64_.Clear();
  map_fixed32_fixed32_.Clear();
  map_fixed64_fixed64_.Clear();
  map_sfixed32_sfixed32_.Clear();
  map_sfixed64_sfixed64_.Clear();
  map_int32_float_.Clear();
  map_int32_double_.Clear();
  map_bool_bool_.Clear();
  map_string_string_.Clear();
  map_int32_bytes_.Clear();
  map_int32_enum_.Clear();
  map_int32_foreign_message_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TestArenaMap::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<int32, int32> map_int32_int32 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_int32_int32_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int64, int64> map_int64_int64 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_int64_int64_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, uint32> map_uint32_uint32 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_uint32_uint32_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint64, uint64> map_uint64_uint64 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_uint64_uint64_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<sint32, sint32> map_sint32_sint32 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_sint32_sint32_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<sint64, sint64> map_sint64_sint64 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_sint64_sint64_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_fixed32_fixed32_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_fixed64_fixed64_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_sfixed32_sfixed32_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_sfixed64_sfixed64_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int32, float> map_int32_float = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_int32_float_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int32, double> map_int32_double = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_int32_double_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<bool, bool> map_bool_bool = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_bool_bool_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> map_string_string = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_string_string_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int32, bytes> map_int32_bytes = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&map_int32_bytes_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int32, .protobuf_unittest.MapEnum> map_int32_enum = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&map_int32_enum_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int32, .protobuf_unittest.ForeignMessage> map_int32_foreign_message = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&map_int32_foreign_message_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<138>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TestArenaMap::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestArenaMap)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, int32> map_int32_int32 = 1;
  if (!this->_internal_map_int32_int32().empty()) {
    using MapType = ::_pb::Map<int32_t, int32_t>;
    using WireHelper = TestArenaMap_MapInt32Int32Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int32_int32();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int64, int64> map_int64_int64 = 2;
  if (!this->_internal_map_int64_int64().empty()) {
    using MapType = ::_pb::Map<int64_t, int64_t>;
    using WireHelper = TestArenaMap_MapInt64Int64Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int64_int64();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<uint32, uint32> map_uint32_uint32 = 3;
  if (!this->_internal_map_uint32_uint32().empty()) {
    using MapType = ::_pb::Map<uint32_t, uint32_t>;
    using WireHelper = TestArenaMap_MapUint32Uint32Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_uint32_uint32();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<uint64, uint64> map_uint64_uint64 = 4;
  if (!this->_internal_map_uint64_uint64().empty()) {
    using MapType = ::_pb::Map<uint64_t, uint64_t>;
    using WireHelper = TestArenaMap_MapUint64Uint64Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_uint64_uint64();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sint32, sint32> map_sint32_sint32 = 5;
  if (!this->_internal_map_sint32_sint32().empty()) {
    using MapType = ::_pb::Map<int32_t, int32_t>;
    using WireHelper = TestArenaMap_MapSint32Sint32Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_sint32_sint32();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sint64, sint64> map_sint64_sint64 = 6;
  if (!this->_internal_map_sint64_sint64().empty()) {
    using MapType = ::_pb::Map<int64_t, int64_t>;
    using WireHelper = TestArenaMap_MapSint64Sint64Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_sint64_sint64();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
  if (!this->_internal_map_fixed32_fixed32().empty()) {
    using MapType = ::_pb::Map<uint32_t, uint32_t>;
    using WireHelper = TestArenaMap_MapFixed32Fixed32Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_fixed32_fixed32();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(7, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(7, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
  if (!this->_internal_map_fixed64_fixed64().empty()) {
    using MapType = ::_pb::Map<uint64_t, uint64_t>;
    using WireHelper = TestArenaMap_MapFixed64Fixed64Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_fixed64_fixed64();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(8, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(8, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
  if (!this->_internal_map_sfixed32_sfixed32().empty()) {
    using MapType = ::_pb::Map<int32_t, int32_t>;
    using WireHelper = TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_sfixed32_sfixed32();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(9, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(9, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
  if (!this->_internal_map_sfixed64_sfixed64().empty()) {
    using MapType = ::_pb::Map<int64_t, int64_t>;
    using WireHelper = TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_sfixed64_sfixed64();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(10, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(10, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, float> map_int32_float = 11;
  if (!this->_internal_map_int32_float().empty()) {
    using MapType = ::_pb::Map<int32_t, float>;
    using WireHelper = TestArenaMap_MapInt32FloatEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int32_float();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(11, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(11, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, double> map_int32_double = 12;
  if (!this->_internal_map_int32_double().empty()) {
    using MapType = ::_pb::Map<int32_t, double>;
    using WireHelper = TestArenaMap_MapInt32DoubleEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int32_double();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(12, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(12, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<bool, bool> map_bool_bool = 13;
  if (!this->_internal_map_bool_bool().empty()) {
    using MapType = ::_pb::Map<bool, bool>;
    using WireHelper = TestArenaMap_MapBoolBoolEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_bool_bool();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(13, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(13, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<string, string> map_string_string = 14;
  if (!this->_internal_map_string_string().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = TestArenaMap_MapStringStringEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_string_string();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "protobuf_unittest.TestArenaMap.MapStringStringEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "protobuf_unittest.TestArenaMap.MapStringStringEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(14, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(14, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<int32, bytes> map_int32_bytes = 15;
  if (!this->_internal_map_int32_bytes().empty()) {
    using MapType = ::_pb::Map<int32_t, std::string>;
    using WireHelper = TestArenaMap_MapInt32BytesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int32_bytes();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(15, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(15, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, .protobuf_unittest.MapEnum> map_int32_enum = 16;
  if (!this->_internal_map_int32_enum().empty()) {
    using MapType = ::_pb::Map<int32_t, ::protobuf_unittest::MapEnum>;
    using WireHelper = TestArenaMap_MapInt32EnumEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int32_enum();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(16, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(16, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, .protobuf_unittest.ForeignMessage> map_int32_foreign_message = 17;
  if (!this->_internal_map_int32_foreign_message().empty()) {
    using MapType = ::_pb::Map<int32_t, ::protobuf_unittest::ForeignMessage>;
    using WireHelper = TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_int32_foreign_message();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(17, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(17, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestArenaMap)
  return target;
}

size_t TestArenaMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestArenaMap)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, int32> map_int32_int32 = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int32_int32_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::const_iterator
      it = this->_internal_map_int32_int32().begin();
      it != this->_internal_map_int32_int32().end(); ++it) {
    total_size += TestArenaMap_MapInt32Int32Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int64, int64> map_int64_int64 = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int64_int64_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >::const_iterator
      it = this->_internal_map_int64_int64().begin();
      it != this->_internal_map_int64_int64().end(); ++it) {
    total_size += TestArenaMap_MapInt64Int64Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, uint32> map_uint32_uint32 = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_uint32_uint32_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >::const_iterator
      it = this->_internal_map_uint32_uint32().begin();
      it != this->_internal_map_uint32_uint32().end(); ++it) {
    total_size += TestArenaMap_MapUint32Uint32Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint64, uint64> map_uint64_uint64 = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_uint64_uint64_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >::const_iterator
      it = this->_internal_map_uint64_uint64().begin();
      it != this->_internal_map_uint64_uint64().end(); ++it) {
    total_size += TestArenaMap_MapUint64Uint64Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<sint32, sint32> map_sint32_sint32 = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_sint32_sint32_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::const_iterator
      it = this->_internal_map_sint32_sint32().begin();
      it != this->_internal_map_sint32_sint32().end(); ++it) {
    total_size += TestArenaMap_MapSint32Sint32Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<sint64, sint64> map_sint64_sint64 = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_sint64_sint64_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >::const_iterator
      it = this->_internal_map_sint64_sint64().begin();
      it != this->_internal_map_sint64_sint64().end(); ++it) {
    total_size += TestArenaMap_MapSint64Sint64Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_fixed32_fixed32_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >::const_iterator
      it = this->_internal_map_fixed32_fixed32().begin();
      it != this->_internal_map_fixed32_fixed32().end(); ++it) {
    total_size += TestArenaMap_MapFixed32Fixed32Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_fixed64_fixed64_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >::const_iterator
      it = this->_internal_map_fixed64_fixed64().begin();
      it != this->_internal_map_fixed64_fixed64().end(); ++it) {
    total_size += TestArenaMap_MapFixed64Fixed64Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_sfixed32_sfixed32_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::const_iterator
      it = this->_internal_map_sfixed32_sfixed32().begin();
      it != this->_internal_map_sfixed32_sfixed32().end(); ++it) {
    total_size += TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_sfixed64_sfixed64_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >::const_iterator
      it = this->_internal_map_sfixed64_sfixed64().begin();
      it != this->_internal_map_sfixed64_sfixed64().end(); ++it) {
    total_size += TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, float> map_int32_float = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int32_float_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, float >::const_iterator
      it = this->_internal_map_int32_float().begin();
      it != this->_internal_map_int32_float().end(); ++it) {
    total_size += TestArenaMap_MapInt32FloatEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, double> map_int32_double = 12;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int32_double_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, double >::const_iterator
      it = this->_internal_map_int32_double().begin();
      it != this->_internal_map_int32_double().end(); ++it) {
    total_size += TestArenaMap_MapInt32DoubleEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<bool, bool> map_bool_bool = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_bool_bool_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< bool, bool >::const_iterator
      it = this->_internal_map_bool_bool().begin();
      it != this->_internal_map_bool_bool().end(); ++it) {
    total_size += TestArenaMap_MapBoolBoolEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, string> map_string_string = 14;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_string_string_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_map_string_string().begin();
      it != this->_internal_map_string_string().end(); ++it) {
    total_size += TestArenaMap_MapStringStringEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, bytes> map_int32_bytes = 15;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int32_bytes_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, std::string >::const_iterator
      it = this->_internal_map_int32_bytes().begin();
      it != this->_internal_map_int32_bytes().end(); ++it) {
    total_size += TestArenaMap_MapInt32BytesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .protobuf_unittest.MapEnum> map_int32_enum = 16;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int32_enum_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::protobuf_unittest::MapEnum >::const_iterator
      it = this->_internal_map_int32_enum().begin();
      it != this->_internal_map_int32_enum().end(); ++it) {
    total_size += TestArenaMap_MapInt32EnumEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .protobuf_unittest.ForeignMessage> map_int32_foreign_message = 17;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_int32_foreign_message_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::protobuf_unittest::ForeignMessage >::const_iterator
      it = this->_internal_map_int32_foreign_message().begin();
      it != this->_internal_map_int32_foreign_message().end(); ++it) {
    total_size += TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TestArenaMap::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TestArenaMap::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TestArenaMap::GetClassData() const { return &_class_data_; }

void TestArenaMap::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TestArenaMap *>(to)->MergeFrom(
      static_cast<const TestArenaMap &>(from));
}


void TestArenaMap::MergeFrom(const TestArenaMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestArenaMap)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  map_int32_int32_.MergeFrom(from.map_int32_int32_);
  map_int64_int64_.MergeFrom(from.map_int64_int64_);
  map_uint32_uint32_.MergeFrom(from.map_uint32_uint32_);
  map_uint64_uint64_.MergeFrom(from.map_uint64_uint64_);
  map_sint32_sint32_.MergeFrom(from.map_sint32_sint32_);
  map_sint64_sint64_.MergeFrom(from.map_sint64_sint64_);
  map_fixed32_fixed32_.MergeFrom(from.map_fixed32_fixed32_);
  map_fixed64_fixed64_.MergeFrom(from.map_fixed64_fixed64_);
  map_sfixed32_sfixed32_.MergeFrom(from.map_sfixed32_sfixed32_);
  map_sfixed64_sfixed64_.MergeFrom(from.map_sfixed64_sfixed64_);
  map_int32_float_.MergeFrom(from.map_int32_float_);
  map_int32_double_.MergeFrom(from.map_int32_double_);
  map_bool_bool_.MergeFrom(from.map_bool_bool_);
  map_string_string_.MergeFrom(from.map_string_string_);
  map_int32_bytes_.MergeFrom(from.map_int32_bytes_);
  map_int32_enum_.MergeFrom(from.map_int32_enum_);
  map_int32_foreign_message_.MergeFrom(from.map_int32_foreign_message_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TestArenaMap::CopyFrom(const TestArenaMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestArenaMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestArenaMap::IsInitialized() const {
  return true;
}

void TestArenaMap::InternalSwap(TestArenaMap* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  map_int32_int32_.InternalSwap(&other->map_int32_int32_);
  map_int64_int64_.InternalSwap(&other->map_int64_int64_);
  map_uint32_uint32_.InternalSwap(&other->map_uint32_uint32_);
  map_uint64_uint64_.InternalSwap(&other->map_uint64_uint64_);
  map_sint32_sint32_.InternalSwap(&other->map_sint32_sint32_);
  map_sint64_sint64_.InternalSwap(&other->map_sint64_sint64_);
  map_fixed32_fixed32_.InternalSwap(&other->map_fixed32_fixed32_);
  map_fixed64_fixed64_.InternalSwap(&other->map_fixed64_fixed64_);
  map_sfixed32_sfixed32_.InternalSwap(&other->map_sfixed32_sfixed32_);
  map_sfixed64_sfixed64_.InternalSwap(&other->map_sfixed64_sfixed64_);
  map_int32_float_.InternalSwap(&other->map_int32_float_);
  map_int32_double_.InternalSwap(&other->map_int32_double_);
  map_bool_bool_.InternalSwap(&other->map_bool_bool_);
  map_string_string_.InternalSwap(&other->map_string_string_);
  map_int32_bytes_.InternalSwap(&other->map_int32_bytes_);
  map_int32_enum_.InternalSwap(&other->map_int32_enum_);
  map_int32_foreign_message_.InternalSwap(&other->map_int32_foreign_message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestArenaMap::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[45]);
}

// ===================================================================

MessageContainingEnumCalledType_TypeEntry_DoNotUse::MessageContainingEnumCalledType_TypeEntry_DoNotUse() {}
MessageContainingEnumCalledType_TypeEntry_DoNotUse::MessageContainingEnumCalledType_TypeEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MessageContainingEnumCalledType_TypeEntry_DoNotUse::MergeFrom(const MessageContainingEnumCalledType_TypeEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MessageContainingEnumCalledType_TypeEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[46]);
}

// ===================================================================

class MessageContainingEnumCalledType::_Internal {
 public:
};

MessageContainingEnumCalledType::MessageContainingEnumCalledType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  type_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &MessageContainingEnumCalledType::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.MessageContainingEnumCalledType)
}
MessageContainingEnumCalledType::MessageContainingEnumCalledType(const MessageContainingEnumCalledType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_.MergeFrom(from.type_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.MessageContainingEnumCalledType)
}

inline void MessageContainingEnumCalledType::SharedCtor() {
}

MessageContainingEnumCalledType::~MessageContainingEnumCalledType() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.MessageContainingEnumCalledType)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void MessageContainingEnumCalledType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  type_.Destruct();
}

void MessageContainingEnumCalledType::ArenaDtor(void* object) {
  MessageContainingEnumCalledType* _this = reinterpret_cast< MessageContainingEnumCalledType* >(object);
  _this->type_.Destruct();
}
void MessageContainingEnumCalledType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MessageContainingEnumCalledType::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.MessageContainingEnumCalledType)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageContainingEnumCalledType::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .protobuf_unittest.MessageContainingEnumCalledType> type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&type_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MessageContainingEnumCalledType::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.MessageContainingEnumCalledType)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .protobuf_unittest.MessageContainingEnumCalledType> type = 1;
  if (!this->_internal_type().empty()) {
    using MapType = ::_pb::Map<std::string, ::protobuf_unittest::MessageContainingEnumCalledType>;
    using WireHelper = MessageContainingEnumCalledType_TypeEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_type();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "protobuf_unittest.MessageContainingEnumCalledType.TypeEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.MessageContainingEnumCalledType)
  return target;
}

size_t MessageContainingEnumCalledType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.MessageContainingEnumCalledType)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .protobuf_unittest.MessageContainingEnumCalledType> type = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_type_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_unittest::MessageContainingEnumCalledType >::const_iterator
      it = this->_internal_type().begin();
      it != this->_internal_type().end(); ++it) {
    total_size += MessageContainingEnumCalledType_TypeEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageContainingEnumCalledType::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MessageContainingEnumCalledType::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageContainingEnumCalledType::GetClassData() const { return &_class_data_; }

void MessageContainingEnumCalledType::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MessageContainingEnumCalledType *>(to)->MergeFrom(
      static_cast<const MessageContainingEnumCalledType &>(from));
}


void MessageContainingEnumCalledType::MergeFrom(const MessageContainingEnumCalledType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.MessageContainingEnumCalledType)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  type_.MergeFrom(from.type_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessageContainingEnumCalledType::CopyFrom(const MessageContainingEnumCalledType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.MessageContainingEnumCalledType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageContainingEnumCalledType::IsInitialized() const {
  return true;
}

void MessageContainingEnumCalledType::InternalSwap(MessageContainingEnumCalledType* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  type_.InternalSwap(&other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageContainingEnumCalledType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[47]);
}

// ===================================================================

MessageContainingMapCalledEntry_EntryEntry_DoNotUse::MessageContainingMapCalledEntry_EntryEntry_DoNotUse() {}
MessageContainingMapCalledEntry_EntryEntry_DoNotUse::MessageContainingMapCalledEntry_EntryEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MessageContainingMapCalledEntry_EntryEntry_DoNotUse::MergeFrom(const MessageContainingMapCalledEntry_EntryEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MessageContainingMapCalledEntry_EntryEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[48]);
}

// ===================================================================

class MessageContainingMapCalledEntry::_Internal {
 public:
};

MessageContainingMapCalledEntry::MessageContainingMapCalledEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entry_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &MessageContainingMapCalledEntry::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.MessageContainingMapCalledEntry)
}
MessageContainingMapCalledEntry::MessageContainingMapCalledEntry(const MessageContainingMapCalledEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  entry_.MergeFrom(from.entry_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.MessageContainingMapCalledEntry)
}

inline void MessageContainingMapCalledEntry::SharedCtor() {
}

MessageContainingMapCalledEntry::~MessageContainingMapCalledEntry() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.MessageContainingMapCalledEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void MessageContainingMapCalledEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  entry_.Destruct();
}

void MessageContainingMapCalledEntry::ArenaDtor(void* object) {
  MessageContainingMapCalledEntry* _this = reinterpret_cast< MessageContainingMapCalledEntry* >(object);
  _this->entry_.Destruct();
}
void MessageContainingMapCalledEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MessageContainingMapCalledEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.MessageContainingMapCalledEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entry_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageContainingMapCalledEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<int32, int32> entry = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&entry_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MessageContainingMapCalledEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.MessageContainingMapCalledEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, int32> entry = 1;
  if (!this->_internal_entry().empty()) {
    using MapType = ::_pb::Map<int32_t, int32_t>;
    using WireHelper = MessageContainingMapCalledEntry_EntryEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_entry();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.MessageContainingMapCalledEntry)
  return target;
}

size_t MessageContainingMapCalledEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.MessageContainingMapCalledEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, int32> entry = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_entry_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::const_iterator
      it = this->_internal_entry().begin();
      it != this->_internal_entry().end(); ++it) {
    total_size += MessageContainingMapCalledEntry_EntryEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageContainingMapCalledEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MessageContainingMapCalledEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageContainingMapCalledEntry::GetClassData() const { return &_class_data_; }

void MessageContainingMapCalledEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MessageContainingMapCalledEntry *>(to)->MergeFrom(
      static_cast<const MessageContainingMapCalledEntry &>(from));
}


void MessageContainingMapCalledEntry::MergeFrom(const MessageContainingMapCalledEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.MessageContainingMapCalledEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  entry_.MergeFrom(from.entry_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessageContainingMapCalledEntry::CopyFrom(const MessageContainingMapCalledEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.MessageContainingMapCalledEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageContainingMapCalledEntry::IsInitialized() const {
  return true;
}

void MessageContainingMapCalledEntry::InternalSwap(MessageContainingMapCalledEntry* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  entry_.InternalSwap(&other->entry_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageContainingMapCalledEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[49]);
}

// ===================================================================

TestRecursiveMapMessage_AEntry_DoNotUse::TestRecursiveMapMessage_AEntry_DoNotUse() {}
TestRecursiveMapMessage_AEntry_DoNotUse::TestRecursiveMapMessage_AEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestRecursiveMapMessage_AEntry_DoNotUse::MergeFrom(const TestRecursiveMapMessage_AEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestRecursiveMapMessage_AEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[50]);
}

// ===================================================================

class TestRecursiveMapMessage::_Internal {
 public:
};

TestRecursiveMapMessage::TestRecursiveMapMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  a_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &TestRecursiveMapMessage::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRecursiveMapMessage)
}
TestRecursiveMapMessage::TestRecursiveMapMessage(const TestRecursiveMapMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  a_.MergeFrom(from.a_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRecursiveMapMessage)
}

inline void TestRecursiveMapMessage::SharedCtor() {
}

TestRecursiveMapMessage::~TestRecursiveMapMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRecursiveMapMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void TestRecursiveMapMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  a_.Destruct();
}

void TestRecursiveMapMessage::ArenaDtor(void* object) {
  TestRecursiveMapMessage* _this = reinterpret_cast< TestRecursiveMapMessage* >(object);
  _this->a_.Destruct();
}
void TestRecursiveMapMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TestRecursiveMapMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRecursiveMapMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  a_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TestRecursiveMapMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .protobuf_unittest.TestRecursiveMapMessage> a = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&a_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TestRecursiveMapMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRecursiveMapMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .protobuf_unittest.TestRecursiveMapMessage> a = 1;
  if (!this->_internal_a().empty()) {
    using MapType = ::_pb::Map<std::string, ::protobuf_unittest::TestRecursiveMapMessage>;
    using WireHelper = TestRecursiveMapMessage_AEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_a();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "protobuf_unittest.TestRecursiveMapMessage.AEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRecursiveMapMessage)
  return target;
}

size_t TestRecursiveMapMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRecursiveMapMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .protobuf_unittest.TestRecursiveMapMessage> a = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_a_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_unittest::TestRecursiveMapMessage >::const_iterator
      it = this->_internal_a().begin();
      it != this->_internal_a().end(); ++it) {
    total_size += TestRecursiveMapMessage_AEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TestRecursiveMapMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TestRecursiveMapMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TestRecursiveMapMessage::GetClassData() const { return &_class_data_; }

void TestRecursiveMapMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TestRecursiveMapMessage *>(to)->MergeFrom(
      static_cast<const TestRecursiveMapMessage &>(from));
}


void TestRecursiveMapMessage::MergeFrom(const TestRecursiveMapMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRecursiveMapMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  a_.MergeFrom(from.a_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TestRecursiveMapMessage::CopyFrom(const TestRecursiveMapMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRecursiveMapMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRecursiveMapMessage::IsInitialized() const {
  return true;
}

void TestRecursiveMapMessage::InternalSwap(TestRecursiveMapMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  a_.InternalSwap(&other->a_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestRecursiveMapMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fmap_5funittest_2eproto[51]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapInt32Int32Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapInt32Int32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapInt32Int32Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapInt64Int64Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapInt64Int64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapInt64Int64Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapUint32Uint32Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapUint32Uint32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapUint32Uint32Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapUint64Uint64Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapUint64Uint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapUint64Uint64Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapSint32Sint32Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapSint32Sint32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapSint32Sint32Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapSint64Sint64Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapSint64Sint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapSint64Sint64Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapFixed32Fixed32Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapFixed32Fixed32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapFixed32Fixed32Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapFixed64Fixed64Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapFixed64Fixed64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapFixed64Fixed64Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapSfixed32Sfixed32Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapSfixed32Sfixed32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapSfixed32Sfixed32Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapSfixed64Sfixed64Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapSfixed64Sfixed64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapSfixed64Sfixed64Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapInt32FloatEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapInt32FloatEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapInt32FloatEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapInt32DoubleEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapInt32DoubleEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapInt32DoubleEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapBoolBoolEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapBoolBoolEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapBoolBoolEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapStringStringEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapStringStringEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapStringStringEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapInt32BytesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapInt32BytesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapInt32BytesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapInt32EnumEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapInt32EnumEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapInt32EnumEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapInt32ForeignMessageEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapInt32ForeignMessageEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapInt32ForeignMessageEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapStringForeignMessageEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapStringForeignMessageEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapStringForeignMessageEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap_MapInt32AllTypesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap_MapInt32AllTypesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap_MapInt32AllTypesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMap*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMap >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMapSubmessage*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMapSubmessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMapSubmessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMessageMap_MapInt32MessageEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMessageMap_MapInt32MessageEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMessageMap_MapInt32MessageEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMessageMap*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestMessageMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMessageMap >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestSameTypeMap_Map1Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestSameTypeMap_Map1Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestSameTypeMap_Map1Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestSameTypeMap_Map2Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestSameTypeMap_Map2Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestSameTypeMap_Map2Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestSameTypeMap*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestSameTypeMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestSameTypeMap >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestRequiredMessageMap_MapFieldEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestRequiredMessageMap_MapFieldEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestRequiredMessageMap_MapFieldEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestRequiredMessageMap*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestRequiredMessageMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestRequiredMessageMap >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapInt32Int32Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapInt32Int32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapInt32Int32Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapInt64Int64Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapInt64Int64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapInt64Int64Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapUint32Uint32Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapUint32Uint32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapUint32Uint32Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapUint64Uint64Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapUint64Uint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapUint64Uint64Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapSint32Sint32Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapSint32Sint32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapSint32Sint32Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapSint64Sint64Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapSint64Sint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapSint64Sint64Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapFixed32Fixed32Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapFixed32Fixed32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapFixed32Fixed32Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapFixed64Fixed64Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapFixed64Fixed64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapFixed64Fixed64Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapInt32FloatEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapInt32FloatEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapInt32FloatEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapInt32DoubleEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapInt32DoubleEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapInt32DoubleEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapBoolBoolEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapBoolBoolEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapBoolBoolEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapStringStringEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapStringStringEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapStringStringEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapInt32BytesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapInt32BytesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapInt32BytesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapInt32EnumEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapInt32EnumEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapInt32EnumEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestArenaMap*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestArenaMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestArenaMap >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MessageContainingEnumCalledType_TypeEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::MessageContainingEnumCalledType_TypeEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::MessageContainingEnumCalledType_TypeEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MessageContainingEnumCalledType*
Arena::CreateMaybeMessage< ::protobuf_unittest::MessageContainingEnumCalledType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::MessageContainingEnumCalledType >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MessageContainingMapCalledEntry_EntryEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::MessageContainingMapCalledEntry_EntryEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::MessageContainingMapCalledEntry_EntryEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::MessageContainingMapCalledEntry*
Arena::CreateMaybeMessage< ::protobuf_unittest::MessageContainingMapCalledEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::MessageContainingMapCalledEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestRecursiveMapMessage_AEntry_DoNotUse*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestRecursiveMapMessage_AEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestRecursiveMapMessage_AEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestRecursiveMapMessage*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestRecursiveMapMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestRecursiveMapMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
