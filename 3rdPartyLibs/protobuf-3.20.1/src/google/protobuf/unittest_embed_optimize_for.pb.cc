// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_embed_optimize_for.proto

#include "google/protobuf/unittest_embed_optimize_for.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace protobuf_unittest {
PROTOBUF_CONSTEXPR TestEmbedOptimizedForSize::TestEmbedOptimizedForSize(
    ::_pbi::ConstantInitialized)
  : repeated_message_()
  , optional_message_(nullptr){}
struct TestEmbedOptimizedForSizeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEmbedOptimizedForSizeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEmbedOptimizedForSizeDefaultTypeInternal() {}
  union {
    TestEmbedOptimizedForSize _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEmbedOptimizedForSizeDefaultTypeInternal _TestEmbedOptimizedForSize_default_instance_;
}  // namespace protobuf_unittest
static ::_pb::Metadata file_level_metadata_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto = nullptr;

const uint32_t TableStruct_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEmbedOptimizedForSize, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEmbedOptimizedForSize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEmbedOptimizedForSize, optional_message_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEmbedOptimizedForSize, repeated_message_),
  0,
  ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::protobuf_unittest::TestEmbedOptimizedForSize)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::protobuf_unittest::_TestEmbedOptimizedForSize_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n1google/protobuf/unittest_embed_optimiz"
  "e_for.proto\022\021protobuf_unittest\032+google/p"
  "rotobuf/unittest_optimize_for.proto\"\241\001\n\031"
  "TestEmbedOptimizedForSize\022A\n\020optional_me"
  "ssage\030\001 \001(\0132\'.protobuf_unittest.TestOpti"
  "mizedForSize\022A\n\020repeated_message\030\002 \003(\0132\'"
  ".protobuf_unittest.TestOptimizedForSizeB"
  "\002H\001"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2funittest_5foptimize_5ffor_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto = {
    false, false, 283, descriptor_table_protodef_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto,
    "google/protobuf/unittest_embed_optimize_for.proto",
    &descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto_once, descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto_deps, 1, 1,
    schemas, file_default_instances, TableStruct_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto::offsets,
    file_level_metadata_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto, file_level_enum_descriptors_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto,
    file_level_service_descriptors_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto_getter() {
  return &descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto(&descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto);
namespace protobuf_unittest {

// ===================================================================

class TestEmbedOptimizedForSize::_Internal {
 public:
  using HasBits = decltype(std::declval<TestEmbedOptimizedForSize>()._has_bits_);
  static const ::protobuf_unittest::TestOptimizedForSize& optional_message(const TestEmbedOptimizedForSize* msg);
  static void set_has_optional_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestOptimizedForSize&
TestEmbedOptimizedForSize::_Internal::optional_message(const TestEmbedOptimizedForSize* msg) {
  return *msg->optional_message_;
}
void TestEmbedOptimizedForSize::clear_optional_message() {
  if (optional_message_ != nullptr) optional_message_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void TestEmbedOptimizedForSize::clear_repeated_message() {
  repeated_message_.Clear();
}
TestEmbedOptimizedForSize::TestEmbedOptimizedForSize(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  repeated_message_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestEmbedOptimizedForSize)
}
TestEmbedOptimizedForSize::TestEmbedOptimizedForSize(const TestEmbedOptimizedForSize& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      repeated_message_(from.repeated_message_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_optional_message()) {
    optional_message_ = new ::protobuf_unittest::TestOptimizedForSize(*from.optional_message_);
  } else {
    optional_message_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEmbedOptimizedForSize)
}

inline void TestEmbedOptimizedForSize::SharedCtor() {
optional_message_ = nullptr;
}

TestEmbedOptimizedForSize::~TestEmbedOptimizedForSize() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEmbedOptimizedForSize)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TestEmbedOptimizedForSize::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete optional_message_;
}

void TestEmbedOptimizedForSize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TestEmbedOptimizedForSize::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEmbedOptimizedForSize)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  repeated_message_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(optional_message_ != nullptr);
    optional_message_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TestEmbedOptimizedForSize::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .protobuf_unittest.TestOptimizedForSize optional_message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_optional_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .protobuf_unittest.TestOptimizedForSize repeated_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_repeated_message(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TestEmbedOptimizedForSize::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEmbedOptimizedForSize)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .protobuf_unittest.TestOptimizedForSize optional_message = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::optional_message(this),
        _Internal::optional_message(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestOptimizedForSize repeated_message = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_message(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEmbedOptimizedForSize)
  return target;
}

size_t TestEmbedOptimizedForSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEmbedOptimizedForSize)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestOptimizedForSize repeated_message = 2;
  total_size += 1UL * this->_internal_repeated_message_size();
  for (const auto& msg : this->repeated_message_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .protobuf_unittest.TestOptimizedForSize optional_message = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *optional_message_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TestEmbedOptimizedForSize::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TestEmbedOptimizedForSize::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TestEmbedOptimizedForSize::GetClassData() const { return &_class_data_; }

void TestEmbedOptimizedForSize::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TestEmbedOptimizedForSize *>(to)->MergeFrom(
      static_cast<const TestEmbedOptimizedForSize &>(from));
}


void TestEmbedOptimizedForSize::MergeFrom(const TestEmbedOptimizedForSize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEmbedOptimizedForSize)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  repeated_message_.MergeFrom(from.repeated_message_);
  if (from._internal_has_optional_message()) {
    _internal_mutable_optional_message()->::protobuf_unittest::TestOptimizedForSize::MergeFrom(from._internal_optional_message());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TestEmbedOptimizedForSize::CopyFrom(const TestEmbedOptimizedForSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEmbedOptimizedForSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestEmbedOptimizedForSize::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(repeated_message_))
    return false;
  if (_internal_has_optional_message()) {
    if (!optional_message_->IsInitialized()) return false;
  }
  return true;
}

void TestEmbedOptimizedForSize::InternalSwap(TestEmbedOptimizedForSize* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  repeated_message_.InternalSwap(&other->repeated_message_);
  swap(optional_message_, other->optional_message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestEmbedOptimizedForSize::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestEmbedOptimizedForSize*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestEmbedOptimizedForSize >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestEmbedOptimizedForSize >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
